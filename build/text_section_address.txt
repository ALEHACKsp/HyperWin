
hypervisor.so:     file format elf64-x86-64


Disassembly of section .text:

0000000003300000 <multiboot2_header_start>:
 3300000:	d6                   	(bad)  
 3300001:	50                   	push   %rax
 3300002:	52                   	push   %rdx
 3300003:	e8 00 00 00 00       	callq  3300008 <multiboot2_header_start+0x8>
 3300008:	3e 00 00             	add    %al,%ds:(%rax)
 330000b:	00 ec                	add    %ch,%ah
 330000d:	ae                   	scas   %es:(%rdi),%al
 330000e:	ad                   	lods   %ds:(%rsi),%eax
 330000f:	17                   	(bad)  

0000000003300010 <multiboot2_address_tag_start>:
 3300010:	02 00                	add    (%rax),%al
 3300012:	00 00                	add    %al,(%rax)
 3300014:	18 00                	sbb    %al,(%rax)
 3300016:	00 00                	add    %al,(%rax)
 3300018:	00 00                	add    %al,(%rax)
 330001a:	30 03                	xor    %al,(%rbx)
 330001c:	ff                   	(bad)  
 330001d:	ff                   	(bad)  
 330001e:	ff                   	(bad)  
 330001f:	ff 00                	incl   (%rax)
 3300021:	00 00                	add    %al,(%rax)
 3300023:	00 00                	add    %al,(%rax)
 3300025:	00 00                	add    %al,(%rax)
	...

0000000003300028 <multiboot2_address_tag_end>:
 3300028:	03 00                	add    (%rax),%eax
 330002a:	00 00                	add    %al,(%rax)
 330002c:	0c 00                	or     $0x0,%al
 330002e:	00 00                	add    %al,(%rax)
 3300030:	3e 00 30             	add    %dh,%ds:(%rax)
 3300033:	03                   	.byte 0x3

0000000003300034 <multiboot2_entry_address_tag_end>:
	...
 330003c:	08 00                	or     %al,(%rax)

000000000330003e <_start>:
 330003e:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300043:	c7 00 03 80 01 00    	movl   $0x18003,(%rax)
 3300049:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 3300050:	b8 00 90 01 00       	mov    $0x19000,%eax
 3300055:	bf 00 80 01 00       	mov    $0x18000,%edi
 330005a:	b9 10 00 00 00       	mov    $0x10,%ecx

000000000330005f <_start.setup_pdpt>:
 330005f:	89 c2                	mov    %eax,%edx
 3300061:	83 ca 03             	or     $0x3,%edx
 3300064:	89 17                	mov    %edx,(%rdi)
 3300066:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
 330006d:	05 00 10 00 00       	add    $0x1000,%eax
 3300072:	83 c7 08             	add    $0x8,%edi
 3300075:	e2 e8                	loop   330005f <_start.setup_pdpt>
 3300077:	b9 03 00 00 00       	mov    $0x3,%ecx
 330007c:	c1 e1 09             	shl    $0x9,%ecx
 330007f:	31 c0                	xor    %eax,%eax
 3300081:	bb 83 00 00 00       	mov    $0x83,%ebx
 3300086:	bf 00 90 01 00       	mov    $0x19000,%edi

000000000330008b <_start.setup_pds>:
 330008b:	09 d8                	or     %ebx,%eax
 330008d:	89 07                	mov    %eax,(%rdi)
 330008f:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
 3300096:	83 c7 08             	add    $0x8,%edi
 3300099:	05 00 00 20 00       	add    $0x200000,%eax
 330009e:	e2 eb                	loop   330008b <_start.setup_pds>
 33000a0:	b8 00 10 00 00       	mov    $0x1000,%eax
 33000a5:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 33000aa:	b8 02 10 00 00       	mov    $0x1002,%eax
 33000af:	c7 00 00 20 00 00    	movl   $0x2000,(%rax)
 33000b5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 33000bc:	b8 00 20 00 00       	mov    $0x2000,%eax
 33000c1:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 33000c7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 33000ce:	b8 08 20 00 00       	mov    $0x2008,%eax
 33000d3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 33000d9:	c7 40 04 00 9b a0 00 	movl   $0xa09b00,0x4(%rax)
 33000e0:	b8 10 20 00 00       	mov    $0x2010,%eax
 33000e5:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 33000eb:	c7 40 04 00 93 cf 00 	movl   $0xcf9300,0x4(%rax)
 33000f2:	b8 18 20 00 00       	mov    $0x2018,%eax
 33000f7:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 33000fd:	c7 40 04 00 9a cf 00 	movl   $0xcf9a00,0x4(%rax)
 3300104:	b8 20 20 00 00       	mov    $0x2020,%eax
 3300109:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 330010f:	c7 40 04 00 9a 00 00 	movl   $0x9a00,0x4(%rax)
 3300116:	b8 28 20 00 00       	mov    $0x2028,%eax
 330011b:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 3300121:	c7 40 04 00 92 00 00 	movl   $0x9200,0x4(%rax)
 3300128:	0f 01 15 00 10 00 00 	lgdt   0x1000(%rip)        # 330112f <InitializeHypervisorsSharedData+0x123>
 330012f:	0f 20 c0             	mov    %cr0,%rax
 3300132:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 3300137:	0f 22 c0             	mov    %rax,%cr0
 330013a:	0f 20 e0             	mov    %cr4,%rax
 330013d:	83 c8 20             	or     $0x20,%eax
 3300140:	0f 22 e0             	mov    %rax,%cr4
 3300143:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300148:	0f 22 d8             	mov    %rax,%cr3
 330014b:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300150:	0f 32                	rdmsr  
 3300152:	0d 00 01 00 00       	or     $0x100,%eax
 3300157:	0f 30                	wrmsr  
 3300159:	0f 20 c0             	mov    %cr0,%rax
 330015c:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300161:	0f 22 c0             	mov    %rax,%cr0
 3300164:	ea                   	(bad)  
 3300165:	6b 01 30             	imul   $0x30,(%rcx),%eax
 3300168:	03 08                	add    (%rax),%ecx
	...

000000000330016b <CompatibilityTo64>:
 330016b:	fa                   	cli    
 330016c:	66 b8 10 00          	mov    $0x10,%ax
 3300170:	8e d0                	mov    %eax,%ss
 3300172:	8e c0                	mov    %eax,%es
 3300174:	8e d8                	mov    %eax,%ds
 3300176:	8e e0                	mov    %eax,%fs
 3300178:	8e e8                	mov    %eax,%gs
 330017a:	b9 10 00 00 00       	mov    $0x10,%ecx
 330017f:	48 c1 e1 09          	shl    $0x9,%rcx
 3300183:	48 31 c0             	xor    %rax,%rax
 3300186:	48 0d 83 00 00 00    	or     $0x83,%rax
 330018c:	bf 00 90 01 00       	mov    $0x19000,%edi

0000000003300191 <CompatibilityTo64.setup_pds_long_mode>:
 3300191:	48 89 07             	mov    %rax,(%rdi)
 3300194:	48 83 c7 08          	add    $0x8,%rdi
 3300198:	48 05 00 00 20 00    	add    $0x200000,%rax
 330019e:	e2 f1                	loop   3300191 <CompatibilityTo64.setup_pds_long_mode>
 33001a0:	bc 00 00 80 02       	mov    $0x2800000,%esp
 33001a5:	e8 f9 0d 00 00       	callq  3300fa3 <Initialize>
 33001aa:	6a 10                	pushq  $0x10
 33001ac:	b8 f0 5f 02 00       	mov    $0x25ff0,%eax
 33001b1:	50                   	push   %rax
 33001b2:	9c                   	pushfq 
 33001b3:	6a 18                	pushq  $0x18
 33001b5:	68 00 42 00 00       	pushq  $0x4200
 33001ba:	48 cf                	iretq  

00000000033001bc <SetupSystemAndHandleControlToBios>:
 33001bc:	fa                   	cli    
 33001bd:	b8 00 75 00 00       	mov    $0x7500,%eax
 33001c2:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 33001c7:	c7 40 02 00 00 00 00 	movl   $0x0,0x2(%rax)
 33001ce:	c7 40 06 00 00 00 00 	movl   $0x0,0x6(%rax)
 33001d5:	0f 01 1d 00 75 00 00 	lidt   0x7500(%rip)        # 33076dc <functionsEnd+0x7fc>
 33001dc:	ea                   	(bad)  
 33001dd:	27                   	(bad)  
 33001de:	42 00 00             	rex.X add %al,(%rax)
 33001e1:	20 00                	and    %al,(%rax)

00000000033001e3 <SetupRealMode>:
 33001e3:	b8 28 00 8e d0       	mov    $0xd08e0028,%eax
 33001e8:	8e c0                	mov    %eax,%es
 33001ea:	8e d8                	mov    %eax,%ds
 33001ec:	8e e0                	mov    %eax,%fs
 33001ee:	8e e8                	mov    %eax,%gs
 33001f0:	0f 20 c0             	mov    %cr0,%rax
 33001f3:	66 25 fe ff          	and    $0xfffe,%ax
 33001f7:	ff                   	(bad)  
 33001f8:	7f 0f                	jg     3300209 <SetupRealMode+0x26>
 33001fa:	22 c0                	and    %al,%al
 33001fc:	0f 20 e0             	mov    %cr4,%rax
 33001ff:	66 83 e0 df          	and    $0xffdf,%ax
 3300203:	0f 22 e0             	mov    %rax,%cr4
 3300206:	66 b9 80 00          	mov    $0x80,%cx
 330020a:	00 c0                	add    %al,%al
 330020c:	0f 32                	rdmsr  
 330020e:	66 25 ff fe          	and    $0xfeff,%ax
 3300212:	ff                   	(bad)  
 3300213:	ff 0f                	decl   (%rdi)
 3300215:	30 ea                	xor    %ch,%dl
 3300217:	5f                   	pop    %rdi
 3300218:	42 00 00             	rex.X add %al,(%rax)

000000000330021b <HandleControlToBios>:
 330021b:	8a 16                	mov    (%rsi),%dl
 330021d:	10 60 b8             	adc    %ah,-0x48(%rax)
 3300220:	00 00                	add    %al,(%rax)
 3300222:	8e d8                	mov    %eax,%ds
 3300224:	8e c0                	mov    %eax,%es
 3300226:	8e d0                	mov    %eax,%ss
 3300228:	8e e0                	mov    %eax,%fs
 330022a:	8e e8                	mov    %eax,%gs
 330022c:	66 b8 44 33          	mov    $0x3344,%ax
 3300230:	22 11                	and    (%rcx),%dl
 3300232:	0f 01 c1             	vmcall 

0000000003300235 <SetupSystemAndHandleControlToBiosEnd>:
 3300235:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 330023c:	00 00 00 
 330023f:	90                   	nop

0000000003300240 <AsmEnterRealModeRunFunction>:
 3300240:	55                   	push   %rbp
 3300241:	54                   	push   %rsp
 3300242:	48 89 24 25 00 60 00 	mov    %rsp,0x6000
 3300249:	00 
 330024a:	6a 10                	pushq  $0x10
 330024c:	b8 f0 5f 02 00       	mov    $0x25ff0,%eax
 3300251:	50                   	push   %rax
 3300252:	9c                   	pushfq 
 3300253:	6a 18                	pushq  $0x18
 3300255:	68 00 42 00 00       	pushq  $0x4200
 330025a:	48 cf                	iretq  

000000000330025c <AsmReturnFromRealModeFunction>:
 330025c:	fa                   	cli    
 330025d:	66 b8 10 00          	mov    $0x10,%ax
 3300261:	8e d8                	mov    %eax,%ds
 3300263:	8e d0                	mov    %eax,%ss
 3300265:	8e c0                	mov    %eax,%es
 3300267:	8e e0                	mov    %eax,%fs
 3300269:	8e e8                	mov    %eax,%gs
 330026b:	48 8b 24 25 00 60 00 	mov    0x6000,%rsp
 3300272:	00 
 3300273:	5c                   	pop    %rsp
 3300274:	5d                   	pop    %rbp
 3300275:	c3                   	retq   

0000000003300276 <EnterRealMode>:
 3300276:	fa                   	cli    
 3300277:	b8 00 75 00 00       	mov    $0x7500,%eax
 330027c:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 3300281:	c7 40 02 00 00 00 00 	movl   $0x0,0x2(%rax)
 3300288:	c7 40 06 00 00 00 00 	movl   $0x0,0x6(%rax)
 330028f:	0f 01 1d 00 75 00 00 	lidt   0x7500(%rip)        # 3307796 <functionsEnd+0x8b6>
 3300296:	ea                   	(bad)  
 3300297:	27                   	(bad)  
 3300298:	42 00 00             	rex.X add %al,(%rax)
 330029b:	20 00                	and    %al,(%rax)

000000000330029d <DisableLongMode>:
 330029d:	b8 28 00 8e d0       	mov    $0xd08e0028,%eax
 33002a2:	8e c0                	mov    %eax,%es
 33002a4:	8e d8                	mov    %eax,%ds
 33002a6:	8e e0                	mov    %eax,%fs
 33002a8:	8e e8                	mov    %eax,%gs
 33002aa:	0f 20 c0             	mov    %cr0,%rax
 33002ad:	66 25 fe ff          	and    $0xfffe,%ax
 33002b1:	ff                   	(bad)  
 33002b2:	7f 0f                	jg     33002c3 <DisableLongMode+0x26>
 33002b4:	22 c0                	and    %al,%al
 33002b6:	0f 20 e0             	mov    %cr4,%rax
 33002b9:	66 83 e0 df          	and    $0xffdf,%ax
 33002bd:	0f 22 e0             	mov    %rax,%cr4
 33002c0:	66 b9 80 00          	mov    $0x80,%cx
 33002c4:	00 c0                	add    %al,%al
 33002c6:	0f 32                	rdmsr  
 33002c8:	66 25 ff fe          	and    $0xfeff,%ax
 33002cc:	ff                   	(bad)  
 33002cd:	ff 0f                	decl   (%rdi)
 33002cf:	30 ea                	xor    %ch,%dl
 33002d1:	cc                   	int3   
 33002d2:	42 00 00             	rex.X add %al,(%rax)

00000000033002d5 <BackToLongMode>:
 33002d5:	fa                   	cli    
 33002d6:	0f 01 16             	lgdt   (%rsi)
 33002d9:	00 10                	add    %dl,(%rax)
 33002db:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 33002e0:	8e d8                	mov    %eax,%ds
 33002e2:	8e c0                	mov    %eax,%es
 33002e4:	8e e0                	mov    %eax,%fs
 33002e6:	8e e8                	mov    %eax,%gs
 33002e8:	0f 20 c0             	mov    %cr0,%rax
 33002eb:	66 83 c8 01          	or     $0x1,%ax
 33002ef:	0f 22 c0             	mov    %rax,%cr0
 33002f2:	ea                   	(bad)  
 33002f3:	81                   	.byte 0x81
 33002f4:	42 18 00             	rex.X sbb %al,(%rax)

00000000033002f7 <EnableProtectedMode>:
 33002f7:	fa                   	cli    
 33002f8:	66 b8 10 00          	mov    $0x10,%ax
 33002fc:	8e d0                	mov    %eax,%ss
 33002fe:	8e d8                	mov    %eax,%ds
 3300300:	8e c0                	mov    %eax,%es
 3300302:	8e e8                	mov    %eax,%gs
 3300304:	8e e0                	mov    %eax,%fs
 3300306:	0f 20 c0             	mov    %cr0,%rax
 3300309:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 330030e:	0f 22 c0             	mov    %rax,%cr0
 3300311:	0f 20 e0             	mov    %cr4,%rax
 3300314:	83 c8 20             	or     $0x20,%eax
 3300317:	0f 22 e0             	mov    %rax,%cr4
 330031a:	b8 00 70 01 00       	mov    $0x17000,%eax
 330031f:	0f 22 d8             	mov    %rax,%cr3
 3300322:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300327:	0f 32                	rdmsr  
 3300329:	0d 00 01 00 00       	or     $0x100,%eax
 330032e:	0f 30                	wrmsr  
 3300330:	0f 20 c0             	mov    %cr0,%rax
 3300333:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300338:	0f 22 c0             	mov    %rax,%cr0
 330033b:	ea                   	(bad)  
 330033c:	5c                   	pop    %rsp
 330033d:	02 30                	add    (%rax),%dh
 330033f:	03 08                	add    (%rax),%ecx
	...

0000000003300342 <DiskReader>:
 3300342:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 3300347:	8e c0                	mov    %eax,%es
 3300349:	8e d8                	mov    %eax,%ds
 330034b:	8e e0                	mov    %eax,%fs
 330034d:	8e e8                	mov    %eax,%gs
 330034f:	66 31 c0             	xor    %ax,%ax
 3300352:	be 00 40 b4 42       	mov    $0x42b44000,%esi
 3300357:	8a 16                	mov    (%rsi),%dl
 3300359:	10 40 31             	adc    %al,0x31(%rax)
 330035c:	db cd                	fcmovne %st(5),%st
 330035e:	13 ea                	adc    %edx,%ebp
 3300360:	5f                   	pop    %rdi
 3300361:	42 00 00             	rex.X add %al,(%rax)

0000000003300364 <DiskReaderEnd>:
 3300364:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 3300369:	8e c0                	mov    %eax,%es
 330036b:	8e d8                	mov    %eax,%ds
 330036d:	8e e0                	mov    %eax,%fs
 330036f:	8e e8                	mov    %eax,%gs
 3300371:	bf 02 86 66 31       	mov    $0x31668602,%edi
 3300376:	db 31                	(bad)  (%rcx)
 3300378:	ed                   	in     (%dx),%eax
 3300379:	66 ba 50 41          	mov    $0x4150,%dx
 330037d:	4d 53                	rex.WRB push %r11
 330037f:	66 b8 20 e8          	mov    $0xe820,%ax
 3300383:	00 00                	add    %al,(%rax)
 3300385:	26 66 c7 45 14 01 00 	movw   $0x1,%es:0x14(%rbp)
 330038c:	00 00                	add    %al,(%rax)
 330038e:	66 b9 18 00          	mov    $0x18,%cx
 3300392:	00 00                	add    %al,(%rax)
 3300394:	cd 15                	int    $0x15
 3300396:	72 5e                	jb     33003f6 <GetMemoryMap.failure>
 3300398:	66 ba 50 41          	mov    $0x4150,%dx
 330039c:	4d 53                	rex.WRB push %r11
 330039e:	66 39 d0             	cmp    %dx,%ax
 33003a1:	75 53                	jne    33003f6 <GetMemoryMap.failure>
 33003a3:	66 85 db             	test   %bx,%bx
 33003a6:	74 4e                	je     33003f6 <GetMemoryMap.failure>
 33003a8:	eb 1f                	jmp    33003c9 <GetMemoryMap.jmpin>

00000000033003aa <GetMemoryMap.e820lp>:
 33003aa:	66 b8 20 e8          	mov    $0xe820,%ax
 33003ae:	00 00                	add    %al,(%rax)
 33003b0:	26 66 c7 45 14 01 00 	movw   $0x1,%es:0x14(%rbp)
 33003b7:	00 00                	add    %al,(%rax)
 33003b9:	66 b9 18 00          	mov    $0x18,%cx
 33003bd:	00 00                	add    %al,(%rax)
 33003bf:	cd 15                	int    $0x15
 33003c1:	72 29                	jb     33003ec <GetMemoryMap.e820f>
 33003c3:	66 ba 50 41          	mov    $0x4150,%dx
 33003c7:	4d 53                	rex.WRB push %r11

00000000033003c9 <GetMemoryMap.jmpin>:
 33003c9:	e3 1c                	jrcxz  33003e7 <GetMemoryMap.skipent>
 33003cb:	80 f9 14             	cmp    $0x14,%cl
 33003ce:	76 07                	jbe    33003d7 <GetMemoryMap.notext>
 33003d0:	26 f6 45 14 01       	testb  $0x1,%es:0x14(%rbp)
 33003d5:	74 10                	je     33003e7 <GetMemoryMap.skipent>

00000000033003d7 <GetMemoryMap.notext>:
 33003d7:	26 66 8b 4d 08       	mov    %es:0x8(%rbp),%cx
 33003dc:	26 66 0b 4d 0c       	or     %es:0xc(%rbp),%cx
 33003e1:	74 04                	je     33003e7 <GetMemoryMap.skipent>
 33003e3:	45 83 c7 18          	rex.RB add $0x18,%r15d

00000000033003e7 <GetMemoryMap.skipent>:
 33003e7:	66 85 db             	test   %bx,%bx
 33003ea:	75 be                	jne    33003aa <GetMemoryMap.e820lp>

00000000033003ec <GetMemoryMap.e820f>:
 33003ec:	89 2e                	mov    %ebp,(%rsi)
 33003ee:	00 86 f8 ea 5f 42    	add    %al,0x425feaf8(%rsi)
	...

00000000033003f6 <GetMemoryMap.failure>:
 33003f6:	66 b8 00 86          	mov    $0x8600,%ax
 33003fa:	00 00                	add    %al,(%rax)
 33003fc:	67 c6 00 00          	movb   $0x0,(%eax)
 3300400:	f9                   	stc    
 3300401:	ea                   	(bad)  
 3300402:	5f                   	pop    %rdi
 3300403:	42 00 00             	rex.X add %al,(%rax)

0000000003300406 <GetMemoryMapEnd>:
 3300406:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 330040b:	8e c0                	mov    %eax,%es
 330040d:	8e d8                	mov    %eax,%ds
 330040f:	8e e0                	mov    %eax,%fs
 3300411:	8e e8                	mov    %eax,%gs
 3300413:	b0 00                	mov    $0x0,%al
 3300415:	b4 86                	mov    $0x86,%ah
 3300417:	8b 0e                	mov    (%rsi),%ecx
 3300419:	00 40 8b             	add    %al,-0x75(%rax)
 330041c:	16                   	(bad)  
 330041d:	02 40 cd             	add    -0x33(%rax),%al
 3300420:	15 ea 5f 42 00       	adc    $0x425fea,%eax
	...

0000000003300426 <SleepAsmEnd>:
 3300426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 330042d:	00 00 00 

0000000003300430 <ApicStart>:
 3300430:	fa                   	cli    
 3300431:	0f 01 16             	lgdt   (%rsi)
 3300434:	00 10                	add    %dl,(%rax)
 3300436:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 330043b:	8e d8                	mov    %eax,%ds
 330043d:	8e c0                	mov    %eax,%es
 330043f:	8e e0                	mov    %eax,%fs
 3300441:	8e e8                	mov    %eax,%gs
 3300443:	0f 20 c0             	mov    %cr0,%rax
 3300446:	66 83 c8 01          	or     $0x1,%ax
 330044a:	0f 22 c0             	mov    %rax,%cr0
 330044d:	ea                   	(bad)  
 330044e:	22                   	.byte 0x22
 330044f:	80 18 00             	sbbb   $0x0,(%rax)

0000000003300452 <ApicEnableLongMode>:
 3300452:	66 b8 10 00          	mov    $0x10,%ax
 3300456:	8e d0                	mov    %eax,%ss
 3300458:	8e d8                	mov    %eax,%ds
 330045a:	8e c0                	mov    %eax,%es
 330045c:	8e e8                	mov    %eax,%gs
 330045e:	8e e0                	mov    %eax,%fs
 3300460:	0f 20 c0             	mov    %cr0,%rax
 3300463:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 3300468:	0f 22 c0             	mov    %rax,%cr0
 330046b:	0f 20 e0             	mov    %cr4,%rax
 330046e:	83 c8 20             	or     $0x20,%eax
 3300471:	0f 22 e0             	mov    %rax,%cr4
 3300474:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300479:	0f 22 d8             	mov    %rax,%cr3
 330047c:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300481:	0f 32                	rdmsr  
 3300483:	0d 00 01 00 00       	or     $0x100,%eax
 3300488:	0f 30                	wrmsr  
 330048a:	0f 20 c0             	mov    %cr0,%rax
 330048d:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300492:	0f 22 c0             	mov    %rax,%cr0
 3300495:	ea                   	(bad)  
 3300496:	6c                   	insb   (%dx),%es:(%rdi)
 3300497:	80 00 00             	addb   $0x0,(%rax)
 330049a:	08 00                	or     %al,(%rax)

000000000330049c <ApicLongMode>:
 330049c:	bc 00 00 77 00       	mov    $0x770000,%esp
 33004a1:	48 8b 3c 25 00 40 00 	mov    0x4000,%rdi
 33004a8:	00 
 33004a9:	ff 14 25 08 40 00 00 	callq  *0x4008
 33004b0:	48 31 c0             	xor    %rax,%rax
 33004b3:	48 31 db             	xor    %rbx,%rbx
 33004b6:	48 31 c9             	xor    %rcx,%rcx
 33004b9:	48 31 d2             	xor    %rdx,%rdx
 33004bc:	48 31 ff             	xor    %rdi,%rdi
 33004bf:	48 31 f6             	xor    %rsi,%rsi
 33004c2:	48 31 e4             	xor    %rsp,%rsp
 33004c5:	48 31 ed             	xor    %rbp,%rbp
 33004c8:	4d 31 c0             	xor    %r8,%r8
 33004cb:	4d 31 c9             	xor    %r9,%r9
 33004ce:	4d 31 d2             	xor    %r10,%r10
 33004d1:	4d 31 db             	xor    %r11,%r11
 33004d4:	4d 31 e4             	xor    %r12,%r12
 33004d7:	4d 31 ed             	xor    %r13,%r13
 33004da:	4d 31 f6             	xor    %r14,%r14
 33004dd:	4d 31 ff             	xor    %r15,%r15
 33004e0:	f4                   	hlt    

00000000033004e1 <ApicEnd>:
 33004e1:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 33004e8:	00 00 00 
 33004eb:	0f 1f 44 00 00       	nopl   0x0(%rax,%rax,1)

00000000033004f0 <UpdateInstructionPointer>:
 33004f0:	48 01 3c 24          	add    %rdi,(%rsp)
 33004f4:	48 8b 04 24          	mov    (%rsp),%rax
 33004f8:	c3                   	retq   

00000000033004f9 <GetNextInstructionAddress>:
 33004f9:	48 8b 04 24          	mov    (%rsp),%rax
 33004fd:	c3                   	retq   

00000000033004fe <GetGDT>:
 33004fe:	0f 01 07             	sgdt   (%rdi)
 3300501:	c3                   	retq   

0000000003300502 <GetIDT>:
 3300502:	0f 01 0f             	sidt   (%rdi)
 3300505:	c3                   	retq   

0000000003300506 <GetCS>:
 3300506:	8c c8                	mov    %cs,%eax
 3300508:	c3                   	retq   

0000000003300509 <GetDS>:
 3300509:	8c d8                	mov    %ds,%eax
 330050b:	c3                   	retq   

000000000330050c <GetSS>:
 330050c:	8c d0                	mov    %ss,%eax
 330050e:	c3                   	retq   

000000000330050f <GetES>:
 330050f:	8c c0                	mov    %es,%eax
 3300511:	c3                   	retq   

0000000003300512 <GetFS>:
 3300512:	8c e0                	mov    %fs,%eax
 3300514:	c3                   	retq   

0000000003300515 <GetGS>:
 3300515:	8c e8                	mov    %gs,%eax
 3300517:	c3                   	retq   
 3300518:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 330051f:	00 

0000000003300520 <SetupCompleteBackToGuestState>:
 3300520:	b8 1c 68 00 00       	mov    $0x681c,%eax
 3300525:	0f 79 c4             	vmwrite %rsp,%rax
 3300528:	0f 01 c2             	vmlaunch 
 330052b:	b8 08 00 00 00       	mov    $0x8,%eax
 3300530:	c3                   	retq   

0000000003300531 <VmmToVm>:
 3300531:	b8 00 00 00 00       	mov    $0x0,%eax
 3300536:	c3                   	retq   

0000000003300537 <HandleVmExit>:
 3300537:	64 48 89 04 25 00 00 	mov    %rax,%fs:0x0
 330053e:	00 00 
 3300540:	64 48 89 1c 25 08 00 	mov    %rbx,%fs:0x8
 3300547:	00 00 
 3300549:	64 48 89 0c 25 10 00 	mov    %rcx,%fs:0x10
 3300550:	00 00 
 3300552:	64 48 89 14 25 18 00 	mov    %rdx,%fs:0x18
 3300559:	00 00 
 330055b:	64 48 89 34 25 20 00 	mov    %rsi,%fs:0x20
 3300562:	00 00 
 3300564:	64 48 89 3c 25 28 00 	mov    %rdi,%fs:0x28
 330056b:	00 00 
 330056d:	64 48 89 2c 25 30 00 	mov    %rbp,%fs:0x30
 3300574:	00 00 
 3300576:	64 4c 89 04 25 38 00 	mov    %r8,%fs:0x38
 330057d:	00 00 
 330057f:	64 4c 89 0c 25 40 00 	mov    %r9,%fs:0x40
 3300586:	00 00 
 3300588:	64 4c 89 14 25 48 00 	mov    %r10,%fs:0x48
 330058f:	00 00 
 3300591:	64 4c 89 1c 25 50 00 	mov    %r11,%fs:0x50
 3300598:	00 00 
 330059a:	64 4c 89 24 25 58 00 	mov    %r12,%fs:0x58
 33005a1:	00 00 
 33005a3:	64 4c 89 2c 25 60 00 	mov    %r13,%fs:0x60
 33005aa:	00 00 
 33005ac:	64 4c 89 34 25 68 00 	mov    %r14,%fs:0x68
 33005b3:	00 00 
 33005b5:	64 4c 89 3c 25 70 00 	mov    %r15,%fs:0x70
 33005bc:	00 00 
 33005be:	b8 1c 68 00 00       	mov    $0x681c,%eax
 33005c3:	0f 78 c3             	vmread %rax,%rbx
 33005c6:	64 48 89 1c 25 78 00 	mov    %rbx,%fs:0x78
 33005cd:	00 00 
 33005cf:	b8 1e 68 00 00       	mov    $0x681e,%eax
 33005d4:	0f 78 c3             	vmread %rax,%rbx
 33005d7:	64 48 89 1c 25 80 00 	mov    %rbx,%fs:0x80
 33005de:	00 00 
 33005e0:	e8 cf 4b 00 00       	callq  33051b4 <HandleVmExitEx>
 33005e5:	64 48 8b 0c 25 10 00 	mov    %fs:0x10,%rcx
 33005ec:	00 00 
 33005ee:	64 48 8b 14 25 18 00 	mov    %fs:0x18,%rdx
 33005f5:	00 00 
 33005f7:	64 48 8b 34 25 20 00 	mov    %fs:0x20,%rsi
 33005fe:	00 00 
 3300600:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
 3300607:	00 00 
 3300609:	64 48 8b 2c 25 30 00 	mov    %fs:0x30,%rbp
 3300610:	00 00 
 3300612:	64 4c 8b 04 25 38 00 	mov    %fs:0x38,%r8
 3300619:	00 00 
 330061b:	64 4c 8b 0c 25 40 00 	mov    %fs:0x40,%r9
 3300622:	00 00 
 3300624:	64 4c 8b 14 25 48 00 	mov    %fs:0x48,%r10
 330062b:	00 00 
 330062d:	64 4c 8b 1c 25 50 00 	mov    %fs:0x50,%r11
 3300634:	00 00 
 3300636:	64 4c 8b 24 25 58 00 	mov    %fs:0x58,%r12
 330063d:	00 00 
 330063f:	64 4c 8b 2c 25 60 00 	mov    %fs:0x60,%r13
 3300646:	00 00 
 3300648:	64 4c 8b 34 25 68 00 	mov    %fs:0x68,%r14
 330064f:	00 00 
 3300651:	64 4c 8b 3c 25 70 00 	mov    %fs:0x70,%r15
 3300658:	00 00 
 330065a:	b8 1c 68 00 00       	mov    $0x681c,%eax
 330065f:	64 48 8b 1c 25 78 00 	mov    %fs:0x78,%rbx
 3300666:	00 00 
 3300668:	0f 79 c3             	vmwrite %rbx,%rax
 330066b:	b8 1e 68 00 00       	mov    $0x681e,%eax
 3300670:	64 48 8b 1c 25 80 00 	mov    %fs:0x80,%rbx
 3300677:	00 00 
 3300679:	0f 79 c3             	vmwrite %rbx,%rax
 330067c:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
 3300683:	00 00 
 3300685:	64 48 8b 1c 25 08 00 	mov    %fs:0x8,%rbx
 330068c:	00 00 
 330068e:	0f 01 c3             	vmresume 

0000000003300691 <HandleVmExit.assertHandleVmExit>:
 3300691:	66 ba e8 03          	mov    $0x3e8,%dx
 3300695:	b0 46                	mov    $0x46,%al
 3300697:	ee                   	out    %al,(%dx)
 3300698:	eb f7                	jmp    3300691 <HandleVmExit.assertHandleVmExit>

000000000330069a <GetCoresData>:
 330069a:	f3 0f 1e fa          	endbr64 
 330069e:	55                   	push   %rbp
 330069f:	48 89 e5             	mov    %rsp,%rbp
 33006a2:	48 83 ec 28          	sub    $0x28,%rsp
 33006a6:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 33006aa:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 33006ae:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 33006b2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33006b6:	48 83 c0 04          	add    $0x4,%rax
 33006ba:	8b 00                	mov    (%rax),%eax
 33006bc:	89 c0                	mov    %eax,%eax
 33006be:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33006c2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33006c6:	c6 00 00             	movb   $0x0,(%rax)
 33006c9:	48 c7 45 f8 2c 00 00 	movq   $0x2c,-0x8(%rbp)
 33006d0:	00 
 33006d1:	eb 5e                	jmp    3300731 <GetCoresData+0x97>
 33006d3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33006d7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33006db:	48 01 d0             	add    %rdx,%rax
 33006de:	0f b6 00             	movzbl (%rax),%eax
 33006e1:	0f b6 c0             	movzbl %al,%eax
 33006e4:	85 c0                	test   %eax,%eax
 33006e6:	75 30                	jne    3300718 <GetCoresData+0x7e>
 33006e8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33006ec:	48 8d 50 02          	lea    0x2(%rax),%rdx
 33006f0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33006f4:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 33006f8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33006fc:	0f b6 00             	movzbl (%rax),%eax
 33006ff:	8d 48 01             	lea    0x1(%rax),%ecx
 3300702:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3300706:	88 0a                	mov    %cl,(%rdx)
 3300708:	0f b6 d0             	movzbl %al,%edx
 330070b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330070f:	48 01 c2             	add    %rax,%rdx
 3300712:	0f b6 06             	movzbl (%rsi),%eax
 3300715:	88 02                	mov    %al,(%rdx)
 3300717:	90                   	nop
 3300718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330071c:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3300720:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300724:	48 01 d0             	add    %rdx,%rax
 3300727:	0f b6 00             	movzbl (%rax),%eax
 330072a:	0f b6 c0             	movzbl %al,%eax
 330072d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3300731:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300735:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
 3300739:	72 98                	jb     33006d3 <GetCoresData+0x39>
 330073b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330073f:	0f b6 00             	movzbl (%rax),%eax
 3300742:	84 c0                	test   %al,%al
 3300744:	75 07                	jne    330074d <GetCoresData+0xb3>
 3300746:	b8 07 00 00 00       	mov    $0x7,%eax
 330074b:	eb 05                	jmp    3300752 <GetCoresData+0xb8>
 330074d:	b8 00 00 00 00       	mov    $0x0,%eax
 3300752:	c9                   	leaveq 
 3300753:	c3                   	retq   

0000000003300754 <DetectX2APICAvailability>:
 3300754:	f3 0f 1e fa          	endbr64 
 3300758:	55                   	push   %rbp
 3300759:	48 89 e5             	mov    %rsp,%rbp
 330075c:	53                   	push   %rbx
 330075d:	48 83 ec 40          	sub    $0x40,%rsp
 3300761:	48 c7 45 f0 01 00 00 	movq   $0x1,-0x10(%rbp)
 3300768:	00 
 3300769:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300770:	00 
 3300771:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 3300775:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3300779:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 330077d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300781:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 3300785:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300789:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 330078d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3300791:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300795:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3300799:	48 89 d1             	mov    %rdx,%rcx
 330079c:	0f a2                	cpuid  
 330079e:	48 89 de             	mov    %rbx,%rsi
 33007a1:	48 89 c7             	mov    %rax,%rdi
 33007a4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33007a8:	48 89 38             	mov    %rdi,(%rax)
 33007ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33007af:	48 89 30             	mov    %rsi,(%rax)
 33007b2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33007b6:	48 89 08             	mov    %rcx,(%rax)
 33007b9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33007bd:	48 89 10             	mov    %rdx,(%rax)
 33007c0:	90                   	nop
 33007c1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 33007c5:	25 00 00 20 00       	and    $0x200000,%eax
 33007ca:	48 85 c0             	test   %rax,%rax
 33007cd:	74 07                	je     33007d6 <DetectX2APICAvailability+0x82>
 33007cf:	b8 00 00 00 00       	mov    $0x0,%eax
 33007d4:	eb 05                	jmp    33007db <DetectX2APICAvailability+0x87>
 33007d6:	b8 1a 00 00 00       	mov    $0x1a,%eax
 33007db:	48 83 c4 40          	add    $0x40,%rsp
 33007df:	5b                   	pop    %rbx
 33007e0:	5d                   	pop    %rbp
 33007e1:	c3                   	retq   

00000000033007e2 <EnableX2APIC>:
 33007e2:	f3 0f 1e fa          	endbr64 
 33007e6:	55                   	push   %rbp
 33007e7:	48 89 e5             	mov    %rsp,%rbp
 33007ea:	48 83 ec 30          	sub    $0x30,%rsp
 33007ee:	b8 00 00 00 00       	mov    $0x0,%eax
 33007f3:	e8 5c ff ff ff       	callq  3300754 <DetectX2APICAvailability>
 33007f8:	48 85 c0             	test   %rax,%rax
 33007fb:	74 13                	je     3300810 <EnableX2APIC+0x2e>
 33007fd:	48 8d 3d 5c 54 00 00 	lea    0x545c(%rip),%rdi        # 3305c60 <CopyMemoryToGuest+0xf9>
 3300804:	b8 00 00 00 00       	mov    $0x0,%eax
 3300809:	e8 97 19 00 00       	callq  33021a5 <Print>
 330080e:	eb fe                	jmp    330080e <EnableX2APIC+0x2c>
 3300810:	48 c7 45 e8 1b 00 00 	movq   $0x1b,-0x18(%rbp)
 3300817:	00 
 3300818:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 330081f:	00 
 3300820:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 3300827:	00 
 3300828:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330082c:	48 89 c1             	mov    %rax,%rcx
 330082f:	0f 32                	rdmsr  
 3300831:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 3300835:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300839:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330083d:	48 c1 e0 20          	shl    $0x20,%rax
 3300841:	48 0b 45 d8          	or     -0x28(%rbp),%rax
 3300845:	80 cc 0c             	or     $0xc,%ah
 3300848:	48 c7 45 f8 1b 00 00 	movq   $0x1b,-0x8(%rbp)
 330084f:	00 
 3300850:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3300854:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300858:	48 c1 e8 20          	shr    $0x20,%rax
 330085c:	48 89 c2             	mov    %rax,%rdx
 330085f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300863:	89 c0                	mov    %eax,%eax
 3300865:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 3300869:	0f 30                	wrmsr  
 330086b:	90                   	nop
 330086c:	90                   	nop
 330086d:	c9                   	leaveq 
 330086e:	c3                   	retq   

000000000330086f <IssueIPI>:
 330086f:	f3 0f 1e fa          	endbr64 
 3300873:	55                   	push   %rbp
 3300874:	48 89 e5             	mov    %rsp,%rbp
 3300877:	48 83 ec 40          	sub    $0x40,%rsp
 330087b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 330087f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3300883:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3300887:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 330088b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330088f:	48 c1 e0 20          	shl    $0x20,%rax
 3300893:	48 0b 45 c8          	or     -0x38(%rbp),%rax
 3300897:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 330089b:	48 0b 45 c0          	or     -0x40(%rbp),%rax
 330089f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33008a3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33008a7:	48 89 c6             	mov    %rax,%rsi
 33008aa:	48 8d 3d 28 54 00 00 	lea    0x5428(%rip),%rdi        # 3305cd9 <CopyMemoryToGuest+0x172>
 33008b1:	b8 00 00 00 00       	mov    $0x0,%eax
 33008b6:	e8 ea 18 00 00       	callq  33021a5 <Print>
 33008bb:	48 c7 45 f0 30 08 00 	movq   $0x830,-0x10(%rbp)
 33008c2:	00 
 33008c3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33008c7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33008cb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33008cf:	48 c1 e8 20          	shr    $0x20,%rax
 33008d3:	48 89 c2             	mov    %rax,%rdx
 33008d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33008da:	89 c0                	mov    %eax,%eax
 33008dc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 33008e0:	0f 30                	wrmsr  
 33008e2:	90                   	nop
 33008e3:	90                   	nop
 33008e4:	c9                   	leaveq 
 33008e5:	c3                   	retq   

00000000033008e6 <ActivateHypervisorOnProcessor>:
 33008e6:	f3 0f 1e fa          	endbr64 
 33008ea:	55                   	push   %rbp
 33008eb:	48 89 e5             	mov    %rsp,%rbp
 33008ee:	48 83 ec 30          	sub    $0x30,%rsp
 33008f2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33008f6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33008fa:	48 c7 c0 e1 04 30 03 	mov    $0x33004e1,%rax
 3300901:	48 89 c2             	mov    %rax,%rdx
 3300904:	48 c7 c0 30 04 30 03 	mov    $0x3300430,%rax
 330090b:	48 29 c2             	sub    %rax,%rdx
 330090e:	48 89 d0             	mov    %rdx,%rax
 3300911:	48 89 c2             	mov    %rax,%rdx
 3300914:	48 c7 c0 30 04 30 03 	mov    $0x3300430,%rax
 330091b:	48 89 c6             	mov    %rax,%rsi
 330091e:	bf 00 80 00 00       	mov    $0x8000,%edi
 3300923:	e8 89 1a 00 00       	callq  33023b1 <CopyMemory>
 3300928:	b8 00 00 00 00       	mov    $0x0,%eax
 330092d:	e8 b0 fe ff ff       	callq  33007e2 <EnableX2APIC>
 3300932:	48 c7 45 f8 02 08 00 	movq   $0x802,-0x8(%rbp)
 3300939:	00 
 330093a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300941:	00 
 3300942:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300949:	00 
 330094a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330094e:	48 89 c1             	mov    %rax,%rcx
 3300951:	0f 32                	rdmsr  
 3300953:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 3300957:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 330095b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330095f:	48 c1 e0 20          	shl    $0x20,%rax
 3300963:	48 0b 45 e8          	or     -0x18(%rbp),%rax
 3300967:	48 89 c6             	mov    %rax,%rsi
 330096a:	48 8d 3d 72 53 00 00 	lea    0x5372(%rip),%rdi        # 3305ce3 <CopyMemoryToGuest+0x17c>
 3300971:	b8 00 00 00 00       	mov    $0x0,%eax
 3300976:	e8 2a 18 00 00       	callq  33021a5 <Print>
 330097b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330097f:	b9 00 00 00 00       	mov    $0x0,%ecx
 3300984:	ba 00 05 00 00       	mov    $0x500,%edx
 3300989:	be 00 00 00 00       	mov    $0x0,%esi
 330098e:	48 89 c7             	mov    %rax,%rdi
 3300991:	e8 d9 fe ff ff       	callq  330086f <IssueIPI>
 3300996:	bf e8 03 00 00       	mov    $0x3e8,%edi
 330099b:	e8 59 02 00 00       	callq  3300bf9 <Sleep>
 33009a0:	ba 00 40 00 00       	mov    $0x4000,%edx
 33009a5:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33009a9:	48 89 02             	mov    %rax,(%rdx)
 33009ac:	ba 08 40 00 00       	mov    $0x4008,%edx
 33009b1:	48 c7 c0 3c 3a 30 03 	mov    $0x3303a3c,%rax
 33009b8:	48 89 02             	mov    %rax,(%rdx)
 33009bb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33009bf:	b9 00 40 00 00       	mov    $0x4000,%ecx
 33009c4:	ba 00 06 00 00       	mov    $0x600,%edx
 33009c9:	be 08 00 00 00       	mov    $0x8,%esi
 33009ce:	48 89 c7             	mov    %rax,%rdi
 33009d1:	e8 99 fe ff ff       	callq  330086f <IssueIPI>
 33009d6:	bf e8 03 00 00       	mov    $0x3e8,%edi
 33009db:	e8 19 02 00 00       	callq  3300bf9 <Sleep>
 33009e0:	48 8d 3d 09 53 00 00 	lea    0x5309(%rip),%rdi        # 3305cf0 <CopyMemoryToGuest+0x189>
 33009e7:	b8 00 00 00 00       	mov    $0x0,%eax
 33009ec:	e8 b4 17 00 00       	callq  33021a5 <Print>
 33009f1:	48 8d 3d 00 53 00 00 	lea    0x5300(%rip),%rdi        # 3305cf8 <CopyMemoryToGuest+0x191>
 33009f8:	b8 00 00 00 00       	mov    $0x0,%eax
 33009fd:	e8 a3 17 00 00       	callq  33021a5 <Print>
 3300a02:	eb fe                	jmp    3300a02 <ActivateHypervisorOnProcessor+0x11c>

0000000003300a04 <EnterRealModeRunFunction>:
 3300a04:	f3 0f 1e fa          	endbr64 
 3300a08:	55                   	push   %rbp
 3300a09:	48 89 e5             	mov    %rsp,%rbp
 3300a0c:	48 83 ec 30          	sub    $0x30,%rsp
 3300a10:	89 f8                	mov    %edi,%eax
 3300a12:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3300a16:	88 45 dc             	mov    %al,-0x24(%rbp)
 3300a19:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 3300a1d:	48 c7 c0 c0 6e 30 03 	mov    $0x3306ec0,%rax
 3300a24:	48 63 d2             	movslq %edx,%rdx
 3300a27:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3300a2b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300a2f:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 3300a33:	48 c7 c0 e0 6e 30 03 	mov    $0x3306ee0,%rax
 3300a3a:	48 63 d2             	movslq %edx,%rdx
 3300a3d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3300a41:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3300a45:	48 c7 c0 42 03 30 03 	mov    $0x3300342,%rax
 3300a4c:	48 89 c2             	mov    %rax,%rdx
 3300a4f:	48 c7 c0 76 02 30 03 	mov    $0x3300276,%rax
 3300a56:	48 29 c2             	sub    %rax,%rdx
 3300a59:	48 89 d0             	mov    %rdx,%rax
 3300a5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3300a60:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300a64:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
 3300a68:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3300a6c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300a70:	48 89 c2             	mov    %rax,%rdx
 3300a73:	48 c7 c0 76 02 30 03 	mov    $0x3300276,%rax
 3300a7a:	48 89 c6             	mov    %rax,%rsi
 3300a7d:	bf 00 42 00 00       	mov    $0x4200,%edi
 3300a82:	e8 2a 19 00 00       	callq  33023b1 <CopyMemory>
 3300a87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300a8b:	48 8d 88 00 42 00 00 	lea    0x4200(%rax),%rcx
 3300a92:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3300a96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300a9a:	48 89 c6             	mov    %rax,%rsi
 3300a9d:	48 89 cf             	mov    %rcx,%rdi
 3300aa0:	e8 0c 19 00 00       	callq  33023b1 <CopyMemory>
 3300aa5:	b8 00 00 00 00       	mov    $0x0,%eax
 3300aaa:	e8 91 f7 ff ff       	callq  3300240 <AsmEnterRealModeRunFunction>
 3300aaf:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
 3300ab4:	74 08                	je     3300abe <EnterRealModeRunFunction+0xba>
 3300ab6:	48 c7 45 d0 00 22 00 	movq   $0x2200,-0x30(%rbp)
 3300abd:	00 
 3300abe:	90                   	nop
 3300abf:	c9                   	leaveq 
 3300ac0:	c3                   	retq   

0000000003300ac1 <ReadFirstSectorToRam>:
 3300ac1:	f3 0f 1e fa          	endbr64 
 3300ac5:	55                   	push   %rbp
 3300ac6:	48 89 e5             	mov    %rsp,%rbp
 3300ac9:	48 83 ec 20          	sub    $0x20,%rsp
 3300acd:	89 f8                	mov    %edi,%eax
 3300acf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3300ad3:	88 45 ec             	mov    %al,-0x14(%rbp)
 3300ad6:	48 c7 45 f8 00 40 00 	movq   $0x4000,-0x8(%rbp)
 3300add:	00 
 3300ade:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300ae2:	c6 00 10             	movb   $0x10,(%rax)
 3300ae5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300ae9:	c6 40 01 00          	movb   $0x0,0x1(%rax)
 3300aed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300af1:	66 c7 40 02 01 00    	movw   $0x1,0x2(%rax)
 3300af7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300afb:	66 c7 40 04 00 30    	movw   $0x3000,0x4(%rax)
 3300b01:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300b05:	66 c7 40 06 00 00    	movw   $0x0,0x6(%rax)
 3300b0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300b0f:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
 3300b16:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300b1a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
 3300b21:	ba 10 40 00 00       	mov    $0x4010,%edx
 3300b26:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
 3300b2a:	88 02                	mov    %al,(%rdx)
 3300b2c:	be 00 00 00 00       	mov    $0x0,%esi
 3300b31:	bf 00 00 00 00       	mov    $0x0,%edi
 3300b36:	e8 c9 fe ff ff       	callq  3300a04 <EnterRealModeRunFunction>
 3300b3b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 3300b40:	75 24                	jne    3300b66 <ReadFirstSectorToRam+0xa5>
 3300b42:	48 8d 3d 0f 52 00 00 	lea    0x520f(%rip),%rdi        # 3305d58 <CopyMemoryToGuest+0x1f1>
 3300b49:	b8 00 00 00 00       	mov    $0x0,%eax
 3300b4e:	e8 52 16 00 00       	callq  33021a5 <Print>
 3300b53:	48 8d 3d 3e 52 00 00 	lea    0x523e(%rip),%rdi        # 3305d98 <CopyMemoryToGuest+0x231>
 3300b5a:	b8 00 00 00 00       	mov    $0x0,%eax
 3300b5f:	e8 41 16 00 00       	callq  33021a5 <Print>
 3300b64:	eb fe                	jmp    3300b64 <ReadFirstSectorToRam+0xa3>
 3300b66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300b6a:	48 c7 00 00 30 00 00 	movq   $0x3000,(%rax)
 3300b71:	90                   	nop
 3300b72:	c9                   	leaveq 
 3300b73:	c3                   	retq   

0000000003300b74 <LoadMBRToEntryPoint>:
 3300b74:	f3 0f 1e fa          	endbr64 
 3300b78:	55                   	push   %rbp
 3300b79:	48 89 e5             	mov    %rsp,%rbp
 3300b7c:	48 83 ec 10          	sub    $0x10,%rsp
 3300b80:	c6 45 ff 80          	movb   $0x80,-0x1(%rbp)
 3300b84:	eb 69                	jmp    3300bef <LoadMBRToEntryPoint+0x7b>
 3300b86:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300b8a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
 3300b8e:	48 89 d6             	mov    %rdx,%rsi
 3300b91:	89 c7                	mov    %eax,%edi
 3300b93:	e8 29 ff ff ff       	callq  3300ac1 <ReadFirstSectorToRam>
 3300b98:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300b9c:	48 05 fe 01 00 00    	add    $0x1fe,%rax
 3300ba2:	0f b7 00             	movzwl (%rax),%eax
 3300ba5:	66 3d 55 aa          	cmp    $0xaa55,%ax
 3300ba9:	75 3a                	jne    3300be5 <LoadMBRToEntryPoint+0x71>
 3300bab:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300baf:	89 c6                	mov    %eax,%esi
 3300bb1:	48 8d 3d 48 52 00 00 	lea    0x5248(%rip),%rdi        # 3305e00 <CopyMemoryToGuest+0x299>
 3300bb8:	b8 00 00 00 00       	mov    $0x0,%eax
 3300bbd:	e8 e3 15 00 00       	callq  33021a5 <Print>
 3300bc2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300bc6:	ba 00 02 00 00       	mov    $0x200,%edx
 3300bcb:	48 89 c6             	mov    %rax,%rsi
 3300bce:	bf 00 7c 00 00       	mov    $0x7c00,%edi
 3300bd3:	e8 d9 17 00 00       	callq  33023b1 <CopyMemory>
 3300bd8:	ba 10 60 00 00       	mov    $0x6010,%edx
 3300bdd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300be1:	88 02                	mov    %al,(%rdx)
 3300be3:	eb 11                	jmp    3300bf6 <LoadMBRToEntryPoint+0x82>
 3300be5:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300be9:	83 c0 01             	add    $0x1,%eax
 3300bec:	88 45 ff             	mov    %al,-0x1(%rbp)
 3300bef:	80 7d ff ff          	cmpb   $0xff,-0x1(%rbp)
 3300bf3:	75 91                	jne    3300b86 <LoadMBRToEntryPoint+0x12>
 3300bf5:	90                   	nop
 3300bf6:	90                   	nop
 3300bf7:	c9                   	leaveq 
 3300bf8:	c3                   	retq   

0000000003300bf9 <Sleep>:
 3300bf9:	f3 0f 1e fa          	endbr64 
 3300bfd:	55                   	push   %rbp
 3300bfe:	48 89 e5             	mov    %rsp,%rbp
 3300c01:	48 83 ec 20          	sub    $0x20,%rsp
 3300c05:	89 7d ec             	mov    %edi,-0x14(%rbp)
 3300c08:	8b 45 ec             	mov    -0x14(%rbp),%eax
 3300c0b:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
 3300c11:	89 45 fc             	mov    %eax,-0x4(%rbp)
 3300c14:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3300c17:	c1 e8 10             	shr    $0x10,%eax
 3300c1a:	ba 00 40 00 00       	mov    $0x4000,%edx
 3300c1f:	66 89 02             	mov    %ax,(%rdx)
 3300c22:	ba 02 40 00 00       	mov    $0x4002,%edx
 3300c27:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3300c2a:	66 89 02             	mov    %ax,(%rdx)
 3300c2d:	be 00 00 00 00       	mov    $0x0,%esi
 3300c32:	bf 02 00 00 00       	mov    $0x2,%edi
 3300c37:	e8 c8 fd ff ff       	callq  3300a04 <EnterRealModeRunFunction>
 3300c3c:	90                   	nop
 3300c3d:	c9                   	leaveq 
 3300c3e:	c3                   	retq   

0000000003300c3f <FindRSDT>:
 3300c3f:	f3 0f 1e fa          	endbr64 
 3300c43:	55                   	push   %rbp
 3300c44:	48 89 e5             	mov    %rsp,%rbp
 3300c47:	48 83 ec 50          	sub    $0x50,%rsp
 3300c4b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 3300c4f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 3300c53:	48 b8 52 53 44 20 50 	movabs $0x2052545020445352,%rax
 3300c5a:	54 52 20 
 3300c5d:	48 89 45 c7          	mov    %rax,-0x39(%rbp)
 3300c61:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
 3300c65:	b8 0e 04 00 00       	mov    $0x40e,%eax
 3300c6a:	0f b7 00             	movzwl (%rax),%eax
 3300c6d:	66 c1 e8 04          	shr    $0x4,%ax
 3300c71:	0f b7 c0             	movzwl %ax,%eax
 3300c74:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300c78:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300c7f:	00 
 3300c80:	eb 3a                	jmp    3300cbc <FindRSDT+0x7d>
 3300c82:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3300c86:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300c8a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3300c8e:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
 3300c92:	ba 08 00 00 00       	mov    $0x8,%edx
 3300c97:	48 89 c6             	mov    %rax,%rsi
 3300c9a:	48 89 cf             	mov    %rcx,%rdi
 3300c9d:	e8 e1 18 00 00       	callq  3302583 <CompareMemory>
 3300ca2:	85 c0                	test   %eax,%eax
 3300ca4:	75 11                	jne    3300cb7 <FindRSDT+0x78>
 3300ca6:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3300caa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300cae:	48 01 d0             	add    %rdx,%rax
 3300cb1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300cb5:	eb 58                	jmp    3300d0f <FindRSDT+0xd0>
 3300cb7:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
 3300cbc:	48 81 7d f0 23 10 00 	cmpq   $0x1023,-0x10(%rbp)
 3300cc3:	00 
 3300cc4:	76 bc                	jbe    3300c82 <FindRSDT+0x43>
 3300cc6:	48 c7 45 e8 00 00 0e 	movq   $0xe0000,-0x18(%rbp)
 3300ccd:	00 
 3300cce:	eb 2b                	jmp    3300cfb <FindRSDT+0xbc>
 3300cd0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300cd4:	48 8d 4d c7          	lea    -0x39(%rbp),%rcx
 3300cd8:	ba 08 00 00 00       	mov    $0x8,%edx
 3300cdd:	48 89 ce             	mov    %rcx,%rsi
 3300ce0:	48 89 c7             	mov    %rax,%rdi
 3300ce3:	e8 9b 18 00 00       	callq  3302583 <CompareMemory>
 3300ce8:	85 c0                	test   %eax,%eax
 3300cea:	75 0a                	jne    3300cf6 <FindRSDT+0xb7>
 3300cec:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300cf0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300cf4:	eb 19                	jmp    3300d0f <FindRSDT+0xd0>
 3300cf6:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
 3300cfb:	48 81 7d e8 fe ff 0f 	cmpq   $0xffffe,-0x18(%rbp)
 3300d02:	00 
 3300d03:	76 cb                	jbe    3300cd0 <FindRSDT+0x91>
 3300d05:	b8 01 00 00 00       	mov    $0x1,%eax
 3300d0a:	e9 e0 00 00 00       	jmpq   3300def <FindRSDT+0x1b0>
 3300d0f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3300d16:	00 
 3300d17:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
 3300d1b:	eb 1f                	jmp    3300d3c <FindRSDT+0xfd>
 3300d1d:	0f b6 55 df          	movzbl -0x21(%rbp),%edx
 3300d21:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d25:	48 01 d0             	add    %rdx,%rax
 3300d28:	0f b6 00             	movzbl (%rax),%eax
 3300d2b:	0f b6 c0             	movzbl %al,%eax
 3300d2e:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 3300d32:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
 3300d36:	83 c0 01             	add    $0x1,%eax
 3300d39:	88 45 df             	mov    %al,-0x21(%rbp)
 3300d3c:	80 7d df 13          	cmpb   $0x13,-0x21(%rbp)
 3300d40:	76 db                	jbe    3300d1d <FindRSDT+0xde>
 3300d42:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300d46:	0f b6 c0             	movzbl %al,%eax
 3300d49:	48 85 c0             	test   %rax,%rax
 3300d4c:	74 0a                	je     3300d58 <FindRSDT+0x119>
 3300d4e:	b8 03 00 00 00       	mov    $0x3,%eax
 3300d53:	e9 97 00 00 00       	jmpq   3300def <FindRSDT+0x1b0>
 3300d58:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d5c:	48 83 c0 0f          	add    $0xf,%rax
 3300d60:	0f b6 00             	movzbl (%rax),%eax
 3300d63:	3c 01                	cmp    $0x1,%al
 3300d65:	75 21                	jne    3300d88 <FindRSDT+0x149>
 3300d67:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300d6b:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
 3300d72:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d76:	48 8d 50 10          	lea    0x10(%rax),%rdx
 3300d7a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300d7e:	48 89 10             	mov    %rdx,(%rax)
 3300d81:	b8 00 00 00 00       	mov    $0x0,%eax
 3300d86:	eb 67                	jmp    3300def <FindRSDT+0x1b0>
 3300d88:	c6 45 de 00          	movb   $0x0,-0x22(%rbp)
 3300d8c:	eb 23                	jmp    3300db1 <FindRSDT+0x172>
 3300d8e:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
 3300d92:	48 8d 50 14          	lea    0x14(%rax),%rdx
 3300d96:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d9a:	48 01 d0             	add    %rdx,%rax
 3300d9d:	0f b6 00             	movzbl (%rax),%eax
 3300da0:	0f b6 c0             	movzbl %al,%eax
 3300da3:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 3300da7:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
 3300dab:	83 c0 01             	add    $0x1,%eax
 3300dae:	88 45 de             	mov    %al,-0x22(%rbp)
 3300db1:	80 7d de 0f          	cmpb   $0xf,-0x22(%rbp)
 3300db5:	76 d7                	jbe    3300d8e <FindRSDT+0x14f>
 3300db7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300dbb:	0f b6 c0             	movzbl %al,%eax
 3300dbe:	48 85 c0             	test   %rax,%rax
 3300dc1:	74 07                	je     3300dca <FindRSDT+0x18b>
 3300dc3:	b8 03 00 00 00       	mov    $0x3,%eax
 3300dc8:	eb 25                	jmp    3300def <FindRSDT+0x1b0>
 3300dca:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300dce:	48 c7 00 02 00 00 00 	movq   $0x2,(%rax)
 3300dd5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300dd9:	48 83 c0 18          	add    $0x18,%rax
 3300ddd:	48 8b 00             	mov    (%rax),%rax
 3300de0:	48 89 c2             	mov    %rax,%rdx
 3300de3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300de7:	48 89 10             	mov    %rdx,(%rax)
 3300dea:	b8 00 00 00 00       	mov    $0x0,%eax
 3300def:	c9                   	leaveq 
 3300df0:	c3                   	retq   

0000000003300df1 <LocateSystemDescriptorTable>:
 3300df1:	f3 0f 1e fa          	endbr64 
 3300df5:	55                   	push   %rbp
 3300df6:	48 89 e5             	mov    %rsp,%rbp
 3300df9:	48 83 ec 60          	sub    $0x60,%rsp
 3300dfd:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 3300e01:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 3300e05:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
 3300e09:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 3300e0d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3300e14:	00 
 3300e15:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300e1c:	00 
 3300e1d:	eb 1a                	jmp    3300e39 <LocateSystemDescriptorTable+0x48>
 3300e1f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 3300e23:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300e27:	48 01 d0             	add    %rdx,%rax
 3300e2a:	0f b6 00             	movzbl (%rax),%eax
 3300e2d:	0f b6 c0             	movzbl %al,%eax
 3300e30:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3300e34:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 3300e39:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e3d:	48 83 c0 04          	add    $0x4,%rax
 3300e41:	8b 00                	mov    (%rax),%eax
 3300e43:	89 c0                	mov    %eax,%eax
 3300e45:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3300e49:	72 d4                	jb     3300e1f <LocateSystemDescriptorTable+0x2e>
 3300e4b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300e4f:	0f b6 c0             	movzbl %al,%eax
 3300e52:	48 85 c0             	test   %rax,%rax
 3300e55:	74 0a                	je     3300e61 <LocateSystemDescriptorTable+0x70>
 3300e57:	b8 05 00 00 00       	mov    $0x5,%eax
 3300e5c:	e9 40 01 00 00       	jmpq   3300fa1 <LocateSystemDescriptorTable+0x1b0>
 3300e61:	48 83 7d a8 01       	cmpq   $0x1,-0x58(%rbp)
 3300e66:	0f 85 9d 00 00 00    	jne    3300f09 <LocateSystemDescriptorTable+0x118>
 3300e6c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e70:	48 83 c0 04          	add    $0x4,%rax
 3300e74:	8b 00                	mov    (%rax),%eax
 3300e76:	83 e8 24             	sub    $0x24,%eax
 3300e79:	c1 e8 02             	shr    $0x2,%eax
 3300e7c:	89 c0                	mov    %eax,%eax
 3300e7e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300e82:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e86:	48 83 c0 24          	add    $0x24,%rax
 3300e8a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3300e8e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300e95:	00 
 3300e96:	eb 62                	jmp    3300efa <LocateSystemDescriptorTable+0x109>
 3300e98:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300e9c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3300ea3:	00 
 3300ea4:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3300ea8:	48 01 d0             	add    %rdx,%rax
 3300eab:	8b 00                	mov    (%rax),%eax
 3300ead:	89 c0                	mov    %eax,%eax
 3300eaf:	48 89 c1             	mov    %rax,%rcx
 3300eb2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3300eb6:	ba 04 00 00 00       	mov    $0x4,%edx
 3300ebb:	48 89 ce             	mov    %rcx,%rsi
 3300ebe:	48 89 c7             	mov    %rax,%rdi
 3300ec1:	e8 bd 16 00 00       	callq  3302583 <CompareMemory>
 3300ec6:	85 c0                	test   %eax,%eax
 3300ec8:	75 2b                	jne    3300ef5 <LocateSystemDescriptorTable+0x104>
 3300eca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300ece:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3300ed5:	00 
 3300ed6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3300eda:	48 01 d0             	add    %rdx,%rax
 3300edd:	8b 00                	mov    (%rax),%eax
 3300edf:	89 c0                	mov    %eax,%eax
 3300ee1:	48 89 c2             	mov    %rax,%rdx
 3300ee4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300ee8:	48 89 10             	mov    %rdx,(%rax)
 3300eeb:	b8 00 00 00 00       	mov    $0x0,%eax
 3300ef0:	e9 ac 00 00 00       	jmpq   3300fa1 <LocateSystemDescriptorTable+0x1b0>
 3300ef5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3300efa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300efe:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 3300f02:	72 94                	jb     3300e98 <LocateSystemDescriptorTable+0xa7>
 3300f04:	e9 93 00 00 00       	jmpq   3300f9c <LocateSystemDescriptorTable+0x1ab>
 3300f09:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300f0d:	48 83 c0 04          	add    $0x4,%rax
 3300f11:	8b 00                	mov    (%rax),%eax
 3300f13:	83 e8 24             	sub    $0x24,%eax
 3300f16:	c1 e8 03             	shr    $0x3,%eax
 3300f19:	89 c0                	mov    %eax,%eax
 3300f1b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300f1f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300f23:	48 83 c0 24          	add    $0x24,%rax
 3300f27:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300f2b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3300f32:	00 
 3300f33:	eb 5d                	jmp    3300f92 <LocateSystemDescriptorTable+0x1a1>
 3300f35:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f39:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3300f40:	00 
 3300f41:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3300f45:	48 01 d0             	add    %rdx,%rax
 3300f48:	48 8b 00             	mov    (%rax),%rax
 3300f4b:	48 89 c1             	mov    %rax,%rcx
 3300f4e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3300f52:	ba 04 00 00 00       	mov    $0x4,%edx
 3300f57:	48 89 ce             	mov    %rcx,%rsi
 3300f5a:	48 89 c7             	mov    %rax,%rdi
 3300f5d:	e8 21 16 00 00       	callq  3302583 <CompareMemory>
 3300f62:	85 c0                	test   %eax,%eax
 3300f64:	75 27                	jne    3300f8d <LocateSystemDescriptorTable+0x19c>
 3300f66:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f6a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3300f71:	00 
 3300f72:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3300f76:	48 01 d0             	add    %rdx,%rax
 3300f79:	48 8b 00             	mov    (%rax),%rax
 3300f7c:	48 89 c2             	mov    %rax,%rdx
 3300f7f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300f83:	48 89 10             	mov    %rdx,(%rax)
 3300f86:	b8 00 00 00 00       	mov    $0x0,%eax
 3300f8b:	eb 14                	jmp    3300fa1 <LocateSystemDescriptorTable+0x1b0>
 3300f8d:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3300f92:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f96:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 3300f9a:	72 99                	jb     3300f35 <LocateSystemDescriptorTable+0x144>
 3300f9c:	b8 06 00 00 00       	mov    $0x6,%eax
 3300fa1:	c9                   	leaveq 
 3300fa2:	c3                   	retq   

0000000003300fa3 <Initialize>:
 3300fa3:	f3 0f 1e fa          	endbr64 
 3300fa7:	55                   	push   %rbp
 3300fa8:	48 89 e5             	mov    %rsp,%rbp
 3300fab:	48 83 ec 10          	sub    $0x10,%rsp
 3300faf:	0f 20 d8             	mov    %cr3,%rax
 3300fb2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300fb6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300fba:	48 89 c7             	mov    %rax,%rdi
 3300fbd:	e8 46 17 00 00       	callq  3302708 <SetupVirtualAddress>
 3300fc2:	be ff ff 00 00       	mov    $0xffff,%esi
 3300fc7:	bf 00 00 30 03       	mov    $0x3300000,%edi
 3300fcc:	e8 3b 00 00 00       	callq  330100c <InitializeHypervisorsSharedData>
 3300fd1:	b8 00 00 00 00       	mov    $0x0,%eax
 3300fd6:	e8 99 fb ff ff       	callq  3300b74 <LoadMBRToEntryPoint>
 3300fdb:	48 c7 c0 35 02 30 03 	mov    $0x3300235,%rax
 3300fe2:	48 89 c2             	mov    %rax,%rdx
 3300fe5:	48 c7 c0 bc 01 30 03 	mov    $0x33001bc,%rax
 3300fec:	48 29 c2             	sub    %rax,%rdx
 3300fef:	48 89 d0             	mov    %rdx,%rax
 3300ff2:	48 89 c2             	mov    %rax,%rdx
 3300ff5:	48 c7 c0 bc 01 30 03 	mov    $0x33001bc,%rax
 3300ffc:	48 89 c6             	mov    %rax,%rsi
 3300fff:	bf 00 42 00 00       	mov    $0x4200,%edi
 3301004:	e8 a8 13 00 00       	callq  33023b1 <CopyMemory>
 3301009:	90                   	nop
 330100a:	c9                   	leaveq 
 330100b:	c3                   	retq   

000000000330100c <InitializeHypervisorsSharedData>:
 330100c:	f3 0f 1e fa          	endbr64 
 3301010:	55                   	push   %rbp
 3301011:	48 89 e5             	mov    %rsp,%rbp
 3301014:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 3301018:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
 330101c:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
 3301020:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
 3301024:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 3301028:	48 89 d6             	mov    %rdx,%rsi
 330102b:	48 89 c7             	mov    %rax,%rdi
 330102e:	e8 0c fc ff ff       	callq  3300c3f <FindRSDT>
 3301033:	48 85 c0             	test   %rax,%rax
 3301036:	74 13                	je     330104b <InitializeHypervisorsSharedData+0x3f>
 3301038:	48 8d 3d e9 4d 00 00 	lea    0x4de9(%rip),%rdi        # 3305e28 <CopyMemoryToGuest+0x2c1>
 330103f:	b8 00 00 00 00       	mov    $0x0,%eax
 3301044:	e8 5c 11 00 00       	callq  33021a5 <Print>
 3301049:	eb fe                	jmp    3301049 <InitializeHypervisorsSharedData+0x3d>
 330104b:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
 330104f:	0f b6 d0             	movzbl %al,%edx
 3301052:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3301056:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
 330105a:	48 8d 0d 4a 4e 00 00 	lea    0x4e4a(%rip),%rcx        # 3305eab <CopyMemoryToGuest+0x344>
 3301061:	48 89 c7             	mov    %rax,%rdi
 3301064:	e8 88 fd ff ff       	callq  3300df1 <LocateSystemDescriptorTable>
 3301069:	48 85 c0             	test   %rax,%rax
 330106c:	74 13                	je     3301081 <InitializeHypervisorsSharedData+0x75>
 330106e:	48 8d 3d 3b 4e 00 00 	lea    0x4e3b(%rip),%rdi        # 3305eb0 <CopyMemoryToGuest+0x349>
 3301075:	b8 00 00 00 00       	mov    $0x0,%eax
 330107a:	e8 26 11 00 00       	callq  33021a5 <Print>
 330107f:	eb fe                	jmp    330107f <InitializeHypervisorsSharedData+0x73>
 3301081:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301085:	48 8d 55 be          	lea    -0x42(%rbp),%rdx
 3301089:	48 8d 4d c6          	lea    -0x3a(%rbp),%rcx
 330108d:	48 89 ce             	mov    %rcx,%rsi
 3301090:	48 89 c7             	mov    %rax,%rdi
 3301093:	e8 02 f6 ff ff       	callq  330069a <GetCoresData>
 3301098:	48 85 c0             	test   %rax,%rax
 330109b:	74 13                	je     33010b0 <InitializeHypervisorsSharedData+0xa4>
 330109d:	48 8d 3d b4 4e 00 00 	lea    0x4eb4(%rip),%rdi        # 3305f58 <CopyMemoryToGuest+0x3f1>
 33010a4:	b8 00 00 00 00       	mov    $0x0,%eax
 33010a9:	e8 f7 10 00 00       	callq  33021a5 <Print>
 33010ae:	eb fe                	jmp    33010ae <InitializeHypervisorsSharedData+0xa2>
 33010b0:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33010b4:	0f b6 c0             	movzbl %al,%eax
 33010b7:	89 c6                	mov    %eax,%esi
 33010b9:	48 8d 3d 39 4f 00 00 	lea    0x4f39(%rip),%rdi        # 3305ff9 <CopyMemoryToGuest+0x492>
 33010c0:	b8 00 00 00 00       	mov    $0x0,%eax
 33010c5:	e8 db 10 00 00       	callq  33021a5 <Print>
 33010ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33010d1:	00 
 33010d2:	eb 29                	jmp    33010fd <InitializeHypervisorsSharedData+0xf1>
 33010d4:	48 8d 55 be          	lea    -0x42(%rbp),%rdx
 33010d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33010dc:	48 01 d0             	add    %rdx,%rax
 33010df:	0f b6 00             	movzbl (%rax),%eax
 33010e2:	0f b6 c0             	movzbl %al,%eax
 33010e5:	89 c6                	mov    %eax,%esi
 33010e7:	48 8d 3d 10 4f 00 00 	lea    0x4f10(%rip),%rdi        # 3305ffe <CopyMemoryToGuest+0x497>
 33010ee:	b8 00 00 00 00       	mov    $0x0,%eax
 33010f3:	e8 ad 10 00 00       	callq  33021a5 <Print>
 33010f8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33010fd:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301101:	0f b6 c0             	movzbl %al,%eax
 3301104:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 3301108:	72 ca                	jb     33010d4 <InitializeHypervisorsSharedData+0xc8>
 330110a:	be 00 00 00 00       	mov    $0x0,%esi
 330110f:	bf 01 00 00 00       	mov    $0x1,%edi
 3301114:	e8 cd f7 ff ff       	callq  33008e6 <ActivateHypervisorOnProcessor>
 3301119:	be 00 00 00 00       	mov    $0x0,%esi
 330111e:	bf 01 00 00 00       	mov    $0x1,%edi
 3301123:	e8 dc f8 ff ff       	callq  3300a04 <EnterRealModeRunFunction>
 3301128:	b8 00 86 00 00       	mov    $0x8600,%eax
 330112d:	0f b7 00             	movzwl (%rax),%eax
 3301130:	66 89 45 a6          	mov    %ax,-0x5a(%rbp)
 3301134:	48 c7 45 e0 02 86 00 	movq   $0x8602,-0x20(%rbp)
 330113b:	00 
 330113c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 3301143:	00 
 3301144:	48 81 45 d8 00 90 00 	addq   $0x9000,-0x28(%rbp)
 330114b:	00 
 330114c:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301150:	0f b6 c0             	movzbl %al,%eax
 3301153:	48 69 c0 00 c0 21 02 	imul   $0x221c000,%rax,%rax
 330115a:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 330115e:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301162:	0f b6 c0             	movzbl %al,%eax
 3301165:	48 c1 e0 0c          	shl    $0xc,%rax
 3301169:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 330116d:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 3301171:	0f b7 f0             	movzwl %ax,%esi
 3301174:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 3301178:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 330117c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301180:	48 89 c7             	mov    %rax,%rdi
 3301183:	e8 92 04 00 00       	callq  330161a <AllocateMemoryUsingMemoryMap>
 3301188:	48 85 c0             	test   %rax,%rax
 330118b:	74 2b                	je     33011b8 <InitializeHypervisorsSharedData+0x1ac>
 330118d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301191:	48 89 c6             	mov    %rax,%rsi
 3301194:	48 8d 3d 6d 4e 00 00 	lea    0x4e6d(%rip),%rdi        # 3306008 <CopyMemoryToGuest+0x4a1>
 330119b:	b8 00 00 00 00       	mov    $0x0,%eax
 33011a0:	e8 00 10 00 00       	callq  33021a5 <Print>
 33011a5:	48 8d 3d 7c 4e 00 00 	lea    0x4e7c(%rip),%rdi        # 3306028 <CopyMemoryToGuest+0x4c1>
 33011ac:	b8 00 00 00 00       	mov    $0x0,%eax
 33011b1:	e8 ef 0f 00 00       	callq  33021a5 <Print>
 33011b6:	eb fe                	jmp    33011b6 <InitializeHypervisorsSharedData+0x1aa>
 33011b8:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
 33011bc:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33011c0:	48 8d 75 a6          	lea    -0x5a(%rbp),%rsi
 33011c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33011c8:	48 89 c7             	mov    %rax,%rdi
 33011cb:	e8 b7 06 00 00       	callq  3301887 <HideCodeBase>
 33011d0:	48 85 c0             	test   %rax,%rax
 33011d3:	74 13                	je     33011e8 <InitializeHypervisorsSharedData+0x1dc>
 33011d5:	48 8d 3d b4 4e 00 00 	lea    0x4eb4(%rip),%rdi        # 3306090 <CopyMemoryToGuest+0x529>
 33011dc:	b8 00 00 00 00       	mov    $0x0,%eax
 33011e1:	e8 bf 0f 00 00       	callq  33021a5 <Print>
 33011e6:	eb fe                	jmp    33011e6 <InitializeHypervisorsSharedData+0x1da>
 33011e8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33011ec:	48 89 c7             	mov    %rax,%rdi
 33011ef:	e8 5f 15 00 00       	callq  3302753 <PhysicalToVirtual>
 33011f4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33011f8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33011fc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3301200:	be 00 00 00 00       	mov    $0x0,%esi
 3301205:	48 89 c7             	mov    %rax,%rdi
 3301208:	e8 fe 13 00 00       	callq  330260b <SetMemory>
 330120d:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301211:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3301215:	0f b6 55 c6          	movzbl -0x3a(%rbp),%edx
 3301219:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330121d:	88 90 22 86 00 00    	mov    %dl,0x8622(%rax)
 3301223:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301227:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 330122b:	48 89 90 28 86 00 00 	mov    %rdx,0x8628(%rax)
 3301232:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301236:	48 89 c2             	mov    %rax,%rdx
 3301239:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330123d:	48 89 90 30 86 00 00 	mov    %rdx,0x8630(%rax)
 3301244:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301248:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
 330124e:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
 3301254:	48 89 c2             	mov    %rax,%rdx
 3301257:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330125b:	48 89 90 38 86 00 00 	mov    %rdx,0x8638(%rax)
 3301262:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3301266:	48 89 c7             	mov    %rax,%rdi
 3301269:	e8 e5 14 00 00       	callq  3302753 <PhysicalToVirtual>
 330126e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3301272:	48 89 82 40 86 00 00 	mov    %rax,0x8640(%rdx)
 3301279:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330127d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301281:	48 89 90 48 86 00 00 	mov    %rdx,0x8648(%rax)
 3301288:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 330128c:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3301292:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301298:	48 89 c2             	mov    %rax,%rdx
 330129b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330129f:	48 89 90 50 86 00 00 	mov    %rdx,0x8650(%rax)
 33012a6:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
 33012aa:	e9 f6 00 00 00       	jmpq   33013a5 <InitializeHypervisorsSharedData+0x399>
 33012af:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 33012b3:	48 69 d0 00 c0 21 02 	imul   $0x221c000,%rax,%rdx
 33012ba:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33012be:	48 01 d0             	add    %rdx,%rax
 33012c1:	48 05 00 90 00 00    	add    $0x9000,%rax
 33012c7:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 33012cb:	48 89 c1             	mov    %rax,%rcx
 33012ce:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33012d2:	48 63 d2             	movslq %edx,%rdx
 33012d5:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 33012dc:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 33012e0:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33012e4:	0f b6 c0             	movzbl %al,%eax
 33012e7:	48 69 d0 00 c0 21 02 	imul   $0x221c000,%rax,%rdx
 33012ee:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33012f2:	48 01 c2             	add    %rax,%rdx
 33012f5:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 33012f9:	48 c1 e0 0c          	shl    $0xc,%rax
 33012fd:	48 01 d0             	add    %rdx,%rax
 3301300:	48 05 00 90 00 00    	add    $0x9000,%rax
 3301306:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 330130a:	48 89 c1             	mov    %rax,%rcx
 330130d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301311:	48 63 d2             	movslq %edx,%rdx
 3301314:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 330131b:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 330131f:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
 3301323:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301327:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330132b:	48 63 d2             	movslq %edx,%rdx
 330132e:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 3301335:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3301339:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330133d:	48 63 c9             	movslq %ecx,%rcx
 3301340:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3301347:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
 330134b:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
 3301352:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301356:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330135a:	48 63 d2             	movslq %edx,%rdx
 330135d:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 3301364:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3301368:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330136c:	48 89 90 88 bb 21 02 	mov    %rdx,0x221bb88(%rax)
 3301373:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301377:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
 330137b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330137f:	48 63 c9             	movslq %ecx,%rcx
 3301382:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3301389:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 330138d:	48 63 d2             	movslq %edx,%rdx
 3301390:	0f b6 54 15 be       	movzbl -0x42(%rbp,%rdx,1),%edx
 3301395:	88 90 00 b0 21 02    	mov    %dl,0x221b000(%rax)
 330139b:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 330139f:	83 c0 01             	add    $0x1,%eax
 33013a2:	88 45 f7             	mov    %al,-0x9(%rbp)
 33013a5:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33013a9:	38 45 f7             	cmp    %al,-0x9(%rbp)
 33013ac:	0f 82 fd fe ff ff    	jb     33012af <InitializeHypervisorsSharedData+0x2a3>
 33013b2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 33013b9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 33013c0:	e9 ff 01 00 00       	jmpq   33015c4 <InitializeHypervisorsSharedData+0x5b8>
 33013c5:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33013c8:	48 89 d0             	mov    %rdx,%rax
 33013cb:	48 01 c0             	add    %rax,%rax
 33013ce:	48 01 d0             	add    %rdx,%rax
 33013d1:	48 c1 e0 03          	shl    $0x3,%rax
 33013d5:	48 89 c2             	mov    %rax,%rdx
 33013d8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33013dc:	48 01 d0             	add    %rdx,%rax
 33013df:	8b 40 10             	mov    0x10(%rax),%eax
 33013e2:	83 f8 01             	cmp    $0x1,%eax
 33013e5:	0f 85 de 00 00 00    	jne    33014c9 <InitializeHypervisorsSharedData+0x4bd>
 33013eb:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33013ee:	48 89 d0             	mov    %rdx,%rax
 33013f1:	48 01 c0             	add    %rax,%rax
 33013f4:	48 01 d0             	add    %rdx,%rax
 33013f7:	48 c1 e0 03          	shl    $0x3,%rax
 33013fb:	48 89 c2             	mov    %rax,%rdx
 33013fe:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301402:	48 01 d0             	add    %rdx,%rax
 3301405:	48 8b 08             	mov    (%rax),%rcx
 3301408:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 330140c:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330140f:	48 89 d0             	mov    %rdx,%rax
 3301412:	48 01 c0             	add    %rax,%rax
 3301415:	48 01 d0             	add    %rdx,%rax
 3301418:	48 c1 e0 03          	shl    $0x3,%rax
 330141c:	48 01 f0             	add    %rsi,%rax
 330141f:	48 05 80 80 00 00    	add    $0x8080,%rax
 3301425:	48 89 08             	mov    %rcx,(%rax)
 3301428:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330142b:	48 89 d0             	mov    %rdx,%rax
 330142e:	48 01 c0             	add    %rax,%rax
 3301431:	48 01 d0             	add    %rdx,%rax
 3301434:	48 c1 e0 03          	shl    $0x3,%rax
 3301438:	48 89 c2             	mov    %rax,%rdx
 330143b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330143f:	48 01 d0             	add    %rdx,%rax
 3301442:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301446:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 330144a:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330144d:	48 89 d0             	mov    %rdx,%rax
 3301450:	48 01 c0             	add    %rax,%rax
 3301453:	48 01 d0             	add    %rdx,%rax
 3301456:	48 c1 e0 03          	shl    $0x3,%rax
 330145a:	48 01 f0             	add    %rsi,%rax
 330145d:	48 05 88 80 00 00    	add    $0x8088,%rax
 3301463:	48 89 08             	mov    %rcx,(%rax)
 3301466:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 330146a:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330146d:	48 89 d0             	mov    %rdx,%rax
 3301470:	48 01 c0             	add    %rax,%rax
 3301473:	48 01 d0             	add    %rdx,%rax
 3301476:	48 c1 e0 03          	shl    $0x3,%rax
 330147a:	48 01 c8             	add    %rcx,%rax
 330147d:	48 05 90 80 00 00    	add    $0x8090,%rax
 3301483:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 3301489:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330148c:	48 89 d0             	mov    %rdx,%rax
 330148f:	48 01 c0             	add    %rax,%rax
 3301492:	48 01 d0             	add    %rdx,%rax
 3301495:	48 c1 e0 03          	shl    $0x3,%rax
 3301499:	48 89 c2             	mov    %rax,%rdx
 330149c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33014a0:	48 01 d0             	add    %rdx,%rax
 33014a3:	8b 48 14             	mov    0x14(%rax),%ecx
 33014a6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 33014aa:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014ad:	48 89 d0             	mov    %rdx,%rax
 33014b0:	48 01 c0             	add    %rax,%rax
 33014b3:	48 01 d0             	add    %rdx,%rax
 33014b6:	48 c1 e0 03          	shl    $0x3,%rax
 33014ba:	48 01 f0             	add    %rsi,%rax
 33014bd:	48 05 94 80 00 00    	add    $0x8094,%rax
 33014c3:	89 08                	mov    %ecx,(%rax)
 33014c5:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 33014c9:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014cc:	48 89 d0             	mov    %rdx,%rax
 33014cf:	48 01 c0             	add    %rax,%rax
 33014d2:	48 01 d0             	add    %rdx,%rax
 33014d5:	48 c1 e0 03          	shl    $0x3,%rax
 33014d9:	48 89 c2             	mov    %rax,%rdx
 33014dc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33014e0:	48 01 d0             	add    %rdx,%rax
 33014e3:	48 8b 08             	mov    (%rax),%rcx
 33014e6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 33014ea:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014ed:	48 89 d0             	mov    %rdx,%rax
 33014f0:	48 01 c0             	add    %rax,%rax
 33014f3:	48 01 d0             	add    %rdx,%rax
 33014f6:	48 c1 e0 03          	shl    $0x3,%rax
 33014fa:	48 01 f0             	add    %rsi,%rax
 33014fd:	48 05 50 83 00 00    	add    $0x8350,%rax
 3301503:	48 89 48 01          	mov    %rcx,0x1(%rax)
 3301507:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330150a:	48 89 d0             	mov    %rdx,%rax
 330150d:	48 01 c0             	add    %rax,%rax
 3301510:	48 01 d0             	add    %rdx,%rax
 3301513:	48 c1 e0 03          	shl    $0x3,%rax
 3301517:	48 89 c2             	mov    %rax,%rdx
 330151a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330151e:	48 01 d0             	add    %rdx,%rax
 3301521:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301525:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 3301529:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330152c:	48 89 d0             	mov    %rdx,%rax
 330152f:	48 01 c0             	add    %rax,%rax
 3301532:	48 01 d0             	add    %rdx,%rax
 3301535:	48 c1 e0 03          	shl    $0x3,%rax
 3301539:	48 01 f0             	add    %rsi,%rax
 330153c:	48 05 50 83 00 00    	add    $0x8350,%rax
 3301542:	48 89 48 09          	mov    %rcx,0x9(%rax)
 3301546:	8b 55 ec             	mov    -0x14(%rbp),%edx
 3301549:	48 89 d0             	mov    %rdx,%rax
 330154c:	48 01 c0             	add    %rax,%rax
 330154f:	48 01 d0             	add    %rdx,%rax
 3301552:	48 c1 e0 03          	shl    $0x3,%rax
 3301556:	48 89 c2             	mov    %rax,%rdx
 3301559:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330155d:	48 01 d0             	add    %rdx,%rax
 3301560:	8b 48 10             	mov    0x10(%rax),%ecx
 3301563:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 3301567:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330156a:	48 89 d0             	mov    %rdx,%rax
 330156d:	48 01 c0             	add    %rax,%rax
 3301570:	48 01 d0             	add    %rdx,%rax
 3301573:	48 c1 e0 03          	shl    $0x3,%rax
 3301577:	48 01 f0             	add    %rsi,%rax
 330157a:	48 05 60 83 00 00    	add    $0x8360,%rax
 3301580:	89 48 01             	mov    %ecx,0x1(%rax)
 3301583:	8b 55 ec             	mov    -0x14(%rbp),%edx
 3301586:	48 89 d0             	mov    %rdx,%rax
 3301589:	48 01 c0             	add    %rax,%rax
 330158c:	48 01 d0             	add    %rdx,%rax
 330158f:	48 c1 e0 03          	shl    $0x3,%rax
 3301593:	48 89 c2             	mov    %rax,%rdx
 3301596:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330159a:	48 01 d0             	add    %rdx,%rax
 330159d:	8b 48 14             	mov    0x14(%rax),%ecx
 33015a0:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 33015a4:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33015a7:	48 89 d0             	mov    %rdx,%rax
 33015aa:	48 01 c0             	add    %rax,%rax
 33015ad:	48 01 d0             	add    %rdx,%rax
 33015b0:	48 c1 e0 03          	shl    $0x3,%rax
 33015b4:	48 01 f0             	add    %rsi,%rax
 33015b7:	48 05 60 83 00 00    	add    $0x8360,%rax
 33015bd:	89 48 05             	mov    %ecx,0x5(%rax)
 33015c0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 33015c4:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 33015c8:	0f b7 c0             	movzwl %ax,%eax
 33015cb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 33015ce:	0f 82 f1 fd ff ff    	jb     33013c5 <InitializeHypervisorsSharedData+0x3b9>
 33015d4:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 33015d8:	89 c2                	mov    %eax,%edx
 33015da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015de:	88 90 21 86 00 00    	mov    %dl,0x8621(%rax)
 33015e4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 33015e7:	89 c2                	mov    %eax,%edx
 33015e9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015ed:	88 90 50 83 00 00    	mov    %dl,0x8350(%rax)
 33015f3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015f7:	48 89 c7             	mov    %rax,%rdi
 33015fa:	e8 fd 3f 00 00       	callq  33055fc <SetupE820Hook>
 33015ff:	48 85 c0             	test   %rax,%rax
 3301602:	74 13                	je     3301617 <InitializeHypervisorsSharedData+0x60b>
 3301604:	48 8d 3d 2d 4b 00 00 	lea    0x4b2d(%rip),%rdi        # 3306138 <CopyMemoryToGuest+0x5d1>
 330160b:	b8 00 00 00 00       	mov    $0x0,%eax
 3301610:	e8 90 0b 00 00       	callq  33021a5 <Print>
 3301615:	eb fe                	jmp    3301615 <InitializeHypervisorsSharedData+0x609>
 3301617:	90                   	nop
 3301618:	c9                   	leaveq 
 3301619:	c3                   	retq   

000000000330161a <AllocateMemoryUsingMemoryMap>:
 330161a:	f3 0f 1e fa          	endbr64 
 330161e:	55                   	push   %rbp
 330161f:	48 89 e5             	mov    %rsp,%rbp
 3301622:	48 83 ec 50          	sub    $0x50,%rsp
 3301626:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330162a:	89 75 c4             	mov    %esi,-0x3c(%rbp)
 330162d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 3301631:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 3301635:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3301639:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
 330163f:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
 3301645:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3301649:	c7 45 fc 01 00 ff ff 	movl   $0xffff0001,-0x4(%rbp)
 3301650:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3301657:	00 
 3301658:	eb 63                	jmp    33016bd <AllocateMemoryUsingMemoryMap+0xa3>
 330165a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 330165e:	48 89 d0             	mov    %rdx,%rax
 3301661:	48 01 c0             	add    %rax,%rax
 3301664:	48 01 d0             	add    %rdx,%rax
 3301667:	48 c1 e0 03          	shl    $0x3,%rax
 330166b:	48 89 c2             	mov    %rax,%rdx
 330166e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301672:	48 01 d0             	add    %rdx,%rax
 3301675:	8b 40 10             	mov    0x10(%rax),%eax
 3301678:	83 f8 01             	cmp    $0x1,%eax
 330167b:	75 37                	jne    33016b4 <AllocateMemoryUsingMemoryMap+0x9a>
 330167d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301681:	48 89 d0             	mov    %rdx,%rax
 3301684:	48 01 c0             	add    %rax,%rax
 3301687:	48 01 d0             	add    %rdx,%rax
 330168a:	48 c1 e0 03          	shl    $0x3,%rax
 330168e:	48 89 c2             	mov    %rax,%rdx
 3301691:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301695:	48 01 d0             	add    %rdx,%rax
 3301698:	48 8b 40 08          	mov    0x8(%rax),%rax
 330169c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
 33016a0:	73 15                	jae    33016b7 <AllocateMemoryUsingMemoryMap+0x9d>
 33016a2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33016a6:	39 45 fc             	cmp    %eax,-0x4(%rbp)
 33016a9:	7d 0d                	jge    33016b8 <AllocateMemoryUsingMemoryMap+0x9e>
 33016ab:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33016af:	89 45 fc             	mov    %eax,-0x4(%rbp)
 33016b2:	eb 04                	jmp    33016b8 <AllocateMemoryUsingMemoryMap+0x9e>
 33016b4:	90                   	nop
 33016b5:	eb 01                	jmp    33016b8 <AllocateMemoryUsingMemoryMap+0x9e>
 33016b7:	90                   	nop
 33016b8:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 33016bd:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 33016c0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 33016c4:	72 94                	jb     330165a <AllocateMemoryUsingMemoryMap+0x40>
 33016c6:	81 7d fc 01 00 ff ff 	cmpl   $0xffff0001,-0x4(%rbp)
 33016cd:	75 0a                	jne    33016d9 <AllocateMemoryUsingMemoryMap+0xbf>
 33016cf:	b8 04 00 00 00       	mov    $0x4,%eax
 33016d4:	e9 01 01 00 00       	jmpq   33017da <AllocateMemoryUsingMemoryMap+0x1c0>
 33016d9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 33016dc:	48 63 d0             	movslq %eax,%rdx
 33016df:	48 89 d0             	mov    %rdx,%rax
 33016e2:	48 01 c0             	add    %rax,%rax
 33016e5:	48 01 d0             	add    %rdx,%rax
 33016e8:	48 c1 e0 03          	shl    $0x3,%rax
 33016ec:	48 89 c2             	mov    %rax,%rdx
 33016ef:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33016f3:	48 01 d0             	add    %rdx,%rax
 33016f6:	48 8b 00             	mov    (%rax),%rax
 33016f9:	25 ff 0f 00 00       	and    $0xfff,%eax
 33016fe:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3301702:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3301705:	48 63 d0             	movslq %eax,%rdx
 3301708:	48 89 d0             	mov    %rdx,%rax
 330170b:	48 01 c0             	add    %rax,%rax
 330170e:	48 01 d0             	add    %rdx,%rax
 3301711:	48 c1 e0 03          	shl    $0x3,%rax
 3301715:	48 89 c2             	mov    %rax,%rdx
 3301718:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330171c:	48 01 d0             	add    %rdx,%rax
 330171f:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301723:	25 ff 0f 00 00       	and    $0xfff,%eax
 3301728:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 330172c:	8b 45 fc             	mov    -0x4(%rbp),%eax
 330172f:	48 63 d0             	movslq %eax,%rdx
 3301732:	48 89 d0             	mov    %rdx,%rax
 3301735:	48 01 c0             	add    %rax,%rax
 3301738:	48 01 d0             	add    %rdx,%rax
 330173b:	48 c1 e0 03          	shl    $0x3,%rax
 330173f:	48 89 c2             	mov    %rax,%rdx
 3301742:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301746:	48 01 d0             	add    %rdx,%rax
 3301749:	48 8b 48 08          	mov    0x8(%rax),%rcx
 330174d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301751:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301755:	48 01 c2             	add    %rax,%rdx
 3301758:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330175c:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301760:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3301763:	48 63 d0             	movslq %eax,%rdx
 3301766:	48 89 d0             	mov    %rdx,%rax
 3301769:	48 01 c0             	add    %rax,%rax
 330176c:	48 01 d0             	add    %rdx,%rax
 330176f:	48 c1 e0 03          	shl    $0x3,%rax
 3301773:	48 89 c2             	mov    %rax,%rdx
 3301776:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330177a:	48 01 d0             	add    %rdx,%rax
 330177d:	48 29 f1             	sub    %rsi,%rcx
 3301780:	48 89 ca             	mov    %rcx,%rdx
 3301783:	48 89 50 08          	mov    %rdx,0x8(%rax)
 3301787:	8b 45 fc             	mov    -0x4(%rbp),%eax
 330178a:	48 63 d0             	movslq %eax,%rdx
 330178d:	48 89 d0             	mov    %rdx,%rax
 3301790:	48 01 c0             	add    %rax,%rax
 3301793:	48 01 d0             	add    %rdx,%rax
 3301796:	48 c1 e0 03          	shl    $0x3,%rax
 330179a:	48 89 c2             	mov    %rax,%rdx
 330179d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33017a1:	48 01 d0             	add    %rdx,%rax
 33017a4:	48 8b 08             	mov    (%rax),%rcx
 33017a7:	8b 45 fc             	mov    -0x4(%rbp),%eax
 33017aa:	48 63 d0             	movslq %eax,%rdx
 33017ad:	48 89 d0             	mov    %rdx,%rax
 33017b0:	48 01 c0             	add    %rax,%rax
 33017b3:	48 01 d0             	add    %rdx,%rax
 33017b6:	48 c1 e0 03          	shl    $0x3,%rax
 33017ba:	48 89 c2             	mov    %rax,%rdx
 33017bd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33017c1:	48 01 d0             	add    %rdx,%rax
 33017c4:	48 8b 40 08          	mov    0x8(%rax),%rax
 33017c8:	48 01 c8             	add    %rcx,%rax
 33017cb:	48 89 c2             	mov    %rax,%rdx
 33017ce:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 33017d2:	48 89 10             	mov    %rdx,(%rax)
 33017d5:	b8 00 00 00 00       	mov    $0x0,%eax
 33017da:	c9                   	leaveq 
 33017db:	c3                   	retq   

00000000033017dc <PrintMemoryRanges>:
 33017dc:	f3 0f 1e fa          	endbr64 
 33017e0:	55                   	push   %rbp
 33017e1:	48 89 e5             	mov    %rsp,%rbp
 33017e4:	48 83 ec 20          	sub    $0x20,%rsp
 33017e8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 33017ec:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 33017f0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33017f7:	00 
 33017f8:	eb 7b                	jmp    3301875 <PrintMemoryRanges+0x99>
 33017fa:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33017fe:	48 89 d0             	mov    %rdx,%rax
 3301801:	48 01 c0             	add    %rax,%rax
 3301804:	48 01 d0             	add    %rdx,%rax
 3301807:	48 c1 e0 03          	shl    $0x3,%rax
 330180b:	48 89 c2             	mov    %rax,%rdx
 330180e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301812:	48 01 d0             	add    %rdx,%rax
 3301815:	8b 70 10             	mov    0x10(%rax),%esi
 3301818:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330181c:	48 89 d0             	mov    %rdx,%rax
 330181f:	48 01 c0             	add    %rax,%rax
 3301822:	48 01 d0             	add    %rdx,%rax
 3301825:	48 c1 e0 03          	shl    $0x3,%rax
 3301829:	48 89 c2             	mov    %rax,%rdx
 330182c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301830:	48 01 d0             	add    %rdx,%rax
 3301833:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301837:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330183b:	48 89 d0             	mov    %rdx,%rax
 330183e:	48 01 c0             	add    %rax,%rax
 3301841:	48 01 d0             	add    %rdx,%rax
 3301844:	48 c1 e0 03          	shl    $0x3,%rax
 3301848:	48 89 c2             	mov    %rax,%rdx
 330184b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330184f:	48 01 d0             	add    %rdx,%rax
 3301852:	48 8b 10             	mov    (%rax),%rdx
 3301855:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301859:	41 89 f0             	mov    %esi,%r8d
 330185c:	48 89 c6             	mov    %rax,%rsi
 330185f:	48 8d 3d 52 49 00 00 	lea    0x4952(%rip),%rdi        # 33061b8 <CopyMemoryToGuest+0x651>
 3301866:	b8 00 00 00 00       	mov    $0x0,%eax
 330186b:	e8 35 09 00 00       	callq  33021a5 <Print>
 3301870:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3301875:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301879:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 330187d:	0f 82 77 ff ff ff    	jb     33017fa <PrintMemoryRanges+0x1e>
 3301883:	90                   	nop
 3301884:	90                   	nop
 3301885:	c9                   	leaveq 
 3301886:	c3                   	retq   

0000000003301887 <HideCodeBase>:
 3301887:	f3 0f 1e fa          	endbr64 
 330188b:	55                   	push   %rbp
 330188c:	48 89 e5             	mov    %rsp,%rbp
 330188f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 3301893:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
 3301897:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
 330189b:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
 330189f:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 33018a3:	48 c7 45 f8 01 00 ff 	movq   $0xffffffffffff0001,-0x8(%rbp)
 33018aa:	ff 
 33018ab:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 33018af:	0f b7 00             	movzwl (%rax),%eax
 33018b2:	0f b7 c0             	movzwl %ax,%eax
 33018b5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33018b9:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 33018c0:	00 
 33018c1:	e9 16 01 00 00       	jmpq   33019dc <HideCodeBase+0x155>
 33018c6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33018ca:	48 89 d0             	mov    %rdx,%rax
 33018cd:	48 01 c0             	add    %rax,%rax
 33018d0:	48 01 d0             	add    %rdx,%rax
 33018d3:	48 c1 e0 03          	shl    $0x3,%rax
 33018d7:	48 89 c2             	mov    %rax,%rdx
 33018da:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33018de:	48 01 d0             	add    %rdx,%rax
 33018e1:	8b 40 10             	mov    0x10(%rax),%eax
 33018e4:	83 f8 01             	cmp    $0x1,%eax
 33018e7:	0f 85 ea 00 00 00    	jne    33019d7 <HideCodeBase+0x150>
 33018ed:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33018f1:	48 89 d0             	mov    %rdx,%rax
 33018f4:	48 01 c0             	add    %rax,%rax
 33018f7:	48 01 d0             	add    %rdx,%rax
 33018fa:	48 c1 e0 03          	shl    $0x3,%rax
 33018fe:	48 89 c2             	mov    %rax,%rdx
 3301901:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301905:	48 01 d0             	add    %rdx,%rax
 3301908:	48 8b 00             	mov    (%rax),%rax
 330190b:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
 330190f:	0f 86 c2 00 00 00    	jbe    33019d7 <HideCodeBase+0x150>
 3301915:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301919:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 330191d:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301921:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301925:	48 89 d0             	mov    %rdx,%rax
 3301928:	48 01 c0             	add    %rax,%rax
 330192b:	48 01 d0             	add    %rdx,%rax
 330192e:	48 c1 e0 03          	shl    $0x3,%rax
 3301932:	48 89 c2             	mov    %rax,%rdx
 3301935:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301939:	48 01 d0             	add    %rdx,%rax
 330193c:	48 8b 08             	mov    (%rax),%rcx
 330193f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301943:	48 89 d0             	mov    %rdx,%rax
 3301946:	48 01 c0             	add    %rax,%rax
 3301949:	48 01 d0             	add    %rdx,%rax
 330194c:	48 c1 e0 03          	shl    $0x3,%rax
 3301950:	48 89 c2             	mov    %rax,%rdx
 3301953:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301957:	48 01 d0             	add    %rdx,%rax
 330195a:	48 8b 40 08          	mov    0x8(%rax),%rax
 330195e:	48 01 c8             	add    %rcx,%rax
 3301961:	48 39 c6             	cmp    %rax,%rsi
 3301964:	73 71                	jae    33019d7 <HideCodeBase+0x150>
 3301966:	48 81 7d f8 01 00 ff 	cmpq   $0xffffffffffff0001,-0x8(%rbp)
 330196d:	ff 
 330196e:	75 0a                	jne    330197a <HideCodeBase+0xf3>
 3301970:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3301974:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3301978:	eb 5d                	jmp    33019d7 <HideCodeBase+0x150>
 330197a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330197e:	48 89 d0             	mov    %rdx,%rax
 3301981:	48 01 c0             	add    %rax,%rax
 3301984:	48 01 d0             	add    %rdx,%rax
 3301987:	48 c1 e0 03          	shl    $0x3,%rax
 330198b:	48 89 c2             	mov    %rax,%rdx
 330198e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301992:	48 01 d0             	add    %rdx,%rax
 3301995:	48 8b 00             	mov    (%rax),%rax
 3301998:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 330199c:	48 89 d1             	mov    %rdx,%rcx
 330199f:	48 29 c1             	sub    %rax,%rcx
 33019a2:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33019a6:	48 89 d0             	mov    %rdx,%rax
 33019a9:	48 01 c0             	add    %rax,%rax
 33019ac:	48 01 d0             	add    %rdx,%rax
 33019af:	48 c1 e0 03          	shl    $0x3,%rax
 33019b3:	48 89 c2             	mov    %rax,%rdx
 33019b6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33019ba:	48 01 d0             	add    %rdx,%rax
 33019bd:	48 8b 00             	mov    (%rax),%rax
 33019c0:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33019c4:	48 29 c2             	sub    %rax,%rdx
 33019c7:	48 89 d0             	mov    %rdx,%rax
 33019ca:	48 39 c1             	cmp    %rax,%rcx
 33019cd:	76 08                	jbe    33019d7 <HideCodeBase+0x150>
 33019cf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33019d3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33019d7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 33019dc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33019e0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 33019e4:	0f 82 dc fe ff ff    	jb     33018c6 <HideCodeBase+0x3f>
 33019ea:	48 81 7d f8 01 00 ff 	cmpq   $0xffffffffffff0001,-0x8(%rbp)
 33019f1:	ff 
 33019f2:	75 0a                	jne    33019fe <HideCodeBase+0x177>
 33019f4:	b8 19 00 00 00       	mov    $0x19,%eax
 33019f9:	e9 96 02 00 00       	jmpq   3301c94 <HideCodeBase+0x40d>
 33019fe:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a02:	48 89 d0             	mov    %rdx,%rax
 3301a05:	48 01 c0             	add    %rax,%rax
 3301a08:	48 01 d0             	add    %rdx,%rax
 3301a0b:	48 c1 e0 03          	shl    $0x3,%rax
 3301a0f:	48 89 c2             	mov    %rax,%rdx
 3301a12:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a16:	48 01 d0             	add    %rdx,%rax
 3301a19:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301a1d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a21:	48 89 d0             	mov    %rdx,%rax
 3301a24:	48 01 c0             	add    %rax,%rax
 3301a27:	48 01 d0             	add    %rdx,%rax
 3301a2a:	48 c1 e0 03          	shl    $0x3,%rax
 3301a2e:	48 89 c2             	mov    %rax,%rdx
 3301a31:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a35:	48 01 d0             	add    %rdx,%rax
 3301a38:	48 8b 00             	mov    (%rax),%rax
 3301a3b:	48 89 ca             	mov    %rcx,%rdx
 3301a3e:	48 89 c6             	mov    %rax,%rsi
 3301a41:	48 8d 3d a8 47 00 00 	lea    0x47a8(%rip),%rdi        # 33061f0 <CopyMemoryToGuest+0x689>
 3301a48:	b8 00 00 00 00       	mov    $0x0,%eax
 3301a4d:	e8 f9 07 00 00       	callq  330224b <PrintDebugLevelDebug>
 3301a52:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301a56:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3301a5a:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301a5e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a62:	48 89 d0             	mov    %rdx,%rax
 3301a65:	48 01 c0             	add    %rax,%rax
 3301a68:	48 01 d0             	add    %rdx,%rax
 3301a6b:	48 c1 e0 03          	shl    $0x3,%rax
 3301a6f:	48 89 c2             	mov    %rax,%rdx
 3301a72:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a76:	48 01 d0             	add    %rdx,%rax
 3301a79:	48 8b 08             	mov    (%rax),%rcx
 3301a7c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a80:	48 89 d0             	mov    %rdx,%rax
 3301a83:	48 01 c0             	add    %rax,%rax
 3301a86:	48 01 d0             	add    %rdx,%rax
 3301a89:	48 c1 e0 03          	shl    $0x3,%rax
 3301a8d:	48 89 c2             	mov    %rax,%rdx
 3301a90:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a94:	48 01 d0             	add    %rdx,%rax
 3301a97:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301a9b:	48 01 c8             	add    %rcx,%rax
 3301a9e:	48 39 c6             	cmp    %rax,%rsi
 3301aa1:	76 0a                	jbe    3301aad <HideCodeBase+0x226>
 3301aa3:	b8 17 00 00 00       	mov    $0x17,%eax
 3301aa8:	e9 e7 01 00 00       	jmpq   3301c94 <HideCodeBase+0x40d>
 3301aad:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301ab1:	48 89 d0             	mov    %rdx,%rax
 3301ab4:	48 01 c0             	add    %rax,%rax
 3301ab7:	48 01 d0             	add    %rdx,%rax
 3301aba:	48 c1 e0 03          	shl    $0x3,%rax
 3301abe:	48 89 c2             	mov    %rax,%rdx
 3301ac1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301ac5:	48 01 d0             	add    %rdx,%rax
 3301ac8:	48 8b 00             	mov    (%rax),%rax
 3301acb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3301acf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301ad3:	48 89 d0             	mov    %rdx,%rax
 3301ad6:	48 01 c0             	add    %rax,%rax
 3301ad9:	48 01 d0             	add    %rdx,%rax
 3301adc:	48 c1 e0 03          	shl    $0x3,%rax
 3301ae0:	48 89 c2             	mov    %rax,%rdx
 3301ae3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301ae7:	48 01 d0             	add    %rdx,%rax
 3301aea:	48 8b 00             	mov    (%rax),%rax
 3301aed:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301af1:	48 29 c2             	sub    %rax,%rdx
 3301af4:	48 89 d0             	mov    %rdx,%rax
 3301af7:	48 2d 00 10 00 00    	sub    $0x1000,%rax
 3301afd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3301b01:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
 3301b08:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301b0c:	48 89 d0             	mov    %rdx,%rax
 3301b0f:	48 01 c0             	add    %rax,%rax
 3301b12:	48 01 d0             	add    %rdx,%rax
 3301b15:	48 c1 e0 03          	shl    $0x3,%rax
 3301b19:	48 89 c2             	mov    %rax,%rdx
 3301b1c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301b20:	48 01 d0             	add    %rdx,%rax
 3301b23:	8b 40 14             	mov    0x14(%rax),%eax
 3301b26:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 3301b29:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3301b2d:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3301b33:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301b39:	48 89 c2             	mov    %rax,%rdx
 3301b3c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3301b40:	48 01 d0             	add    %rdx,%rax
 3301b43:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3301b47:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301b4b:	48 89 d0             	mov    %rdx,%rax
 3301b4e:	48 01 c0             	add    %rax,%rax
 3301b51:	48 01 d0             	add    %rdx,%rax
 3301b54:	48 c1 e0 03          	shl    $0x3,%rax
 3301b58:	48 89 c2             	mov    %rax,%rdx
 3301b5b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301b5f:	48 01 d0             	add    %rdx,%rax
 3301b62:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301b66:	48 2b 45 80          	sub    -0x80(%rbp),%rax
 3301b6a:	48 89 c2             	mov    %rax,%rdx
 3301b6d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301b71:	48 29 c2             	sub    %rax,%rdx
 3301b74:	48 89 d0             	mov    %rdx,%rax
 3301b77:	48 2d 00 10 00 00    	sub    $0x1000,%rax
 3301b7d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301b83:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3301b87:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
 3301b8e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301b92:	48 89 d0             	mov    %rdx,%rax
 3301b95:	48 01 c0             	add    %rax,%rax
 3301b98:	48 01 d0             	add    %rdx,%rax
 3301b9b:	48 c1 e0 03          	shl    $0x3,%rax
 3301b9f:	48 89 c2             	mov    %rax,%rdx
 3301ba2:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301ba6:	48 01 d0             	add    %rdx,%rax
 3301ba9:	8b 40 14             	mov    0x14(%rax),%eax
 3301bac:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 3301baf:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301bb3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3301bb7:	eb 54                	jmp    3301c0d <HideCodeBase+0x386>
 3301bb9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301bbd:	48 89 d0             	mov    %rdx,%rax
 3301bc0:	48 01 c0             	add    %rax,%rax
 3301bc3:	48 01 d0             	add    %rdx,%rax
 3301bc6:	48 c1 e0 03          	shl    $0x3,%rax
 3301bca:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
 3301bce:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301bd2:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301bd6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301bda:	48 89 d0             	mov    %rdx,%rax
 3301bdd:	48 01 c0             	add    %rax,%rax
 3301be0:	48 01 d0             	add    %rdx,%rax
 3301be3:	48 c1 e0 03          	shl    $0x3,%rax
 3301be7:	48 89 c2             	mov    %rax,%rdx
 3301bea:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301bee:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301bf2:	48 8b 06             	mov    (%rsi),%rax
 3301bf5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
 3301bf9:	48 89 01             	mov    %rax,(%rcx)
 3301bfc:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301c00:	48 8b 46 10          	mov    0x10(%rsi),%rax
 3301c04:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301c08:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
 3301c0d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301c11:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
 3301c15:	77 a2                	ja     3301bb9 <HideCodeBase+0x332>
 3301c17:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301c1b:	48 89 d0             	mov    %rdx,%rax
 3301c1e:	48 01 c0             	add    %rax,%rax
 3301c21:	48 01 d0             	add    %rdx,%rax
 3301c24:	48 c1 e0 03          	shl    $0x3,%rax
 3301c28:	48 89 c2             	mov    %rax,%rdx
 3301c2b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301c2f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301c33:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3301c37:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3301c3b:	48 89 01             	mov    %rax,(%rcx)
 3301c3e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301c42:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301c46:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301c4a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301c4e:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301c52:	48 89 d0             	mov    %rdx,%rax
 3301c55:	48 01 c0             	add    %rax,%rax
 3301c58:	48 01 d0             	add    %rdx,%rax
 3301c5b:	48 c1 e0 03          	shl    $0x3,%rax
 3301c5f:	48 89 c2             	mov    %rax,%rdx
 3301c62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301c66:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301c6a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3301c6e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 3301c72:	48 89 01             	mov    %rax,(%rcx)
 3301c75:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301c79:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301c7d:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301c81:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301c85:	8d 50 01             	lea    0x1(%rax),%edx
 3301c88:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3301c8c:	66 89 10             	mov    %dx,(%rax)
 3301c8f:	b8 00 00 00 00       	mov    $0x0,%eax
 3301c94:	c9                   	leaveq 
 3301c95:	c3                   	retq   

0000000003301c96 <PrintBuffer>:
 3301c96:	f3 0f 1e fa          	endbr64 
 3301c9a:	55                   	push   %rbp
 3301c9b:	48 89 e5             	mov    %rsp,%rbp
 3301c9e:	48 83 ec 20          	sub    $0x20,%rsp
 3301ca2:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3301ca6:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3301caa:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3301cb1:	00 
 3301cb2:	eb 29                	jmp    3301cdd <PrintBuffer+0x47>
 3301cb4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301cb8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301cbc:	48 01 d0             	add    %rdx,%rax
 3301cbf:	0f b6 00             	movzbl (%rax),%eax
 3301cc2:	0f b6 c0             	movzbl %al,%eax
 3301cc5:	c7 45 f4 e8 03 00 00 	movl   $0x3e8,-0xc(%rbp)
 3301ccc:	88 45 f3             	mov    %al,-0xd(%rbp)
 3301ccf:	8b 55 f4             	mov    -0xc(%rbp),%edx
 3301cd2:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
 3301cd6:	ee                   	out    %al,(%dx)
 3301cd7:	90                   	nop
 3301cd8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3301cdd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301ce1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 3301ce5:	72 cd                	jb     3301cb4 <PrintBuffer+0x1e>
 3301ce7:	90                   	nop
 3301ce8:	90                   	nop
 3301ce9:	c9                   	leaveq 
 3301cea:	c3                   	retq   

0000000003301ceb <PrintNullTerminatedBuffer>:
 3301ceb:	f3 0f 1e fa          	endbr64 
 3301cef:	55                   	push   %rbp
 3301cf0:	48 89 e5             	mov    %rsp,%rbp
 3301cf3:	48 83 ec 18          	sub    $0x18,%rsp
 3301cf7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3301cfb:	eb 22                	jmp    3301d1f <PrintNullTerminatedBuffer+0x34>
 3301cfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301d01:	0f b6 00             	movzbl (%rax),%eax
 3301d04:	0f b6 c0             	movzbl %al,%eax
 3301d07:	c7 45 fc e8 03 00 00 	movl   $0x3e8,-0x4(%rbp)
 3301d0e:	88 45 fb             	mov    %al,-0x5(%rbp)
 3301d11:	8b 55 fc             	mov    -0x4(%rbp),%edx
 3301d14:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
 3301d18:	ee                   	out    %al,(%dx)
 3301d19:	90                   	nop
 3301d1a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3301d1f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301d23:	0f b6 00             	movzbl (%rax),%eax
 3301d26:	84 c0                	test   %al,%al
 3301d28:	75 d3                	jne    3301cfd <PrintNullTerminatedBuffer+0x12>
 3301d2a:	90                   	nop
 3301d2b:	90                   	nop
 3301d2c:	c9                   	leaveq 
 3301d2d:	c3                   	retq   

0000000003301d2e <PrintVaArg>:
 3301d2e:	f3 0f 1e fa          	endbr64 
 3301d32:	55                   	push   %rbp
 3301d33:	48 89 e5             	mov    %rsp,%rbp
 3301d36:	53                   	push   %rbx
 3301d37:	48 81 ec 88 07 00 00 	sub    $0x788,%rsp
 3301d3e:	48 89 bd 78 f8 ff ff 	mov    %rdi,-0x788(%rbp)
 3301d45:	48 89 b5 70 f8 ff ff 	mov    %rsi,-0x790(%rbp)
 3301d4c:	48 c7 85 80 f8 ff ff 	movq   $0x0,-0x780(%rbp)
 3301d53:	00 00 00 00 
 3301d57:	48 c7 85 88 f8 ff ff 	movq   $0x0,-0x778(%rbp)
 3301d5e:	00 00 00 00 
 3301d62:	48 8d 95 90 f8 ff ff 	lea    -0x770(%rbp),%rdx
 3301d69:	b8 00 00 00 00       	mov    $0x0,%eax
 3301d6e:	b9 de 00 00 00       	mov    $0xde,%ecx
 3301d73:	48 89 d7             	mov    %rdx,%rdi
 3301d76:	f3 48 ab             	rep stos %rax,%es:(%rdi)
 3301d79:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3301d80:	00 
 3301d81:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301d88:	48 89 c7             	mov    %rax,%rdi
 3301d8b:	e8 bb 07 00 00       	callq  330254b <StringLength>
 3301d90:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 3301d94:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3301d9b:	00 
 3301d9c:	e9 d5 03 00 00       	jmpq   3302176 <PrintVaArg+0x448>
 3301da1:	48 8b 95 78 f8 ff ff 	mov    -0x788(%rbp),%rdx
 3301da8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301dac:	48 01 d0             	add    %rdx,%rax
 3301daf:	0f b6 00             	movzbl (%rax),%eax
 3301db2:	3c 25                	cmp    $0x25,%al
 3301db4:	0f 85 92 03 00 00    	jne    330214c <PrintVaArg+0x41e>
 3301dba:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301dbe:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301dc2:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301dc9:	48 01 d0             	add    %rdx,%rax
 3301dcc:	0f b6 00             	movzbl (%rax),%eax
 3301dcf:	0f be c0             	movsbl %al,%eax
 3301dd2:	83 f8 2e             	cmp    $0x2e,%eax
 3301dd5:	0f 84 11 01 00 00    	je     3301eec <PrintVaArg+0x1be>
 3301ddb:	83 f8 64             	cmp    $0x64,%eax
 3301dde:	0f 85 75 02 00 00    	jne    3302059 <PrintVaArg+0x32b>
 3301de4:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301deb:	8b 00                	mov    (%rax),%eax
 3301ded:	83 f8 2f             	cmp    $0x2f,%eax
 3301df0:	77 30                	ja     3301e22 <PrintVaArg+0xf4>
 3301df2:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301df9:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301dfd:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301e04:	8b 00                	mov    (%rax),%eax
 3301e06:	89 c0                	mov    %eax,%eax
 3301e08:	48 01 d0             	add    %rdx,%rax
 3301e0b:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e12:	8b 12                	mov    (%rdx),%edx
 3301e14:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301e17:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e1e:	89 0a                	mov    %ecx,(%rdx)
 3301e20:	eb 1a                	jmp    3301e3c <PrintVaArg+0x10e>
 3301e22:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301e29:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301e2d:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301e31:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e38:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301e3c:	48 8b 00             	mov    (%rax),%rax
 3301e3f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3301e43:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301e47:	48 89 c7             	mov    %rax,%rdi
 3301e4a:	e8 b6 06 00 00       	callq  3302505 <NumberOfDigits>
 3301e4f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3301e53:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3301e57:	48 83 e8 01          	sub    $0x1,%rax
 3301e5b:	48 89 c6             	mov    %rax,%rsi
 3301e5e:	bf 0a 00 00 00       	mov    $0xa,%edi
 3301e63:	e8 60 06 00 00       	callq  33024c8 <pow>
 3301e68:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3301e6c:	eb 6d                	jmp    3301edb <PrintVaArg+0x1ad>
 3301e6e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301e72:	ba 00 00 00 00       	mov    $0x0,%edx
 3301e77:	48 f7 75 d8          	divq   -0x28(%rbp)
 3301e7b:	48 89 c1             	mov    %rax,%rcx
 3301e7e:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3301e85:	cc cc cc 
 3301e88:	48 89 c8             	mov    %rcx,%rax
 3301e8b:	48 f7 e2             	mul    %rdx
 3301e8e:	48 c1 ea 03          	shr    $0x3,%rdx
 3301e92:	48 89 d0             	mov    %rdx,%rax
 3301e95:	48 c1 e0 02          	shl    $0x2,%rax
 3301e99:	48 01 d0             	add    %rdx,%rax
 3301e9c:	48 01 c0             	add    %rax,%rax
 3301e9f:	48 29 c1             	sub    %rax,%rcx
 3301ea2:	48 89 ca             	mov    %rcx,%rdx
 3301ea5:	89 d0                	mov    %edx,%eax
 3301ea7:	8d 48 30             	lea    0x30(%rax),%ecx
 3301eaa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301eae:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301eb2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3301eb6:	89 ca                	mov    %ecx,%edx
 3301eb8:	88 94 05 80 f8 ff ff 	mov    %dl,-0x780(%rbp,%rax,1)
 3301ebf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301ec3:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3301eca:	cc cc cc 
 3301ecd:	48 f7 e2             	mul    %rdx
 3301ed0:	48 89 d0             	mov    %rdx,%rax
 3301ed3:	48 c1 e8 03          	shr    $0x3,%rax
 3301ed7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3301edb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 3301ee0:	75 8c                	jne    3301e6e <PrintVaArg+0x140>
 3301ee2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3301ee7:	e9 85 02 00 00       	jmpq   3302171 <PrintVaArg+0x443>
 3301eec:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301ef0:	48 8d 50 02          	lea    0x2(%rax),%rdx
 3301ef4:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301efb:	48 01 d0             	add    %rdx,%rax
 3301efe:	0f b6 00             	movzbl (%rax),%eax
 3301f01:	0f be c0             	movsbl %al,%eax
 3301f04:	83 f8 62             	cmp    $0x62,%eax
 3301f07:	0f 85 42 01 00 00    	jne    330204f <PrintVaArg+0x321>
 3301f0d:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f14:	8b 00                	mov    (%rax),%eax
 3301f16:	83 f8 2f             	cmp    $0x2f,%eax
 3301f19:	77 30                	ja     3301f4b <PrintVaArg+0x21d>
 3301f1b:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f22:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301f26:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f2d:	8b 00                	mov    (%rax),%eax
 3301f2f:	89 c0                	mov    %eax,%eax
 3301f31:	48 01 d0             	add    %rdx,%rax
 3301f34:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f3b:	8b 12                	mov    (%rdx),%edx
 3301f3d:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301f40:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f47:	89 0a                	mov    %ecx,(%rdx)
 3301f49:	eb 1a                	jmp    3301f65 <PrintVaArg+0x237>
 3301f4b:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f52:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301f56:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301f5a:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f61:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301f65:	48 8b 00             	mov    (%rax),%rax
 3301f68:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3301f6c:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f73:	8b 00                	mov    (%rax),%eax
 3301f75:	83 f8 2f             	cmp    $0x2f,%eax
 3301f78:	77 30                	ja     3301faa <PrintVaArg+0x27c>
 3301f7a:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f81:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301f85:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f8c:	8b 00                	mov    (%rax),%eax
 3301f8e:	89 c0                	mov    %eax,%eax
 3301f90:	48 01 d0             	add    %rdx,%rax
 3301f93:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f9a:	8b 12                	mov    (%rdx),%edx
 3301f9c:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301f9f:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301fa6:	89 0a                	mov    %ecx,(%rdx)
 3301fa8:	eb 1a                	jmp    3301fc4 <PrintVaArg+0x296>
 3301faa:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301fb1:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301fb5:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301fb9:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301fc0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301fc4:	48 8b 00             	mov    (%rax),%rax
 3301fc7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 3301fcb:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 3301fd2:	00 
 3301fd3:	eb 6f                	jmp    3302044 <PrintVaArg+0x316>
 3301fd5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 3301fd9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301fdd:	48 01 d0             	add    %rdx,%rax
 3301fe0:	0f b6 00             	movzbl (%rax),%eax
 3301fe3:	88 45 97             	mov    %al,-0x69(%rbp)
 3301fe6:	0f b6 45 97          	movzbl -0x69(%rbp),%eax
 3301fea:	c0 e8 04             	shr    $0x4,%al
 3301fed:	0f b6 c0             	movzbl %al,%eax
 3301ff0:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 3301ff4:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 3301ff8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3301ffc:	89 c7                	mov    %eax,%edi
 3301ffe:	e8 0b 04 00 00       	callq  330240e <ConvertHalfByteToHexChar>
 3302003:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 330200a:	0f b6 45 97          	movzbl -0x69(%rbp),%eax
 330200e:	83 e0 0f             	and    $0xf,%eax
 3302011:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 3302015:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 3302019:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 330201d:	89 c7                	mov    %eax,%edi
 330201f:	e8 ea 03 00 00       	callq  330240e <ConvertHalfByteToHexChar>
 3302024:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 330202b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330202f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302033:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302037:	c6 84 05 80 f8 ff ff 	movb   $0x20,-0x780(%rbp,%rax,1)
 330203e:	20 
 330203f:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
 3302044:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3302048:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
 330204c:	72 87                	jb     3301fd5 <PrintVaArg+0x2a7>
 330204e:	90                   	nop
 330204f:	48 83 45 e0 02       	addq   $0x2,-0x20(%rbp)
 3302054:	e9 18 01 00 00       	jmpq   3302171 <PrintVaArg+0x443>
 3302059:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330205d:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302061:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3302068:	48 01 d0             	add    %rdx,%rax
 330206b:	0f b6 00             	movzbl (%rax),%eax
 330206e:	83 e8 30             	sub    $0x30,%eax
 3302071:	88 45 96             	mov    %al,-0x6a(%rbp)
 3302074:	0f b6 45 96          	movzbl -0x6a(%rbp),%eax
 3302078:	01 c0                	add    %eax,%eax
 330207a:	83 e8 01             	sub    $0x1,%eax
 330207d:	88 45 cf             	mov    %al,-0x31(%rbp)
 3302080:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3302087:	8b 00                	mov    (%rax),%eax
 3302089:	83 f8 2f             	cmp    $0x2f,%eax
 330208c:	77 30                	ja     33020be <PrintVaArg+0x390>
 330208e:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3302095:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3302099:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 33020a0:	8b 00                	mov    (%rax),%eax
 33020a2:	89 c0                	mov    %eax,%eax
 33020a4:	48 01 d0             	add    %rdx,%rax
 33020a7:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 33020ae:	8b 12                	mov    (%rdx),%edx
 33020b0:	8d 4a 08             	lea    0x8(%rdx),%ecx
 33020b3:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 33020ba:	89 0a                	mov    %ecx,(%rdx)
 33020bc:	eb 1a                	jmp    33020d8 <PrintVaArg+0x3aa>
 33020be:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 33020c5:	48 8b 40 08          	mov    0x8(%rax),%rax
 33020c9:	48 8d 48 08          	lea    0x8(%rax),%rcx
 33020cd:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 33020d4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 33020d8:	48 8b 00             	mov    (%rax),%rax
 33020db:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 33020df:	0f be 45 cf          	movsbl -0x31(%rbp),%eax
 33020e3:	c1 e0 02             	shl    $0x2,%eax
 33020e6:	ba 0f 00 00 00       	mov    $0xf,%edx
 33020eb:	89 c1                	mov    %eax,%ecx
 33020ed:	d3 e2                	shl    %cl,%edx
 33020ef:	89 d0                	mov    %edx,%eax
 33020f1:	48 98                	cltq   
 33020f3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 33020f7:	eb 46                	jmp    330213f <PrintVaArg+0x411>
 33020f9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33020fd:	48 23 45 c0          	and    -0x40(%rbp),%rax
 3302101:	48 89 c2             	mov    %rax,%rdx
 3302104:	0f be 45 cf          	movsbl -0x31(%rbp),%eax
 3302108:	c1 e0 02             	shl    $0x2,%eax
 330210b:	89 c1                	mov    %eax,%ecx
 330210d:	48 d3 ea             	shr    %cl,%rdx
 3302110:	48 89 d0             	mov    %rdx,%rax
 3302113:	0f b6 c0             	movzbl %al,%eax
 3302116:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 330211a:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 330211e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302122:	89 c7                	mov    %eax,%edi
 3302124:	e8 e5 02 00 00       	callq  330240e <ConvertHalfByteToHexChar>
 3302129:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 3302130:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
 3302134:	83 e8 01             	sub    $0x1,%eax
 3302137:	88 45 cf             	mov    %al,-0x31(%rbp)
 330213a:	48 c1 6d c0 04       	shrq   $0x4,-0x40(%rbp)
 330213f:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
 3302143:	79 b4                	jns    33020f9 <PrintVaArg+0x3cb>
 3302145:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 330214a:	eb 25                	jmp    3302171 <PrintVaArg+0x443>
 330214c:	48 8b 95 78 f8 ff ff 	mov    -0x788(%rbp),%rdx
 3302153:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3302157:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 330215b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330215f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302163:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302167:	0f b6 11             	movzbl (%rcx),%edx
 330216a:	88 94 05 80 f8 ff ff 	mov    %dl,-0x780(%rbp,%rax,1)
 3302171:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3302176:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330217a:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
 330217e:	0f 82 1d fc ff ff    	jb     3301da1 <PrintVaArg+0x73>
 3302184:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3302188:	48 8d 85 80 f8 ff ff 	lea    -0x780(%rbp),%rax
 330218f:	48 89 d6             	mov    %rdx,%rsi
 3302192:	48 89 c7             	mov    %rax,%rdi
 3302195:	e8 fc fa ff ff       	callq  3301c96 <PrintBuffer>
 330219a:	90                   	nop
 330219b:	48 81 c4 88 07 00 00 	add    $0x788,%rsp
 33021a2:	5b                   	pop    %rbx
 33021a3:	5d                   	pop    %rbp
 33021a4:	c3                   	retq   

00000000033021a5 <Print>:
 33021a5:	f3 0f 1e fa          	endbr64 
 33021a9:	55                   	push   %rbp
 33021aa:	48 89 e5             	mov    %rsp,%rbp
 33021ad:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
 33021b4:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
 33021bb:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 33021c2:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 33021c9:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 33021d0:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 33021d7:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 33021de:	84 c0                	test   %al,%al
 33021e0:	74 20                	je     3302202 <Print+0x5d>
 33021e2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 33021e6:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 33021ea:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 33021ee:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 33021f2:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 33021f6:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 33021fa:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 33021fe:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 3302202:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
 3302209:	00 00 00 
 330220c:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
 3302213:	00 00 00 
 3302216:	48 8d 45 10          	lea    0x10(%rbp),%rax
 330221a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3302221:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 3302228:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 330222f:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
 3302236:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 330223d:	48 89 d6             	mov    %rdx,%rsi
 3302240:	48 89 c7             	mov    %rax,%rdi
 3302243:	e8 e6 fa ff ff       	callq  3301d2e <PrintVaArg>
 3302248:	90                   	nop
 3302249:	c9                   	leaveq 
 330224a:	c3                   	retq   

000000000330224b <PrintDebugLevelDebug>:
 330224b:	f3 0f 1e fa          	endbr64 
 330224f:	55                   	push   %rbp
 3302250:	48 89 e5             	mov    %rsp,%rbp
 3302253:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
 330225a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
 3302261:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 3302268:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 330226f:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 3302276:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 330227d:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 3302284:	84 c0                	test   %al,%al
 3302286:	74 20                	je     33022a8 <PrintDebugLevelDebug+0x5d>
 3302288:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 330228c:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302290:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 3302294:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 3302298:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 330229c:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 33022a0:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 33022a4:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 33022a8:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
 33022af:	00 00 00 
 33022b2:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
 33022b9:	00 00 00 
 33022bc:	48 8d 45 10          	lea    0x10(%rbp),%rax
 33022c0:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 33022c7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 33022ce:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 33022d5:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
 33022dc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 33022e3:	48 89 d6             	mov    %rdx,%rsi
 33022e6:	48 89 c7             	mov    %rax,%rdi
 33022e9:	e8 40 fa ff ff       	callq  3301d2e <PrintVaArg>
 33022ee:	90                   	nop
 33022ef:	c9                   	leaveq 
 33022f0:	c3                   	retq   

00000000033022f1 <PrintDebugLevelWarning>:
 33022f1:	f3 0f 1e fa          	endbr64 
 33022f5:	55                   	push   %rbp
 33022f6:	48 89 e5             	mov    %rsp,%rbp
 33022f9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 3302300:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
 3302307:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 330230e:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 3302315:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 330231c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 3302323:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 330232a:	84 c0                	test   %al,%al
 330232c:	74 20                	je     330234e <PrintDebugLevelWarning+0x5d>
 330232e:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 3302332:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302336:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 330233a:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 330233e:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 3302342:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 3302346:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 330234a:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 330234e:	90                   	nop
 330234f:	c9                   	leaveq 
 3302350:	c3                   	retq   

0000000003302351 <PrintDebugLevelInfo>:
 3302351:	f3 0f 1e fa          	endbr64 
 3302355:	55                   	push   %rbp
 3302356:	48 89 e5             	mov    %rsp,%rbp
 3302359:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 3302360:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
 3302367:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 330236e:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 3302375:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 330237c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 3302383:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 330238a:	84 c0                	test   %al,%al
 330238c:	74 20                	je     33023ae <PrintDebugLevelInfo+0x5d>
 330238e:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 3302392:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302396:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 330239a:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 330239e:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 33023a2:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 33023a6:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 33023aa:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 33023ae:	90                   	nop
 33023af:	c9                   	leaveq 
 33023b0:	c3                   	retq   

00000000033023b1 <CopyMemory>:
 33023b1:	f3 0f 1e fa          	endbr64 
 33023b5:	55                   	push   %rbp
 33023b6:	48 89 e5             	mov    %rsp,%rbp
 33023b9:	48 83 ec 38          	sub    $0x38,%rsp
 33023bd:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33023c1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33023c5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 33023c9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33023cd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33023d1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33023d5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33023d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33023dd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33023e1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 33023e5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33023e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33023ed:	48 89 ce             	mov    %rcx,%rsi
 33023f0:	48 89 d7             	mov    %rdx,%rdi
 33023f3:	48 89 c1             	mov    %rax,%rcx
 33023f6:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
 33023f8:	48 89 c8             	mov    %rcx,%rax
 33023fb:	48 89 fa             	mov    %rdi,%rdx
 33023fe:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 3302402:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 3302406:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 330240a:	90                   	nop
 330240b:	90                   	nop
 330240c:	c9                   	leaveq 
 330240d:	c3                   	retq   

000000000330240e <ConvertHalfByteToHexChar>:
 330240e:	f3 0f 1e fa          	endbr64 
 3302412:	55                   	push   %rbp
 3302413:	48 89 e5             	mov    %rsp,%rbp
 3302416:	48 83 ec 20          	sub    $0x20,%rsp
 330241a:	89 f8                	mov    %edi,%eax
 330241c:	88 45 ec             	mov    %al,-0x14(%rbp)
 330241f:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
 3302423:	83 f8 0f             	cmp    $0xf,%eax
 3302426:	0f 87 83 00 00 00    	ja     33024af <ConvertHalfByteToHexChar+0xa1>
 330242c:	89 c0                	mov    %eax,%eax
 330242e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3302435:	00 
 3302436:	48 8d 05 5b 3e 00 00 	lea    0x3e5b(%rip),%rax        # 3306298 <CopyMemoryToGuest+0x731>
 330243d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 3302440:	48 98                	cltq   
 3302442:	48 8d 15 4f 3e 00 00 	lea    0x3e4f(%rip),%rdx        # 3306298 <CopyMemoryToGuest+0x731>
 3302449:	48 01 d0             	add    %rdx,%rax
 330244c:	3e ff e0             	notrack jmpq *%rax
 330244f:	c6 45 ff 30          	movb   $0x30,-0x1(%rbp)
 3302453:	eb 6d                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302455:	c6 45 ff 31          	movb   $0x31,-0x1(%rbp)
 3302459:	eb 67                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 330245b:	c6 45 ff 32          	movb   $0x32,-0x1(%rbp)
 330245f:	eb 61                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302461:	c6 45 ff 33          	movb   $0x33,-0x1(%rbp)
 3302465:	eb 5b                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302467:	c6 45 ff 34          	movb   $0x34,-0x1(%rbp)
 330246b:	eb 55                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 330246d:	c6 45 ff 35          	movb   $0x35,-0x1(%rbp)
 3302471:	eb 4f                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302473:	c6 45 ff 36          	movb   $0x36,-0x1(%rbp)
 3302477:	eb 49                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302479:	c6 45 ff 37          	movb   $0x37,-0x1(%rbp)
 330247d:	eb 43                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 330247f:	c6 45 ff 38          	movb   $0x38,-0x1(%rbp)
 3302483:	eb 3d                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302485:	c6 45 ff 39          	movb   $0x39,-0x1(%rbp)
 3302489:	eb 37                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 330248b:	c6 45 ff 41          	movb   $0x41,-0x1(%rbp)
 330248f:	eb 31                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302491:	c6 45 ff 42          	movb   $0x42,-0x1(%rbp)
 3302495:	eb 2b                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 3302497:	c6 45 ff 43          	movb   $0x43,-0x1(%rbp)
 330249b:	eb 25                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 330249d:	c6 45 ff 44          	movb   $0x44,-0x1(%rbp)
 33024a1:	eb 1f                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 33024a3:	c6 45 ff 45          	movb   $0x45,-0x1(%rbp)
 33024a7:	eb 19                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 33024a9:	c6 45 ff 46          	movb   $0x46,-0x1(%rbp)
 33024ad:	eb 13                	jmp    33024c2 <ConvertHalfByteToHexChar+0xb4>
 33024af:	48 8d 3d 82 3d 00 00 	lea    0x3d82(%rip),%rdi        # 3306238 <CopyMemoryToGuest+0x6d1>
 33024b6:	b8 00 00 00 00       	mov    $0x0,%eax
 33024bb:	e8 e5 fc ff ff       	callq  33021a5 <Print>
 33024c0:	eb fe                	jmp    33024c0 <ConvertHalfByteToHexChar+0xb2>
 33024c2:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 33024c6:	c9                   	leaveq 
 33024c7:	c3                   	retq   

00000000033024c8 <pow>:
 33024c8:	f3 0f 1e fa          	endbr64 
 33024cc:	55                   	push   %rbp
 33024cd:	48 89 e5             	mov    %rsp,%rbp
 33024d0:	48 83 ec 20          	sub    $0x20,%rsp
 33024d4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 33024d8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 33024dc:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
 33024e3:	00 
 33024e4:	eb 12                	jmp    33024f8 <pow+0x30>
 33024e6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33024ea:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
 33024ef:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33024f3:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
 33024f8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 33024fd:	75 e7                	jne    33024e6 <pow+0x1e>
 33024ff:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302503:	c9                   	leaveq 
 3302504:	c3                   	retq   

0000000003302505 <NumberOfDigits>:
 3302505:	f3 0f 1e fa          	endbr64 
 3302509:	55                   	push   %rbp
 330250a:	48 89 e5             	mov    %rsp,%rbp
 330250d:	48 83 ec 18          	sub    $0x18,%rsp
 3302511:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302515:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330251c:	00 
 330251d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302521:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3302528:	cc cc cc 
 330252b:	48 f7 e2             	mul    %rdx
 330252e:	48 89 d0             	mov    %rdx,%rax
 3302531:	48 c1 e8 03          	shr    $0x3,%rax
 3302535:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3302539:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330253e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 3302543:	75 d8                	jne    330251d <NumberOfDigits+0x18>
 3302545:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302549:	c9                   	leaveq 
 330254a:	c3                   	retq   

000000000330254b <StringLength>:
 330254b:	f3 0f 1e fa          	endbr64 
 330254f:	55                   	push   %rbp
 3302550:	48 89 e5             	mov    %rsp,%rbp
 3302553:	48 83 ec 18          	sub    $0x18,%rsp
 3302557:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 330255b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3302562:	00 
 3302563:	eb 05                	jmp    330256a <StringLength+0x1f>
 3302565:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330256a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330256e:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302572:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302576:	0f b6 00             	movzbl (%rax),%eax
 3302579:	84 c0                	test   %al,%al
 330257b:	75 e8                	jne    3302565 <StringLength+0x1a>
 330257d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302581:	c9                   	leaveq 
 3302582:	c3                   	retq   

0000000003302583 <CompareMemory>:
 3302583:	f3 0f 1e fa          	endbr64 
 3302587:	55                   	push   %rbp
 3302588:	48 89 e5             	mov    %rsp,%rbp
 330258b:	48 83 ec 28          	sub    $0x28,%rsp
 330258f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302593:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3302597:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 330259b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33025a2:	00 
 33025a3:	eb 55                	jmp    33025fa <CompareMemory+0x77>
 33025a5:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33025a9:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025ad:	48 01 d0             	add    %rdx,%rax
 33025b0:	0f b6 10             	movzbl (%rax),%edx
 33025b3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 33025b7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025bb:	48 01 c8             	add    %rcx,%rax
 33025be:	0f b6 00             	movzbl (%rax),%eax
 33025c1:	38 c2                	cmp    %al,%dl
 33025c3:	75 07                	jne    33025cc <CompareMemory+0x49>
 33025c5:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33025ca:	eb 2e                	jmp    33025fa <CompareMemory+0x77>
 33025cc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33025d0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025d4:	48 01 d0             	add    %rdx,%rax
 33025d7:	0f b6 10             	movzbl (%rax),%edx
 33025da:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 33025de:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025e2:	48 01 c8             	add    %rcx,%rax
 33025e5:	0f b6 00             	movzbl (%rax),%eax
 33025e8:	38 c2                	cmp    %al,%dl
 33025ea:	73 07                	jae    33025f3 <CompareMemory+0x70>
 33025ec:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 33025f1:	eb 16                	jmp    3302609 <CompareMemory+0x86>
 33025f3:	b8 01 00 00 00       	mov    $0x1,%eax
 33025f8:	eb 0f                	jmp    3302609 <CompareMemory+0x86>
 33025fa:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025fe:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 3302602:	72 a1                	jb     33025a5 <CompareMemory+0x22>
 3302604:	b8 00 00 00 00       	mov    $0x0,%eax
 3302609:	c9                   	leaveq 
 330260a:	c3                   	retq   

000000000330260b <SetMemory>:
 330260b:	f3 0f 1e fa          	endbr64 
 330260f:	55                   	push   %rbp
 3302610:	48 89 e5             	mov    %rsp,%rbp
 3302613:	48 83 ec 18          	sub    $0x18,%rsp
 3302617:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 330261b:	89 f0                	mov    %esi,%eax
 330261d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302621:	88 45 f4             	mov    %al,-0xc(%rbp)
 3302624:	eb 17                	jmp    330263d <SetMemory+0x32>
 3302626:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
 330262b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330262f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302633:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 3302637:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
 330263b:	88 10                	mov    %dl,(%rax)
 330263d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 3302642:	75 e2                	jne    3302626 <SetMemory+0x1b>
 3302644:	90                   	nop
 3302645:	90                   	nop
 3302646:	c9                   	leaveq 
 3302647:	c3                   	retq   

0000000003302648 <DumpHostStack>:
 3302648:	f3 0f 1e fa          	endbr64 
 330264c:	55                   	push   %rbp
 330264d:	48 89 e5             	mov    %rsp,%rbp
 3302650:	48 83 ec 20          	sub    $0x20,%rsp
 3302654:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302658:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330265f:	00 
 3302660:	eb 53                	jmp    33026b5 <DumpHostStack+0x6d>
 3302662:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 3302667:	74 1d                	je     3302686 <DumpHostStack+0x3e>
 3302669:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330266d:	83 e0 07             	and    $0x7,%eax
 3302670:	48 85 c0             	test   %rax,%rax
 3302673:	75 11                	jne    3302686 <DumpHostStack+0x3e>
 3302675:	48 8d 3d 5c 3c 00 00 	lea    0x3c5c(%rip),%rdi        # 33062d8 <CopyMemoryToGuest+0x771>
 330267c:	b8 00 00 00 00       	mov    $0x0,%eax
 3302681:	e8 1f fb ff ff       	callq  33021a5 <Print>
 3302686:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330268a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3302691:	00 
 3302692:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302696:	48 01 d0             	add    %rdx,%rax
 3302699:	48 8b 00             	mov    (%rax),%rax
 330269c:	48 89 c6             	mov    %rax,%rsi
 330269f:	48 8d 3d 34 3c 00 00 	lea    0x3c34(%rip),%rdi        # 33062da <CopyMemoryToGuest+0x773>
 33026a6:	b8 00 00 00 00       	mov    $0x0,%eax
 33026ab:	e8 f5 fa ff ff       	callq  33021a5 <Print>
 33026b0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33026b5:	48 81 7d f8 c7 00 00 	cmpq   $0xc7,-0x8(%rbp)
 33026bc:	00 
 33026bd:	76 a3                	jbe    3302662 <DumpHostStack+0x1a>
 33026bf:	48 8d 3d 12 3c 00 00 	lea    0x3c12(%rip),%rdi        # 33062d8 <CopyMemoryToGuest+0x771>
 33026c6:	b8 00 00 00 00       	mov    $0x0,%eax
 33026cb:	e8 d5 fa ff ff       	callq  33021a5 <Print>
 33026d0:	90                   	nop
 33026d1:	c9                   	leaveq 
 33026d2:	c3                   	retq   

00000000033026d3 <vmread>:
 33026d3:	f3 0f 1e fa          	endbr64 
 33026d7:	55                   	push   %rbp
 33026d8:	48 89 e5             	mov    %rsp,%rbp
 33026db:	48 83 ec 28          	sub    $0x28,%rsp
 33026df:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33026e3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33026e7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33026eb:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 33026ef:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33026f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33026f7:	0f 78 c2             	vmread %rax,%rdx
 33026fa:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33026fe:	48 89 10             	mov    %rdx,(%rax)
 3302701:	90                   	nop
 3302702:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302706:	c9                   	leaveq 
 3302707:	c3                   	retq   

0000000003302708 <SetupVirtualAddress>:
 3302708:	f3 0f 1e fa          	endbr64 
 330270c:	55                   	push   %rbp
 330270d:	48 89 e5             	mov    %rsp,%rbp
 3302710:	48 83 ec 08          	sub    $0x8,%rsp
 3302714:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302718:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330271c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3302720:	48 81 c2 40 06 00 00 	add    $0x640,%rdx
 3302727:	48 8b 00             	mov    (%rax),%rax
 330272a:	48 89 02             	mov    %rax,(%rdx)
 330272d:	90                   	nop
 330272e:	c9                   	leaveq 
 330272f:	c3                   	retq   

0000000003302730 <VirtualToPhysical>:
 3302730:	f3 0f 1e fa          	endbr64 
 3302734:	55                   	push   %rbp
 3302735:	48 89 e5             	mov    %rsp,%rbp
 3302738:	48 83 ec 08          	sub    $0x8,%rsp
 330273c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302740:	48 ba 00 00 00 00 00 	movabs $0xffff9c0000000000,%rdx
 3302747:	9c ff ff 
 330274a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330274e:	48 01 d0             	add    %rdx,%rax
 3302751:	c9                   	leaveq 
 3302752:	c3                   	retq   

0000000003302753 <PhysicalToVirtual>:
 3302753:	f3 0f 1e fa          	endbr64 
 3302757:	55                   	push   %rbp
 3302758:	48 89 e5             	mov    %rsp,%rbp
 330275b:	48 83 ec 08          	sub    $0x8,%rsp
 330275f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302763:	48 ba 00 00 00 00 00 	movabs $0x640000000000,%rdx
 330276a:	64 00 00 
 330276d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302771:	48 01 d0             	add    %rdx,%rax
 3302774:	c9                   	leaveq 
 3302775:	c3                   	retq   

0000000003302776 <InitializeHypervisorPaging>:
 3302776:	f3 0f 1e fa          	endbr64 
 330277a:	55                   	push   %rbp
 330277b:	48 89 e5             	mov    %rsp,%rbp
 330277e:	48 83 ec 30          	sub    $0x30,%rsp
 3302782:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3302786:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330278a:	48 05 00 80 00 00    	add    $0x8000,%rax
 3302790:	48 89 c7             	mov    %rax,%rdi
 3302793:	e8 98 ff ff ff       	callq  3302730 <VirtualToPhysical>
 3302798:	48 83 c8 03          	or     $0x3,%rax
 330279c:	48 89 c2             	mov    %rax,%rdx
 330279f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027a3:	48 89 90 00 70 00 00 	mov    %rdx,0x7000(%rax)
 33027aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027ae:	48 05 00 80 00 00    	add    $0x8000,%rax
 33027b4:	48 89 c7             	mov    %rax,%rdi
 33027b7:	e8 74 ff ff ff       	callq  3302730 <VirtualToPhysical>
 33027bc:	48 83 c8 03          	or     $0x3,%rax
 33027c0:	48 89 c2             	mov    %rax,%rdx
 33027c3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027c7:	48 89 90 40 76 00 00 	mov    %rdx,0x7640(%rax)
 33027ce:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33027d5:	00 
 33027d6:	eb 44                	jmp    330281c <InitializeHypervisorPaging+0xa6>
 33027d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33027dc:	48 c1 e0 09          	shl    $0x9,%rax
 33027e0:	48 05 00 12 00 00    	add    $0x1200,%rax
 33027e6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 33027ed:	00 
 33027ee:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027f2:	48 01 d0             	add    %rdx,%rax
 33027f5:	48 89 c7             	mov    %rax,%rdi
 33027f8:	e8 33 ff ff ff       	callq  3302730 <VirtualToPhysical>
 33027fd:	48 83 c8 03          	or     $0x3,%rax
 3302801:	48 89 c1             	mov    %rax,%rcx
 3302804:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302808:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330280c:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 3302813:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302817:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330281c:	48 83 7d f8 0f       	cmpq   $0xf,-0x8(%rbp)
 3302821:	76 b5                	jbe    33027d8 <InitializeHypervisorPaging+0x62>
 3302823:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 330282a:	00 
 330282b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3302832:	00 
 3302833:	eb 29                	jmp    330285e <InitializeHypervisorPaging+0xe8>
 3302835:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3302839:	0c 83                	or     $0x83,%al
 330283b:	48 89 c1             	mov    %rax,%rcx
 330283e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302842:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3302846:	48 81 c2 00 12 00 00 	add    $0x1200,%rdx
 330284d:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302851:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3302856:	48 81 45 f0 00 00 20 	addq   $0x200000,-0x10(%rbp)
 330285d:	00 
 330285e:	48 81 7d e8 ff 1f 00 	cmpq   $0x1fff,-0x18(%rbp)
 3302865:	00 
 3302866:	76 cd                	jbe    3302835 <InitializeHypervisorPaging+0xbf>
 3302868:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330286c:	48 05 00 70 00 00    	add    $0x7000,%rax
 3302872:	48 89 c7             	mov    %rax,%rdi
 3302875:	e8 b6 fe ff ff       	callq  3302730 <VirtualToPhysical>
 330287a:	c9                   	leaveq 
 330287b:	c3                   	retq   

000000000330287c <InitializeExtendedPageTable>:
 330287c:	f3 0f 1e fa          	endbr64 
 3302880:	55                   	push   %rbp
 3302881:	48 89 e5             	mov    %rsp,%rbp
 3302884:	48 83 ec 40          	sub    $0x40,%rsp
 3302888:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330288c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302890:	48 05 00 90 20 00    	add    $0x209000,%rax
 3302896:	48 89 c7             	mov    %rax,%rdi
 3302899:	e8 92 fe ff ff       	callq  3302730 <VirtualToPhysical>
 330289e:	48 83 c8 1e          	or     $0x1e,%rax
 33028a2:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 33028a6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028aa:	48 05 00 a0 20 00    	add    $0x20a000,%rax
 33028b0:	48 89 c7             	mov    %rax,%rdi
 33028b3:	e8 78 fe ff ff       	callq  3302730 <VirtualToPhysical>
 33028b8:	48 83 c8 07          	or     $0x7,%rax
 33028bc:	48 89 c2             	mov    %rax,%rdx
 33028bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028c3:	48 89 90 00 90 20 00 	mov    %rdx,0x209000(%rax)
 33028ca:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33028d1:	00 
 33028d2:	eb 44                	jmp    3302918 <InitializeExtendedPageTable+0x9c>
 33028d4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33028d8:	48 c1 e0 09          	shl    $0x9,%rax
 33028dc:	48 05 00 16 04 00    	add    $0x41600,%rax
 33028e2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 33028e9:	00 
 33028ea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028ee:	48 01 d0             	add    %rdx,%rax
 33028f1:	48 89 c7             	mov    %rax,%rdi
 33028f4:	e8 37 fe ff ff       	callq  3302730 <VirtualToPhysical>
 33028f9:	48 83 c8 07          	or     $0x7,%rax
 33028fd:	48 89 c1             	mov    %rax,%rcx
 3302900:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302904:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3302908:	48 81 c2 00 14 04 00 	add    $0x41400,%rdx
 330290f:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302913:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3302918:	48 83 7d f8 0f       	cmpq   $0xf,-0x8(%rbp)
 330291d:	76 b5                	jbe    33028d4 <InitializeExtendedPageTable+0x58>
 330291f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3302926:	00 
 3302927:	eb 44                	jmp    330296d <InitializeExtendedPageTable+0xf1>
 3302929:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330292d:	48 c1 e0 09          	shl    $0x9,%rax
 3302931:	48 05 00 36 04 00    	add    $0x43600,%rax
 3302937:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 330293e:	00 
 330293f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302943:	48 01 d0             	add    %rdx,%rax
 3302946:	48 89 c7             	mov    %rax,%rdi
 3302949:	e8 e2 fd ff ff       	callq  3302730 <VirtualToPhysical>
 330294e:	48 83 c8 07          	or     $0x7,%rax
 3302952:	48 89 c1             	mov    %rax,%rcx
 3302955:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302959:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 330295d:	48 81 c2 00 16 04 00 	add    $0x41600,%rdx
 3302964:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302968:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 330296d:	48 81 7d f0 ff 1f 00 	cmpq   $0x1fff,-0x10(%rbp)
 3302974:	00 
 3302975:	76 b2                	jbe    3302929 <InitializeExtendedPageTable+0xad>
 3302977:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 330297e:	00 
 330297f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3302986:	00 
 3302987:	eb 2b                	jmp    33029b4 <InitializeExtendedPageTable+0x138>
 3302989:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330298d:	48 83 c8 37          	or     $0x37,%rax
 3302991:	48 89 c1             	mov    %rax,%rcx
 3302994:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302998:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330299c:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 33029a3:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 33029a7:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 33029ac:	48 81 45 e8 00 10 00 	addq   $0x1000,-0x18(%rbp)
 33029b3:	00 
 33029b4:	48 81 7d e0 ff ff 3f 	cmpq   $0x3fffff,-0x20(%rbp)
 33029bb:	00 
 33029bc:	76 cb                	jbe    3302989 <InitializeExtendedPageTable+0x10d>
 33029be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33029c2:	c9                   	leaveq 
 33029c3:	c3                   	retq   

00000000033029c4 <CreateEPTEntry>:
 33029c4:	f3 0f 1e fa          	endbr64 
 33029c8:	55                   	push   %rbp
 33029c9:	48 89 e5             	mov    %rsp,%rbp
 33029cc:	48 83 ec 10          	sub    $0x10,%rsp
 33029d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33029d4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 33029d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33029dc:	48 0b 45 f0          	or     -0x10(%rbp),%rax
 33029e0:	48 83 c8 30          	or     $0x30,%rax
 33029e4:	c9                   	leaveq 
 33029e5:	c3                   	retq   

00000000033029e6 <HandleCrAccess>:
 33029e6:	f3 0f 1e fa          	endbr64 
 33029ea:	55                   	push   %rbp
 33029eb:	48 89 e5             	mov    %rsp,%rbp
 33029ee:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
 33029f5:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
 33029fc:	bf 02 40 00 00       	mov    $0x4002,%edi
 3302a01:	e8 cd fc ff ff       	callq  33026d3 <vmread>
 3302a06:	48 25 ff 7f fe ff    	and    $0xfffffffffffe7fff,%rax
 3302a0c:	48 c7 45 d8 02 40 00 	movq   $0x4002,-0x28(%rbp)
 3302a13:	00 
 3302a14:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3302a18:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302a1c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3302a20:	0f 79 c2             	vmwrite %rdx,%rax
 3302a23:	90                   	nop
 3302a24:	bf 00 64 00 00       	mov    $0x6400,%edi
 3302a29:	e8 a5 fc ff ff       	callq  33026d3 <vmread>
 3302a2e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3302a32:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302a36:	83 e0 30             	and    $0x30,%eax
 3302a39:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3302a3d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 3302a44:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3302a48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302a4c:	83 e0 0f             	and    $0xf,%eax
 3302a4f:	48 85 c0             	test   %rax,%rax
 3302a52:	74 0b                	je     3302a5f <HandleCrAccess+0x79>
 3302a54:	48 83 f8 03          	cmp    $0x3,%rax
 3302a58:	74 5d                	je     3302ab7 <HandleCrAccess+0xd1>
 3302a5a:	e9 44 07 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302a5f:	48 83 7d f0 30       	cmpq   $0x30,-0x10(%rbp)
 3302a64:	75 13                	jne    3302a79 <HandleCrAccess+0x93>
 3302a66:	48 8d 3d 73 38 00 00 	lea    0x3873(%rip),%rdi        # 33062e0 <CopyMemoryToGuest+0x779>
 3302a6d:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a72:	e8 d4 f7 ff ff       	callq  330224b <PrintDebugLevelDebug>
 3302a77:	eb 2b                	jmp    3302aa4 <HandleCrAccess+0xbe>
 3302a79:	48 83 7d f0 20       	cmpq   $0x20,-0x10(%rbp)
 3302a7e:	75 13                	jne    3302a93 <HandleCrAccess+0xad>
 3302a80:	48 8d 3d 81 38 00 00 	lea    0x3881(%rip),%rdi        # 3306308 <CopyMemoryToGuest+0x7a1>
 3302a87:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a8c:	e8 ba f7 ff ff       	callq  330224b <PrintDebugLevelDebug>
 3302a91:	eb 11                	jmp    3302aa4 <HandleCrAccess+0xbe>
 3302a93:	48 8d 3d 96 38 00 00 	lea    0x3896(%rip),%rdi        # 3306330 <CopyMemoryToGuest+0x7c9>
 3302a9a:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a9f:	e8 01 f7 ff ff       	callq  33021a5 <Print>
 3302aa4:	48 8d 3d c5 38 00 00 	lea    0x38c5(%rip),%rdi        # 3306370 <CopyMemoryToGuest+0x809>
 3302aab:	b8 00 00 00 00       	mov    $0x0,%eax
 3302ab0:	e8 f0 f6 ff ff       	callq  33021a5 <Print>
 3302ab5:	eb fe                	jmp    3302ab5 <HandleCrAccess+0xcf>
 3302ab7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
 3302abc:	0f 85 55 04 00 00    	jne    3302f17 <HandleCrAccess+0x531>
 3302ac2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302ac6:	25 00 0f 00 00       	and    $0xf00,%eax
 3302acb:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302ad1:	0f 84 f4 03 00 00    	je     3302ecb <HandleCrAccess+0x4e5>
 3302ad7:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302add:	0f 87 19 04 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302ae3:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302ae9:	0f 84 ab 03 00 00    	je     3302e9a <HandleCrAccess+0x4b4>
 3302aef:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302af5:	0f 87 01 04 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302afb:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302b01:	0f 84 62 03 00 00    	je     3302e69 <HandleCrAccess+0x483>
 3302b07:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302b0d:	0f 87 e9 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b13:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302b19:	0f 84 19 03 00 00    	je     3302e38 <HandleCrAccess+0x452>
 3302b1f:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302b25:	0f 87 d1 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b2b:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302b31:	0f 84 d0 02 00 00    	je     3302e07 <HandleCrAccess+0x421>
 3302b37:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302b3d:	0f 87 b9 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b43:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302b49:	0f 84 87 02 00 00    	je     3302dd6 <HandleCrAccess+0x3f0>
 3302b4f:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302b55:	0f 87 a1 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b5b:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302b61:	0f 84 3e 02 00 00    	je     3302da5 <HandleCrAccess+0x3bf>
 3302b67:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302b6d:	0f 87 89 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b73:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302b79:	0f 84 f5 01 00 00    	je     3302d74 <HandleCrAccess+0x38e>
 3302b7f:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302b85:	0f 87 71 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302b8b:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302b91:	0f 84 ac 01 00 00    	je     3302d43 <HandleCrAccess+0x35d>
 3302b97:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302b9d:	0f 87 59 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302ba3:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3302ba9:	0f 84 63 01 00 00    	je     3302d12 <HandleCrAccess+0x32c>
 3302baf:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3302bb5:	0f 87 41 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302bbb:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 3302bc1:	0f 84 1a 01 00 00    	je     3302ce1 <HandleCrAccess+0x2fb>
 3302bc7:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 3302bcd:	0f 87 29 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302bd3:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3302bd9:	0f 84 dd 00 00 00    	je     3302cbc <HandleCrAccess+0x2d6>
 3302bdf:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3302be5:	0f 87 11 03 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302beb:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3302bf1:	74 5a                	je     3302c4d <HandleCrAccess+0x267>
 3302bf3:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3302bf9:	0f 87 fd 02 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302bff:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3302c05:	0f 84 8c 00 00 00    	je     3302c97 <HandleCrAccess+0x2b1>
 3302c0b:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3302c11:	0f 87 e5 02 00 00    	ja     3302efc <HandleCrAccess+0x516>
 3302c17:	48 85 c0             	test   %rax,%rax
 3302c1a:	74 0d                	je     3302c29 <HandleCrAccess+0x243>
 3302c1c:	48 3d 00 01 00 00    	cmp    $0x100,%rax
 3302c22:	74 4e                	je     3302c72 <HandleCrAccess+0x28c>
 3302c24:	e9 d3 02 00 00       	jmpq   3302efc <HandleCrAccess+0x516>
 3302c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c2d:	48 8b 00             	mov    (%rax),%rax
 3302c30:	48 c7 45 c8 02 68 00 	movq   $0x6802,-0x38(%rbp)
 3302c37:	00 
 3302c38:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3302c3c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302c40:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 3302c44:	0f 79 c2             	vmwrite %rdx,%rax
 3302c47:	90                   	nop
 3302c48:	e9 56 05 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302c4d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c51:	48 8b 40 08          	mov    0x8(%rax),%rax
 3302c55:	48 c7 45 b8 02 68 00 	movq   $0x6802,-0x48(%rbp)
 3302c5c:	00 
 3302c5d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3302c61:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3302c65:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 3302c69:	0f 79 c2             	vmwrite %rdx,%rax
 3302c6c:	90                   	nop
 3302c6d:	e9 31 05 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302c72:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c76:	48 8b 40 10          	mov    0x10(%rax),%rax
 3302c7a:	48 c7 45 a8 02 68 00 	movq   $0x6802,-0x58(%rbp)
 3302c81:	00 
 3302c82:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3302c86:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3302c8a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
 3302c8e:	0f 79 c2             	vmwrite %rdx,%rax
 3302c91:	90                   	nop
 3302c92:	e9 0c 05 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302c97:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c9b:	48 8b 40 18          	mov    0x18(%rax),%rax
 3302c9f:	48 c7 45 98 02 68 00 	movq   $0x6802,-0x68(%rbp)
 3302ca6:	00 
 3302ca7:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 3302cab:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3302caf:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
 3302cb3:	0f 79 c2             	vmwrite %rdx,%rax
 3302cb6:	90                   	nop
 3302cb7:	e9 e7 04 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302cbc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302cc0:	48 8b 40 78          	mov    0x78(%rax),%rax
 3302cc4:	48 c7 45 88 02 68 00 	movq   $0x6802,-0x78(%rbp)
 3302ccb:	00 
 3302ccc:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 3302cd0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3302cd4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
 3302cd8:	0f 79 c2             	vmwrite %rdx,%rax
 3302cdb:	90                   	nop
 3302cdc:	e9 c2 04 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302ce1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302ce5:	48 8b 40 30          	mov    0x30(%rax),%rax
 3302ce9:	48 c7 85 78 ff ff ff 	movq   $0x6802,-0x88(%rbp)
 3302cf0:	02 68 00 00 
 3302cf4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 3302cfb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 3302d02:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
 3302d09:	0f 79 c2             	vmwrite %rdx,%rax
 3302d0c:	90                   	nop
 3302d0d:	e9 91 04 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302d12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d16:	48 8b 40 20          	mov    0x20(%rax),%rax
 3302d1a:	48 c7 85 68 ff ff ff 	movq   $0x6802,-0x98(%rbp)
 3302d21:	02 68 00 00 
 3302d25:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 3302d2c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 3302d33:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
 3302d3a:	0f 79 c2             	vmwrite %rdx,%rax
 3302d3d:	90                   	nop
 3302d3e:	e9 60 04 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302d43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d47:	48 8b 40 28          	mov    0x28(%rax),%rax
 3302d4b:	48 c7 85 58 ff ff ff 	movq   $0x6802,-0xa8(%rbp)
 3302d52:	02 68 00 00 
 3302d56:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 3302d5d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 3302d64:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
 3302d6b:	0f 79 c2             	vmwrite %rdx,%rax
 3302d6e:	90                   	nop
 3302d6f:	e9 2f 04 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302d74:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d78:	48 8b 40 38          	mov    0x38(%rax),%rax
 3302d7c:	48 c7 85 48 ff ff ff 	movq   $0x6802,-0xb8(%rbp)
 3302d83:	02 68 00 00 
 3302d87:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3302d8e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 3302d95:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
 3302d9c:	0f 79 c2             	vmwrite %rdx,%rax
 3302d9f:	90                   	nop
 3302da0:	e9 fe 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302da5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302da9:	48 8b 40 40          	mov    0x40(%rax),%rax
 3302dad:	48 c7 85 38 ff ff ff 	movq   $0x6802,-0xc8(%rbp)
 3302db4:	02 68 00 00 
 3302db8:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 3302dbf:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 3302dc6:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
 3302dcd:	0f 79 c2             	vmwrite %rdx,%rax
 3302dd0:	90                   	nop
 3302dd1:	e9 cd 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302dd6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302dda:	48 8b 40 48          	mov    0x48(%rax),%rax
 3302dde:	48 c7 85 28 ff ff ff 	movq   $0x6802,-0xd8(%rbp)
 3302de5:	02 68 00 00 
 3302de9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 3302df0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 3302df7:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
 3302dfe:	0f 79 c2             	vmwrite %rdx,%rax
 3302e01:	90                   	nop
 3302e02:	e9 9c 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302e07:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e0b:	48 8b 40 50          	mov    0x50(%rax),%rax
 3302e0f:	48 c7 85 18 ff ff ff 	movq   $0x6802,-0xe8(%rbp)
 3302e16:	02 68 00 00 
 3302e1a:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 3302e21:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3302e28:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
 3302e2f:	0f 79 c2             	vmwrite %rdx,%rax
 3302e32:	90                   	nop
 3302e33:	e9 6b 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302e38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e3c:	48 8b 40 58          	mov    0x58(%rax),%rax
 3302e40:	48 c7 85 08 ff ff ff 	movq   $0x6802,-0xf8(%rbp)
 3302e47:	02 68 00 00 
 3302e4b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 3302e52:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 3302e59:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
 3302e60:	0f 79 c2             	vmwrite %rdx,%rax
 3302e63:	90                   	nop
 3302e64:	e9 3a 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302e69:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e6d:	48 8b 40 60          	mov    0x60(%rax),%rax
 3302e71:	48 c7 85 f8 fe ff ff 	movq   $0x6802,-0x108(%rbp)
 3302e78:	02 68 00 00 
 3302e7c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 3302e83:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3302e8a:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
 3302e91:	0f 79 c2             	vmwrite %rdx,%rax
 3302e94:	90                   	nop
 3302e95:	e9 09 03 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302e9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e9e:	48 8b 40 68          	mov    0x68(%rax),%rax
 3302ea2:	48 c7 85 e8 fe ff ff 	movq   $0x6802,-0x118(%rbp)
 3302ea9:	02 68 00 00 
 3302ead:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 3302eb4:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 3302ebb:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
 3302ec2:	0f 79 c2             	vmwrite %rdx,%rax
 3302ec5:	90                   	nop
 3302ec6:	e9 d8 02 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302ecb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302ecf:	48 8b 40 70          	mov    0x70(%rax),%rax
 3302ed3:	48 c7 85 d8 fe ff ff 	movq   $0x6802,-0x128(%rbp)
 3302eda:	02 68 00 00 
 3302ede:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 3302ee5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 3302eec:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
 3302ef3:	0f 79 c2             	vmwrite %rdx,%rax
 3302ef6:	90                   	nop
 3302ef7:	e9 a7 02 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3302efc:	48 8d 3d d5 34 00 00 	lea    0x34d5(%rip),%rdi        # 33063d8 <CopyMemoryToGuest+0x871>
 3302f03:	b8 00 00 00 00       	mov    $0x0,%eax
 3302f08:	e8 98 f2 ff ff       	callq  33021a5 <Print>
 3302f0d:	b8 10 00 00 00       	mov    $0x10,%eax
 3302f12:	e9 b4 02 00 00       	jmpq   33031cb <HandleCrAccess+0x7e5>
 3302f17:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
 3302f1c:	0f 85 80 02 00 00    	jne    33031a2 <HandleCrAccess+0x7bc>
 3302f22:	bf 02 68 00 00       	mov    $0x6802,%edi
 3302f27:	e8 a7 f7 ff ff       	callq  33026d3 <vmread>
 3302f2c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3302f30:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302f34:	25 00 0f 00 00       	and    $0xf00,%eax
 3302f39:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302f3f:	0f 84 37 02 00 00    	je     330317c <HandleCrAccess+0x796>
 3302f45:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302f4b:	0f 87 39 02 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302f51:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302f57:	0f 84 11 02 00 00    	je     330316e <HandleCrAccess+0x788>
 3302f5d:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302f63:	0f 87 21 02 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302f69:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302f6f:	0f 84 eb 01 00 00    	je     3303160 <HandleCrAccess+0x77a>
 3302f75:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302f7b:	0f 87 09 02 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302f81:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302f87:	0f 84 c5 01 00 00    	je     3303152 <HandleCrAccess+0x76c>
 3302f8d:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302f93:	0f 87 f1 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302f99:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302f9f:	0f 84 9f 01 00 00    	je     3303144 <HandleCrAccess+0x75e>
 3302fa5:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302fab:	0f 87 d9 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302fb1:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302fb7:	0f 84 79 01 00 00    	je     3303136 <HandleCrAccess+0x750>
 3302fbd:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302fc3:	0f 87 c1 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302fc9:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302fcf:	0f 84 53 01 00 00    	je     3303128 <HandleCrAccess+0x742>
 3302fd5:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302fdb:	0f 87 a9 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302fe1:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302fe7:	0f 84 2d 01 00 00    	je     330311a <HandleCrAccess+0x734>
 3302fed:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302ff3:	0f 87 91 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3302ff9:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302fff:	0f 84 04 01 00 00    	je     3303109 <HandleCrAccess+0x723>
 3303005:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 330300b:	0f 87 79 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3303011:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3303017:	0f 84 db 00 00 00    	je     33030f8 <HandleCrAccess+0x712>
 330301d:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3303023:	0f 87 61 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3303029:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 330302f:	0f 84 b2 00 00 00    	je     33030e7 <HandleCrAccess+0x701>
 3303035:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 330303b:	0f 87 49 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3303041:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3303047:	0f 84 89 00 00 00    	je     33030d6 <HandleCrAccess+0x6f0>
 330304d:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3303053:	0f 87 31 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3303059:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 330305f:	74 42                	je     33030a3 <HandleCrAccess+0x6bd>
 3303061:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3303067:	0f 87 1d 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 330306d:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3303073:	74 50                	je     33030c5 <HandleCrAccess+0x6df>
 3303075:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 330307b:	0f 87 09 01 00 00    	ja     330318a <HandleCrAccess+0x7a4>
 3303081:	48 85 c0             	test   %rax,%rax
 3303084:	74 0d                	je     3303093 <HandleCrAccess+0x6ad>
 3303086:	48 3d 00 01 00 00    	cmp    $0x100,%rax
 330308c:	74 26                	je     33030b4 <HandleCrAccess+0x6ce>
 330308e:	e9 f7 00 00 00       	jmpq   330318a <HandleCrAccess+0x7a4>
 3303093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303097:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330309b:	48 89 10             	mov    %rdx,(%rax)
 330309e:	e9 00 01 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030a7:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030ab:	48 89 50 08          	mov    %rdx,0x8(%rax)
 33030af:	e9 ef 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030b4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030b8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030bc:	48 89 50 10          	mov    %rdx,0x10(%rax)
 33030c0:	e9 de 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030c9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030cd:	48 89 50 18          	mov    %rdx,0x18(%rax)
 33030d1:	e9 cd 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030da:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030de:	48 89 50 78          	mov    %rdx,0x78(%rax)
 33030e2:	e9 bc 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030e7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030eb:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030ef:	48 89 50 30          	mov    %rdx,0x30(%rax)
 33030f3:	e9 ab 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 33030f8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030fc:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303100:	48 89 50 20          	mov    %rdx,0x20(%rax)
 3303104:	e9 9a 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 3303109:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330310d:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303111:	48 89 50 28          	mov    %rdx,0x28(%rax)
 3303115:	e9 89 00 00 00       	jmpq   33031a3 <HandleCrAccess+0x7bd>
 330311a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330311e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303122:	48 89 50 38          	mov    %rdx,0x38(%rax)
 3303126:	eb 7b                	jmp    33031a3 <HandleCrAccess+0x7bd>
 3303128:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330312c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303130:	48 89 50 40          	mov    %rdx,0x40(%rax)
 3303134:	eb 6d                	jmp    33031a3 <HandleCrAccess+0x7bd>
 3303136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330313a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330313e:	48 89 50 48          	mov    %rdx,0x48(%rax)
 3303142:	eb 5f                	jmp    33031a3 <HandleCrAccess+0x7bd>
 3303144:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303148:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330314c:	48 89 50 50          	mov    %rdx,0x50(%rax)
 3303150:	eb 51                	jmp    33031a3 <HandleCrAccess+0x7bd>
 3303152:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303156:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330315a:	48 89 50 58          	mov    %rdx,0x58(%rax)
 330315e:	eb 43                	jmp    33031a3 <HandleCrAccess+0x7bd>
 3303160:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303164:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303168:	48 89 50 60          	mov    %rdx,0x60(%rax)
 330316c:	eb 35                	jmp    33031a3 <HandleCrAccess+0x7bd>
 330316e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303172:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303176:	48 89 50 68          	mov    %rdx,0x68(%rax)
 330317a:	eb 27                	jmp    33031a3 <HandleCrAccess+0x7bd>
 330317c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303180:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303184:	48 89 50 70          	mov    %rdx,0x70(%rax)
 3303188:	eb 19                	jmp    33031a3 <HandleCrAccess+0x7bd>
 330318a:	48 8d 3d 47 32 00 00 	lea    0x3247(%rip),%rdi        # 33063d8 <CopyMemoryToGuest+0x871>
 3303191:	b8 00 00 00 00       	mov    $0x0,%eax
 3303196:	e8 0a f0 ff ff       	callq  33021a5 <Print>
 330319b:	b8 10 00 00 00       	mov    $0x10,%eax
 33031a0:	eb 29                	jmp    33031cb <HandleCrAccess+0x7e5>
 33031a2:	90                   	nop
 33031a3:	bf 0c 44 00 00       	mov    $0x440c,%edi
 33031a8:	e8 26 f5 ff ff       	callq  33026d3 <vmread>
 33031ad:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33031b1:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 33031b8:	48 01 c2             	add    %rax,%rdx
 33031bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33031bf:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33031c6:	b8 00 00 00 00       	mov    $0x0,%eax
 33031cb:	c9                   	leaveq 
 33031cc:	c3                   	retq   

00000000033031cd <EmulateXSETBV>:
 33031cd:	f3 0f 1e fa          	endbr64 
 33031d1:	55                   	push   %rbp
 33031d2:	48 89 e5             	mov    %rsp,%rbp
 33031d5:	53                   	push   %rbx
 33031d6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
 33031dd:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
 33031e4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 33031eb:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33031ef:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
 33031f6:	00 
 33031f7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 33031fe:	00 
 33031ff:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 3303203:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3303207:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 330320b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 330320f:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 3303213:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3303217:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 330321b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 330321f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303223:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3303227:	48 89 d1             	mov    %rdx,%rcx
 330322a:	0f a2                	cpuid  
 330322c:	48 89 de             	mov    %rbx,%rsi
 330322f:	48 89 c7             	mov    %rax,%rdi
 3303232:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303236:	48 89 38             	mov    %rdi,(%rax)
 3303239:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330323d:	48 89 30             	mov    %rsi,(%rax)
 3303240:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303244:	48 89 08             	mov    %rcx,(%rax)
 3303247:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 330324b:	48 89 10             	mov    %rdx,(%rax)
 330324e:	90                   	nop
 330324f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303253:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303257:	89 c0                	mov    %eax,%eax
 3303259:	48 85 c0             	test   %rax,%rax
 330325c:	75 4f                	jne    33032ad <EmulateXSETBV+0xe0>
 330325e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303262:	48 8b 00             	mov    (%rax),%rax
 3303265:	83 e0 01             	and    $0x1,%eax
 3303268:	48 85 c0             	test   %rax,%rax
 330326b:	74 40                	je     33032ad <EmulateXSETBV+0xe0>
 330326d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303271:	48 8b 00             	mov    (%rax),%rax
 3303274:	83 e0 04             	and    $0x4,%eax
 3303277:	48 85 c0             	test   %rax,%rax
 330327a:	74 0f                	je     330328b <EmulateXSETBV+0xbe>
 330327c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303280:	48 8b 00             	mov    (%rax),%rax
 3303283:	83 e0 02             	and    $0x2,%eax
 3303286:	48 85 c0             	test   %rax,%rax
 3303289:	74 22                	je     33032ad <EmulateXSETBV+0xe0>
 330328b:	bf 04 68 00 00       	mov    $0x6804,%edi
 3303290:	e8 3e f4 ff ff       	callq  33026d3 <vmread>
 3303295:	25 00 00 04 00       	and    $0x40000,%eax
 330329a:	48 85 c0             	test   %rax,%rax
 330329d:	74 0e                	je     33032ad <EmulateXSETBV+0xe0>
 330329f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 33032a3:	25 00 00 00 04       	and    $0x4000000,%eax
 33032a8:	48 85 c0             	test   %rax,%rax
 33032ab:	75 18                	jne    33032c5 <EmulateXSETBV+0xf8>
 33032ad:	48 8d 3d 5b 31 00 00 	lea    0x315b(%rip),%rdi        # 330640f <CopyMemoryToGuest+0x8a8>
 33032b4:	b8 00 00 00 00       	mov    $0x0,%eax
 33032b9:	e8 8d ef ff ff       	callq  330224b <PrintDebugLevelDebug>
 33032be:	b8 00 00 00 00       	mov    $0x0,%eax
 33032c3:	eb 59                	jmp    330331e <EmulateXSETBV+0x151>
 33032c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032c9:	48 8b 40 10          	mov    0x10(%rax),%rax
 33032cd:	89 c2                	mov    %eax,%edx
 33032cf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032d3:	48 8b 00             	mov    (%rax),%rax
 33032d6:	89 c1                	mov    %eax,%ecx
 33032d8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032dc:	48 8b 40 18          	mov    0x18(%rax),%rax
 33032e0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 33032e3:	89 4d b0             	mov    %ecx,-0x50(%rbp)
 33032e6:	89 55 ac             	mov    %edx,-0x54(%rbp)
 33032e9:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 33032ec:	8b 45 b0             	mov    -0x50(%rbp),%eax
 33032ef:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 33032f2:	0f 01 d1             	xsetbv 
 33032f5:	90                   	nop
 33032f6:	bf 0c 44 00 00       	mov    $0x440c,%edi
 33032fb:	e8 d3 f3 ff ff       	callq  33026d3 <vmread>
 3303300:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3303304:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 330330b:	48 01 c2             	add    %rax,%rdx
 330330e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303312:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 3303319:	b8 00 00 00 00       	mov    $0x0,%eax
 330331e:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
 3303325:	5b                   	pop    %rbx
 3303326:	5d                   	pop    %rbp
 3303327:	c3                   	retq   

0000000003303328 <HandleVmCall>:
 3303328:	f3 0f 1e fa          	endbr64 
 330332c:	55                   	push   %rbp
 330332d:	48 89 e5             	mov    %rsp,%rbp
 3303330:	53                   	push   %rbx
 3303331:	48 83 ec 78          	sub    $0x78,%rsp
 3303335:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
 3303339:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330333d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303341:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303345:	48 8b 00             	mov    (%rax),%rax
 3303348:	48 3d 44 33 22 11    	cmp    $0x11223344,%rax
 330334e:	0f 85 80 00 00 00    	jne    33033d4 <HandleVmCall+0xac>
 3303354:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303358:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 330335f:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303366:	48 8b 90 50 86 00 00 	mov    0x8650(%rax),%rdx
 330336d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303371:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303378:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330337f:	48 8b 88 48 86 00 00 	mov    0x8648(%rax),%rcx
 3303386:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330338a:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303391:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303398:	48 89 ce             	mov    %rcx,%rsi
 330339b:	48 89 c7             	mov    %rax,%rdi
 330339e:	e8 35 1f 00 00       	callq  33052d8 <SetupHypervisorCodeProtection>
 33033a3:	48 85 c0             	test   %rax,%rax
 33033a6:	74 13                	je     33033bb <HandleVmCall+0x93>
 33033a8:	48 8d 3d 81 30 00 00 	lea    0x3081(%rip),%rdi        # 3306430 <CopyMemoryToGuest+0x8c9>
 33033af:	b8 00 00 00 00       	mov    $0x0,%eax
 33033b4:	e8 ec ed ff ff       	callq  33021a5 <Print>
 33033b9:	eb fe                	jmp    33033b9 <HandleVmCall+0x91>
 33033bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033bf:	48 c7 80 80 00 00 00 	movq   $0x7c00,0x80(%rax)
 33033c6:	00 7c 00 00 
 33033ca:	b8 00 00 00 00       	mov    $0x0,%eax
 33033cf:	e9 8f 02 00 00       	jmpq   3303663 <HandleVmCall+0x33b>
 33033d4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033d8:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
 33033df:	48 3d fc ff 00 00    	cmp    $0xfffc,%rax
 33033e5:	0f 85 73 02 00 00    	jne    330365e <HandleVmCall+0x336>
 33033eb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033ef:	48 8b 00             	mov    (%rax),%rax
 33033f2:	48 3d 20 e8 00 00    	cmp    $0xe820,%rax
 33033f8:	0f 85 cf 01 00 00    	jne    33035cd <HandleVmCall+0x2a5>
 33033fe:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
 3303402:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303406:	48 8b 50 08          	mov    0x8(%rax),%rdx
 330340a:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330340e:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303415:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330341c:	0f b6 80 21 86 00 00 	movzbl 0x8621(%rax),%eax
 3303423:	0f b6 c0             	movzbl %al,%eax
 3303426:	48 39 c2             	cmp    %rax,%rdx
 3303429:	72 09                	jb     3303434 <HandleVmCall+0x10c>
 330342b:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
 330342f:	e9 c8 00 00 00       	jmpq   33034fc <HandleVmCall+0x1d4>
 3303434:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303438:	48 c7 00 50 41 4d 53 	movq   $0x534d4150,(%rax)
 330343f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303443:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303447:	b0 00                	mov    $0x0,%al
 3303449:	48 83 c8 14          	or     $0x14,%rax
 330344d:	48 89 c2             	mov    %rax,%rdx
 3303450:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303454:	48 89 50 10          	mov    %rdx,0x10(%rax)
 3303458:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330345c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303463:	48 8b b0 88 bb 21 02 	mov    0x221bb88(%rax),%rsi
 330346a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330346e:	48 8b 50 08          	mov    0x8(%rax),%rdx
 3303472:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
 3303476:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330347a:	48 89 48 08          	mov    %rcx,0x8(%rax)
 330347e:	48 89 d0             	mov    %rdx,%rax
 3303481:	48 01 c0             	add    %rax,%rax
 3303484:	48 01 d0             	add    %rdx,%rax
 3303487:	48 c1 e0 03          	shl    $0x3,%rax
 330348b:	48 05 50 83 00 00    	add    $0x8350,%rax
 3303491:	48 01 f0             	add    %rsi,%rax
 3303494:	48 8d 58 01          	lea    0x1(%rax),%rbx
 3303498:	bf 06 68 00 00       	mov    $0x6806,%edi
 330349d:	e8 31 f2 ff ff       	callq  33026d3 <vmread>
 33034a2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33034a6:	48 8b 52 28          	mov    0x28(%rdx),%rdx
 33034aa:	0f b7 d2             	movzwl %dx,%edx
 33034ad:	48 01 d0             	add    %rdx,%rax
 33034b0:	ba 18 00 00 00       	mov    $0x18,%edx
 33034b5:	48 89 de             	mov    %rbx,%rsi
 33034b8:	48 89 c7             	mov    %rax,%rdi
 33034bb:	e8 f1 ee ff ff       	callq  33023b1 <CopyMemory>
 33034c0:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
 33034c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33034c8:	48 8b 50 08          	mov    0x8(%rax),%rdx
 33034cc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33034d0:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33034d7:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33034de:	0f b6 80 21 86 00 00 	movzbl 0x8621(%rax),%eax
 33034e5:	0f b6 c0             	movzbl %al,%eax
 33034e8:	48 39 c2             	cmp    %rax,%rdx
 33034eb:	75 0e                	jne    33034fb <HandleVmCall+0x1d3>
 33034ed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33034f1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
 33034f8:	00 
 33034f9:	eb 01                	jmp    33034fc <HandleVmCall+0x1d4>
 33034fb:	90                   	nop
 33034fc:	bf 0a 68 00 00       	mov    $0x680a,%edi
 3303501:	e8 cd f1 ff ff       	callq  33026d3 <vmread>
 3303506:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330350a:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 330350e:	48 01 d0             	add    %rdx,%rax
 3303511:	8b 00                	mov    (%rax),%eax
 3303513:	89 c2                	mov    %eax,%edx
 3303515:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303519:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 3303520:	bf 0a 68 00 00       	mov    $0x680a,%edi
 3303525:	e8 a9 f1 ff ff       	callq  33026d3 <vmread>
 330352a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330352e:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 3303532:	48 01 d0             	add    %rdx,%rax
 3303535:	48 83 c0 02          	add    $0x2,%rax
 3303539:	0f b7 00             	movzwl (%rax),%eax
 330353c:	66 89 45 de          	mov    %ax,-0x22(%rbp)
 3303540:	bf 0a 68 00 00       	mov    $0x680a,%edi
 3303545:	e8 89 f1 ff ff       	callq  33026d3 <vmread>
 330354a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330354e:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 3303552:	48 01 d0             	add    %rdx,%rax
 3303555:	48 83 c0 04          	add    $0x4,%rax
 3303559:	0f b7 00             	movzwl (%rax),%eax
 330355c:	66 89 45 dc          	mov    %ax,-0x24(%rbp)
 3303560:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
 3303564:	74 07                	je     330356d <HandleVmCall+0x245>
 3303566:	66 83 4d dc 01       	orw    $0x1,-0x24(%rbp)
 330356b:	eb 05                	jmp    3303572 <HandleVmCall+0x24a>
 330356d:	66 83 65 dc fe       	andw   $0xfffe,-0x24(%rbp)
 3303572:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
 3303576:	c1 e0 04             	shl    $0x4,%eax
 3303579:	48 98                	cltq   
 330357b:	48 c7 45 c0 08 68 00 	movq   $0x6808,-0x40(%rbp)
 3303582:	00 
 3303583:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 3303587:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 330358b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 330358f:	0f 79 c2             	vmwrite %rdx,%rax
 3303592:	90                   	nop
 3303593:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
 3303597:	48 c7 45 d0 02 08 00 	movq   $0x802,-0x30(%rbp)
 330359e:	00 
 330359f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 33035a3:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33035a7:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 33035ab:	0f 79 c2             	vmwrite %rdx,%rax
 33035ae:	90                   	nop
 33035af:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035b3:	48 8b 40 78          	mov    0x78(%rax),%rax
 33035b7:	48 8d 50 06          	lea    0x6(%rax),%rdx
 33035bb:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035bf:	48 89 50 78          	mov    %rdx,0x78(%rax)
 33035c3:	b8 00 00 00 00       	mov    $0x0,%eax
 33035c8:	e9 96 00 00 00       	jmpq   3303663 <HandleVmCall+0x33b>
 33035cd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33035d1:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33035d8:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33035df:	48 8b 90 60 86 00 00 	mov    0x8660(%rax),%rdx
 33035e6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035ea:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33035f1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33035f5:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33035fc:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303603:	48 8b 80 58 86 00 00 	mov    0x8658(%rax),%rax
 330360a:	48 c7 45 a0 08 68 00 	movq   $0x6808,-0x60(%rbp)
 3303611:	00 
 3303612:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 3303616:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 330361a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 330361e:	0f 79 c2             	vmwrite %rdx,%rax
 3303621:	90                   	nop
 3303622:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303626:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 330362d:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303634:	48 8b 80 58 86 00 00 	mov    0x8658(%rax),%rax
 330363b:	48 c1 e8 04          	shr    $0x4,%rax
 330363f:	48 c7 45 b0 02 08 00 	movq   $0x802,-0x50(%rbp)
 3303646:	00 
 3303647:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 330364b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 330364f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 3303653:	0f 79 c2             	vmwrite %rdx,%rax
 3303656:	90                   	nop
 3303657:	b8 00 00 00 00       	mov    $0x0,%eax
 330365c:	eb 05                	jmp    3303663 <HandleVmCall+0x33b>
 330365e:	b8 0d 00 00 00       	mov    $0xd,%eax
 3303663:	48 83 c4 78          	add    $0x78,%rsp
 3303667:	5b                   	pop    %rbx
 3303668:	5d                   	pop    %rbp
 3303669:	c3                   	retq   

000000000330366a <HandleMsrRead>:
 330366a:	f3 0f 1e fa          	endbr64 
 330366e:	55                   	push   %rbp
 330366f:	48 89 e5             	mov    %rsp,%rbp
 3303672:	48 83 ec 40          	sub    $0x40,%rsp
 3303676:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330367a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330367e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3303682:	bf 0c 44 00 00       	mov    $0x440c,%edi
 3303687:	e8 47 f0 ff ff       	callq  33026d3 <vmread>
 330368c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3303690:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 3303697:	48 01 c2             	add    %rax,%rdx
 330369a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330369e:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33036a5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33036a9:	48 8b 40 10          	mov    0x10(%rax),%rax
 33036ad:	83 e0 ff             	and    $0xffffffff,%eax
 33036b0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33036b4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33036b8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33036bc:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 33036c3:	00 
 33036c4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 33036cb:	00 
 33036cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33036d0:	48 89 c1             	mov    %rax,%rcx
 33036d3:	0f 32                	rdmsr  
 33036d5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 33036d9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33036dd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33036e1:	48 c1 e0 20          	shl    $0x20,%rax
 33036e5:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 33036e9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33036ed:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33036f1:	89 c2                	mov    %eax,%edx
 33036f3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33036f7:	48 89 10             	mov    %rdx,(%rax)
 33036fa:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33036fe:	48 c1 e8 20          	shr    $0x20,%rax
 3303702:	89 c2                	mov    %eax,%edx
 3303704:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303708:	48 89 50 18          	mov    %rdx,0x18(%rax)
 330370c:	b8 00 00 00 00       	mov    $0x0,%eax
 3303711:	c9                   	leaveq 
 3303712:	c3                   	retq   

0000000003303713 <HandleMsrWrite>:
 3303713:	f3 0f 1e fa          	endbr64 
 3303717:	55                   	push   %rbp
 3303718:	48 89 e5             	mov    %rsp,%rbp
 330371b:	48 83 ec 40          	sub    $0x40,%rsp
 330371f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 3303723:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3303727:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330372b:	bf 0c 44 00 00       	mov    $0x440c,%edi
 3303730:	e8 9e ef ff ff       	callq  33026d3 <vmread>
 3303735:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3303739:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 3303740:	48 01 c2             	add    %rax,%rdx
 3303743:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303747:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 330374e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303752:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303756:	83 e0 ff             	and    $0xffffffff,%eax
 3303759:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330375d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303761:	48 8b 00             	mov    (%rax),%rax
 3303764:	89 c2                	mov    %eax,%edx
 3303766:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330376a:	48 8b 40 18          	mov    0x18(%rax),%rax
 330376e:	48 c1 e0 20          	shl    $0x20,%rax
 3303772:	48 09 d0             	or     %rdx,%rax
 3303775:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3303779:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330377d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303781:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303785:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3303789:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330378d:	48 c1 e8 20          	shr    $0x20,%rax
 3303791:	48 89 c2             	mov    %rax,%rdx
 3303794:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3303798:	89 c0                	mov    %eax,%eax
 330379a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 330379e:	0f 30                	wrmsr  
 33037a0:	90                   	nop
 33037a1:	b8 00 00 00 00       	mov    $0x0,%eax
 33037a6:	c9                   	leaveq 
 33037a7:	c3                   	retq   

00000000033037a8 <HandleCpuId>:
 33037a8:	f3 0f 1e fa          	endbr64 
 33037ac:	55                   	push   %rbp
 33037ad:	48 89 e5             	mov    %rsp,%rbp
 33037b0:	53                   	push   %rbx
 33037b1:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
 33037b8:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
 33037bf:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 33037c6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33037ca:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33037ce:	48 8b 00             	mov    (%rax),%rax
 33037d1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33037d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33037d9:	48 8b 40 10          	mov    0x10(%rax),%rax
 33037dd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 33037e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33037e5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33037e9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33037ed:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 33037f1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 33037f5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 33037f9:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 33037fd:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 3303801:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 3303805:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3303809:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 330380d:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3303811:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303815:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3303819:	48 89 d1             	mov    %rdx,%rcx
 330381c:	0f a2                	cpuid  
 330381e:	48 89 de             	mov    %rbx,%rsi
 3303821:	48 89 c7             	mov    %rax,%rdi
 3303824:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303828:	48 89 38             	mov    %rdi,(%rax)
 330382b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 330382f:	48 89 30             	mov    %rsi,(%rax)
 3303832:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3303836:	48 89 08             	mov    %rcx,(%rax)
 3303839:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 330383d:	48 89 10             	mov    %rdx,(%rax)
 3303840:	90                   	nop
 3303841:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
 3303846:	75 28                	jne    3303870 <HandleCpuId+0xc8>
 3303848:	bf 04 68 00 00       	mov    $0x6804,%edi
 330384d:	e8 81 ee ff ff       	callq  33026d3 <vmread>
 3303852:	25 00 00 04 00       	and    $0x40000,%eax
 3303857:	48 85 c0             	test   %rax,%rax
 330385a:	74 0a                	je     3303866 <HandleCpuId+0xbe>
 330385c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3303860:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 3303864:	eb 38                	jmp    330389e <HandleCpuId+0xf6>
 3303866:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 330386a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 330386e:	eb 2e                	jmp    330389e <HandleCpuId+0xf6>
 3303870:	48 83 7d e0 0d       	cmpq   $0xd,-0x20(%rbp)
 3303875:	75 27                	jne    330389e <HandleCpuId+0xf6>
 3303877:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
 330387c:	75 20                	jne    330389e <HandleCpuId+0xf6>
 330387e:	48 c7 45 a0 01 00 00 	movq   $0x1,-0x60(%rbp)
 3303885:	00 
 3303886:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
 330388d:	00 
 330388e:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
 3303895:	00 
 3303896:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
 330389d:	00 
 330389e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
 33038a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038a6:	48 89 10             	mov    %rdx,(%rax)
 33038a9:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 33038ad:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038b1:	48 89 50 08          	mov    %rdx,0x8(%rax)
 33038b5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
 33038b9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038bd:	48 89 50 10          	mov    %rdx,0x10(%rax)
 33038c1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33038c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038c9:	48 89 50 18          	mov    %rdx,0x18(%rax)
 33038cd:	bf 0c 44 00 00       	mov    $0x440c,%edi
 33038d2:	e8 fc ed ff ff       	callq  33026d3 <vmread>
 33038d7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33038db:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 33038e2:	48 01 c2             	add    %rax,%rdx
 33038e5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038e9:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33038f0:	b8 00 00 00 00       	mov    $0x0,%eax
 33038f5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
 33038fc:	5b                   	pop    %rbx
 33038fd:	5d                   	pop    %rbp
 33038fe:	c3                   	retq   

00000000033038ff <HandleEptViolation>:
 33038ff:	f3 0f 1e fa          	endbr64 
 3303903:	55                   	push   %rbp
 3303904:	48 89 e5             	mov    %rsp,%rbp
 3303907:	53                   	push   %rbx
 3303908:	48 83 ec 18          	sub    $0x18,%rsp
 330390c:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3303910:	bf 00 24 00 00       	mov    $0x2400,%edi
 3303915:	e8 b9 ed ff ff       	callq  33026d3 <vmread>
 330391a:	48 89 c2             	mov    %rax,%rdx
 330391d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303921:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303928:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330392f:	48 89 d6             	mov    %rdx,%rsi
 3303932:	48 89 c7             	mov    %rax,%rdi
 3303935:	e8 f8 1a 00 00       	callq  3305432 <CheckAccessToHiddenBase>
 330393a:	84 c0                	test   %al,%al
 330393c:	74 18                	je     3303956 <HandleEptViolation+0x57>
 330393e:	48 8d 3d f3 2b 00 00 	lea    0x2bf3(%rip),%rdi        # 3306538 <CopyMemoryToGuest+0x9d1>
 3303945:	b8 00 00 00 00       	mov    $0x0,%eax
 330394a:	e8 56 e8 ff ff       	callq  33021a5 <Print>
 330394f:	b8 0a 00 00 00       	mov    $0xa,%eax
 3303954:	eb 3f                	jmp    3303995 <HandleEptViolation+0x96>
 3303956:	bf 08 68 00 00       	mov    $0x6808,%edi
 330395b:	e8 73 ed ff ff       	callq  33026d3 <vmread>
 3303960:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3303964:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 330396b:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
 330396f:	bf 00 24 00 00       	mov    $0x2400,%edi
 3303974:	e8 5a ed ff ff       	callq  33026d3 <vmread>
 3303979:	48 89 da             	mov    %rbx,%rdx
 330397c:	48 89 c6             	mov    %rax,%rsi
 330397f:	48 8d 3d e2 2b 00 00 	lea    0x2be2(%rip),%rdi        # 3306568 <CopyMemoryToGuest+0xa01>
 3303986:	b8 00 00 00 00       	mov    $0x0,%eax
 330398b:	e8 15 e8 ff ff       	callq  33021a5 <Print>
 3303990:	b8 11 00 00 00       	mov    $0x11,%eax
 3303995:	48 83 c4 18          	add    $0x18,%rsp
 3303999:	5b                   	pop    %rbx
 330399a:	5d                   	pop    %rbp
 330399b:	c3                   	retq   

000000000330399c <HandleInvalidGuestState>:
 330399c:	f3 0f 1e fa          	endbr64 
 33039a0:	55                   	push   %rbp
 33039a1:	48 89 e5             	mov    %rsp,%rbp
 33039a4:	48 83 ec 10          	sub    $0x10,%rsp
 33039a8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33039ac:	48 8d 3d e9 2b 00 00 	lea    0x2be9(%rip),%rdi        # 330659c <CopyMemoryToGuest+0xa35>
 33039b3:	b8 00 00 00 00       	mov    $0x0,%eax
 33039b8:	e8 e8 e7 ff ff       	callq  33021a5 <Print>
 33039bd:	b8 12 00 00 00       	mov    $0x12,%eax
 33039c2:	c9                   	leaveq 
 33039c3:	c3                   	retq   

00000000033039c4 <HandleInvalidMsrLoading>:
 33039c4:	f3 0f 1e fa          	endbr64 
 33039c8:	55                   	push   %rbp
 33039c9:	48 89 e5             	mov    %rsp,%rbp
 33039cc:	48 83 ec 10          	sub    $0x10,%rsp
 33039d0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33039d4:	48 8d 3d d7 2b 00 00 	lea    0x2bd7(%rip),%rdi        # 33065b2 <CopyMemoryToGuest+0xa4b>
 33039db:	b8 00 00 00 00       	mov    $0x0,%eax
 33039e0:	e8 c0 e7 ff ff       	callq  33021a5 <Print>
 33039e5:	b8 13 00 00 00       	mov    $0x13,%eax
 33039ea:	c9                   	leaveq 
 33039eb:	c3                   	retq   

00000000033039ec <HandleMachineCheckFailure>:
 33039ec:	f3 0f 1e fa          	endbr64 
 33039f0:	55                   	push   %rbp
 33039f1:	48 89 e5             	mov    %rsp,%rbp
 33039f4:	48 83 ec 10          	sub    $0x10,%rsp
 33039f8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33039fc:	48 8d 3d c5 2b 00 00 	lea    0x2bc5(%rip),%rdi        # 33065c8 <CopyMemoryToGuest+0xa61>
 3303a03:	b8 00 00 00 00       	mov    $0x0,%eax
 3303a08:	e8 98 e7 ff ff       	callq  33021a5 <Print>
 3303a0d:	b8 14 00 00 00       	mov    $0x14,%eax
 3303a12:	c9                   	leaveq 
 3303a13:	c3                   	retq   

0000000003303a14 <HandleTripleFault>:
 3303a14:	f3 0f 1e fa          	endbr64 
 3303a18:	55                   	push   %rbp
 3303a19:	48 89 e5             	mov    %rsp,%rbp
 3303a1c:	48 83 ec 10          	sub    $0x10,%rsp
 3303a20:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3303a24:	48 8d 3d c2 2b 00 00 	lea    0x2bc2(%rip),%rdi        # 33065ed <CopyMemoryToGuest+0xa86>
 3303a2b:	b8 00 00 00 00       	mov    $0x0,%eax
 3303a30:	e8 70 e7 ff ff       	callq  33021a5 <Print>
 3303a35:	b8 15 00 00 00       	mov    $0x15,%eax
 3303a3a:	c9                   	leaveq 
 3303a3b:	c3                   	retq   

0000000003303a3c <InitializeSingleHypervisor>:
 3303a3c:	f3 0f 1e fa          	endbr64 
 3303a40:	55                   	push   %rbp
 3303a41:	48 89 e5             	mov    %rsp,%rbp
 3303a44:	41 56                	push   %r14
 3303a46:	53                   	push   %rbx
 3303a47:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
 3303a4e:	48 89 bd 58 f8 ff ff 	mov    %rdi,-0x7a8(%rbp)
 3303a55:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
 3303a5c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3303a60:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303a64:	0f b6 80 00 b0 21 02 	movzbl 0x221b000(%rax),%eax
 3303a6b:	0f b6 c0             	movzbl %al,%eax
 3303a6e:	89 c6                	mov    %eax,%esi
 3303a70:	48 8d 3d 91 2b 00 00 	lea    0x2b91(%rip),%rdi        # 3306608 <CopyMemoryToGuest+0xaa1>
 3303a77:	b8 00 00 00 00       	mov    $0x0,%eax
 3303a7c:	e8 24 e7 ff ff       	callq  33021a5 <Print>
 3303a81:	0f 20 c0             	mov    %cr0,%rax
 3303a84:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
 3303a8b:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
 3303a92:	48 c7 85 20 ff ff ff 	movq   $0x486,-0xe0(%rbp)
 3303a99:	86 04 00 00 
 3303a9d:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
 3303aa4:	00 00 00 00 
 3303aa8:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
 3303aaf:	00 00 00 00 
 3303ab3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 3303aba:	48 89 c1             	mov    %rax,%rcx
 3303abd:	0f 32                	rdmsr  
 3303abf:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
 3303ac6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 3303acd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3303ad4:	48 c1 e0 20          	shl    $0x20,%rax
 3303ad8:	48 0b 85 10 ff ff ff 	or     -0xf0(%rbp),%rax
 3303adf:	48 09 f0             	or     %rsi,%rax
 3303ae2:	48 83 c8 20          	or     $0x20,%rax
 3303ae6:	48 89 c6             	mov    %rax,%rsi
 3303ae9:	48 c7 85 38 ff ff ff 	movq   $0x487,-0xc8(%rbp)
 3303af0:	87 04 00 00 
 3303af4:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
 3303afb:	00 00 00 00 
 3303aff:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
 3303b06:	00 00 00 00 
 3303b0a:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 3303b11:	48 89 c1             	mov    %rax,%rcx
 3303b14:	0f 32                	rdmsr  
 3303b16:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
 3303b1d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 3303b24:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 3303b2b:	48 c1 e0 20          	shl    $0x20,%rax
 3303b2f:	48 0b 85 28 ff ff ff 	or     -0xd8(%rbp),%rax
 3303b36:	48 21 f0             	and    %rsi,%rax
 3303b39:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3303b40:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 3303b47:	0f 22 c0             	mov    %rax,%cr0
 3303b4a:	90                   	nop
 3303b4b:	0f 20 e0             	mov    %cr4,%rax
 3303b4e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 3303b55:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
 3303b5c:	48 c7 85 60 ff ff ff 	movq   $0x488,-0xa0(%rbp)
 3303b63:	88 04 00 00 
 3303b67:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
 3303b6e:	00 00 00 00 
 3303b72:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
 3303b79:	00 00 00 00 
 3303b7d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 3303b84:	48 89 c1             	mov    %rax,%rcx
 3303b87:	0f 32                	rdmsr  
 3303b89:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
 3303b90:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 3303b97:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 3303b9e:	48 c1 e0 20          	shl    $0x20,%rax
 3303ba2:	48 0b 85 50 ff ff ff 	or     -0xb0(%rbp),%rax
 3303ba9:	48 09 f0             	or     %rsi,%rax
 3303bac:	80 cc 20             	or     $0x20,%ah
 3303baf:	48 89 c6             	mov    %rax,%rsi
 3303bb2:	48 c7 85 78 ff ff ff 	movq   $0x489,-0x88(%rbp)
 3303bb9:	89 04 00 00 
 3303bbd:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
 3303bc4:	00 00 00 00 
 3303bc8:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
 3303bcf:	00 00 00 00 
 3303bd3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 3303bda:	48 89 c1             	mov    %rax,%rcx
 3303bdd:	0f 32                	rdmsr  
 3303bdf:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
 3303be6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 3303bed:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 3303bf4:	48 c1 e0 20          	shl    $0x20,%rax
 3303bf8:	48 0b 85 68 ff ff ff 	or     -0x98(%rbp),%rax
 3303bff:	48 21 f0             	and    %rsi,%rax
 3303c02:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 3303c06:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3303c0a:	0f 22 e0             	mov    %rax,%cr4
 3303c0d:	90                   	nop
 3303c0e:	48 c7 45 98 3a 00 00 	movq   $0x3a,-0x68(%rbp)
 3303c15:	00 
 3303c16:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
 3303c1d:	00 
 3303c1e:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
 3303c25:	00 
 3303c26:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3303c2a:	48 89 c1             	mov    %rax,%rcx
 3303c2d:	0f 32                	rdmsr  
 3303c2f:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
 3303c33:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 3303c37:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3303c3b:	48 c1 e0 20          	shl    $0x20,%rax
 3303c3f:	48 0b 45 88          	or     -0x78(%rbp),%rax
 3303c43:	48 83 c8 07          	or     $0x7,%rax
 3303c47:	48 c7 45 a8 3a 00 00 	movq   $0x3a,-0x58(%rbp)
 3303c4e:	00 
 3303c4f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3303c53:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3303c57:	48 c1 e8 20          	shr    $0x20,%rax
 3303c5b:	48 89 c2             	mov    %rax,%rdx
 3303c5e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3303c62:	89 c0                	mov    %eax,%eax
 3303c64:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 3303c68:	0f 30                	wrmsr  
 3303c6a:	90                   	nop
 3303c6b:	48 c7 45 c0 80 04 00 	movq   $0x480,-0x40(%rbp)
 3303c72:	00 
 3303c73:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
 3303c7a:	00 
 3303c7b:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
 3303c82:	00 
 3303c83:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303c87:	48 89 c1             	mov    %rax,%rcx
 3303c8a:	0f 32                	rdmsr  
 3303c8c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 3303c90:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3303c94:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3303c98:	48 c1 e0 20          	shl    $0x20,%rax
 3303c9c:	48 0b 45 b0          	or     -0x50(%rbp),%rax
 3303ca0:	48 89 c2             	mov    %rax,%rdx
 3303ca3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303ca7:	89 10                	mov    %edx,(%rax)
 3303ca9:	48 c7 45 d8 80 04 00 	movq   $0x480,-0x28(%rbp)
 3303cb0:	00 
 3303cb1:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 3303cb8:	00 
 3303cb9:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
 3303cc0:	00 
 3303cc1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3303cc5:	48 89 c1             	mov    %rax,%rcx
 3303cc8:	0f 32                	rdmsr  
 3303cca:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
 3303cce:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3303cd2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303cd6:	48 c1 e0 20          	shl    $0x20,%rax
 3303cda:	48 0b 45 c8          	or     -0x38(%rbp),%rax
 3303cde:	48 89 c2             	mov    %rax,%rdx
 3303ce1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303ce5:	48 05 00 10 00 00    	add    $0x1000,%rax
 3303ceb:	89 10                	mov    %edx,(%rax)
 3303ced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303cf1:	48 05 00 10 00 00    	add    $0x1000,%rax
 3303cf7:	48 89 c7             	mov    %rax,%rdi
 3303cfa:	e8 31 ea ff ff       	callq  3302730 <VirtualToPhysical>
 3303cff:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
 3303d06:	f3 0f c7 b5 60 f8 ff 	vmxon  -0x7a0(%rbp)
 3303d0d:	ff 
 3303d0e:	9c                   	pushfq 
 3303d0f:	58                   	pop    %rax
 3303d10:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303d14:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303d18:	83 e0 01             	and    $0x1,%eax
 3303d1b:	48 85 c0             	test   %rax,%rax
 3303d1e:	74 07                	je     3303d27 <InitializeSingleHypervisor+0x2eb>
 3303d20:	b8 01 00 00 00       	mov    $0x1,%eax
 3303d25:	eb 18                	jmp    3303d3f <InitializeSingleHypervisor+0x303>
 3303d27:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303d2b:	83 e0 40             	and    $0x40,%eax
 3303d2e:	48 85 c0             	test   %rax,%rax
 3303d31:	74 07                	je     3303d3a <InitializeSingleHypervisor+0x2fe>
 3303d33:	b8 02 00 00 00       	mov    $0x2,%eax
 3303d38:	eb 05                	jmp    3303d3f <InitializeSingleHypervisor+0x303>
 3303d3a:	b8 00 00 00 00       	mov    $0x0,%eax
 3303d3f:	48 85 c0             	test   %rax,%rax
 3303d42:	74 13                	je     3303d57 <InitializeSingleHypervisor+0x31b>
 3303d44:	48 8d 3d e5 28 00 00 	lea    0x28e5(%rip),%rdi        # 3306630 <CopyMemoryToGuest+0xac9>
 3303d4b:	b8 00 00 00 00       	mov    $0x0,%eax
 3303d50:	e8 50 e4 ff ff       	callq  33021a5 <Print>
 3303d55:	eb fe                	jmp    3303d55 <InitializeSingleHypervisor+0x319>
 3303d57:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303d5b:	48 89 c7             	mov    %rax,%rdi
 3303d5e:	e8 cd e9 ff ff       	callq  3302730 <VirtualToPhysical>
 3303d63:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
 3303d6a:	66 0f c7 b5 68 f8 ff 	vmclear -0x798(%rbp)
 3303d71:	ff 
 3303d72:	9c                   	pushfq 
 3303d73:	58                   	pop    %rax
 3303d74:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 3303d7b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 3303d82:	83 e0 01             	and    $0x1,%eax
 3303d85:	48 85 c0             	test   %rax,%rax
 3303d88:	74 07                	je     3303d91 <InitializeSingleHypervisor+0x355>
 3303d8a:	b8 01 00 00 00       	mov    $0x1,%eax
 3303d8f:	eb 1b                	jmp    3303dac <InitializeSingleHypervisor+0x370>
 3303d91:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 3303d98:	83 e0 40             	and    $0x40,%eax
 3303d9b:	48 85 c0             	test   %rax,%rax
 3303d9e:	74 07                	je     3303da7 <InitializeSingleHypervisor+0x36b>
 3303da0:	b8 02 00 00 00       	mov    $0x2,%eax
 3303da5:	eb 05                	jmp    3303dac <InitializeSingleHypervisor+0x370>
 3303da7:	b8 00 00 00 00       	mov    $0x0,%eax
 3303dac:	48 85 c0             	test   %rax,%rax
 3303daf:	74 13                	je     3303dc4 <InitializeSingleHypervisor+0x388>
 3303db1:	48 8d 3d 00 29 00 00 	lea    0x2900(%rip),%rdi        # 33066b8 <CopyMemoryToGuest+0xb51>
 3303db8:	b8 00 00 00 00       	mov    $0x0,%eax
 3303dbd:	e8 e3 e3 ff ff       	callq  33021a5 <Print>
 3303dc2:	eb fe                	jmp    3303dc2 <InitializeSingleHypervisor+0x386>
 3303dc4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303dc8:	48 89 c7             	mov    %rax,%rdi
 3303dcb:	e8 60 e9 ff ff       	callq  3302730 <VirtualToPhysical>
 3303dd0:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
 3303dd7:	0f c7 b5 70 f8 ff ff 	vmptrld -0x790(%rbp)
 3303dde:	9c                   	pushfq 
 3303ddf:	58                   	pop    %rax
 3303de0:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 3303de7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3303dee:	83 e0 01             	and    $0x1,%eax
 3303df1:	48 85 c0             	test   %rax,%rax
 3303df4:	74 07                	je     3303dfd <InitializeSingleHypervisor+0x3c1>
 3303df6:	b8 01 00 00 00       	mov    $0x1,%eax
 3303dfb:	eb 1b                	jmp    3303e18 <InitializeSingleHypervisor+0x3dc>
 3303dfd:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3303e04:	83 e0 40             	and    $0x40,%eax
 3303e07:	48 85 c0             	test   %rax,%rax
 3303e0a:	74 07                	je     3303e13 <InitializeSingleHypervisor+0x3d7>
 3303e0c:	b8 02 00 00 00       	mov    $0x2,%eax
 3303e11:	eb 05                	jmp    3303e18 <InitializeSingleHypervisor+0x3dc>
 3303e13:	b8 00 00 00 00       	mov    $0x0,%eax
 3303e18:	48 85 c0             	test   %rax,%rax
 3303e1b:	74 13                	je     3303e30 <InitializeSingleHypervisor+0x3f4>
 3303e1d:	48 8d 3d 1c 29 00 00 	lea    0x291c(%rip),%rdi        # 3306740 <CopyMemoryToGuest+0xbd9>
 3303e24:	b8 00 00 00 00       	mov    $0x0,%eax
 3303e29:	e8 77 e3 ff ff       	callq  33021a5 <Print>
 3303e2e:	eb fe                	jmp    3303e2e <InitializeSingleHypervisor+0x3f2>
 3303e30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e34:	48 c7 80 08 b0 21 02 	movq   $0x0,0x221b008(%rax)
 3303e3b:	00 00 00 00 
 3303e3f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e43:	48 be 00 00 00 00 00 	movabs $0xa09b0000000000,%rsi
 3303e4a:	9b a0 00 
 3303e4d:	48 89 b0 10 b0 21 02 	mov    %rsi,0x221b010(%rax)
 3303e54:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e58:	48 be ff ff 00 00 00 	movabs $0xcf93000000ffff,%rsi
 3303e5f:	93 cf 00 
 3303e62:	48 89 b0 18 b0 21 02 	mov    %rsi,0x221b018(%rax)
 3303e69:	48 c7 85 a8 f8 ff ff 	movq   $0x1d9,-0x758(%rbp)
 3303e70:	d9 01 00 00 
 3303e74:	48 c7 85 a0 f8 ff ff 	movq   $0x0,-0x760(%rbp)
 3303e7b:	00 00 00 00 
 3303e7f:	48 c7 85 98 f8 ff ff 	movq   $0x0,-0x768(%rbp)
 3303e86:	00 00 00 00 
 3303e8a:	48 8b 85 a8 f8 ff ff 	mov    -0x758(%rbp),%rax
 3303e91:	48 89 c1             	mov    %rax,%rcx
 3303e94:	0f 32                	rdmsr  
 3303e96:	48 89 95 a0 f8 ff ff 	mov    %rdx,-0x760(%rbp)
 3303e9d:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
 3303ea4:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
 3303eab:	48 c1 e0 20          	shl    $0x20,%rax
 3303eaf:	48 0b 85 98 f8 ff ff 	or     -0x768(%rbp),%rax
 3303eb6:	25 c3 ff 00 00       	and    $0xffc3,%eax
 3303ebb:	48 c7 85 b8 f8 ff ff 	movq   $0x1d9,-0x748(%rbp)
 3303ec2:	d9 01 00 00 
 3303ec6:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
 3303ecd:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
 3303ed4:	48 c1 e8 20          	shr    $0x20,%rax
 3303ed8:	48 89 c2             	mov    %rax,%rdx
 3303edb:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
 3303ee2:	89 c0                	mov    %eax,%eax
 3303ee4:	48 8b 8d b8 f8 ff ff 	mov    -0x748(%rbp),%rcx
 3303eeb:	0f 30                	wrmsr  
 3303eed:	90                   	nop
 3303eee:	0f 21 f8             	mov    %db7,%rax
 3303ef1:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
 3303ef8:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
 3303eff:	89 c0                	mov    %eax,%eax
 3303f01:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
 3303f08:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
 3303f0f:	0f 23 f8             	mov    %rax,%db7
 3303f12:	90                   	nop
 3303f13:	0f 20 c0             	mov    %cr0,%rax
 3303f16:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
 3303f1d:	48 8b 85 d0 f8 ff ff 	mov    -0x730(%rbp),%rax
 3303f24:	48 c7 85 e0 f8 ff ff 	movq   $0x6800,-0x720(%rbp)
 3303f2b:	00 68 00 00 
 3303f2f:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
 3303f36:	48 8b 85 e0 f8 ff ff 	mov    -0x720(%rbp),%rax
 3303f3d:	48 8b 95 d8 f8 ff ff 	mov    -0x728(%rbp),%rdx
 3303f44:	0f 79 c2             	vmwrite %rdx,%rax
 3303f47:	90                   	nop
 3303f48:	0f 20 d8             	mov    %cr3,%rax
 3303f4b:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
 3303f52:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
 3303f59:	48 c7 85 f8 f8 ff ff 	movq   $0x6802,-0x708(%rbp)
 3303f60:	02 68 00 00 
 3303f64:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
 3303f6b:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
 3303f72:	48 8b 95 f0 f8 ff ff 	mov    -0x710(%rbp),%rdx
 3303f79:	0f 79 c2             	vmwrite %rdx,%rax
 3303f7c:	90                   	nop
 3303f7d:	0f 20 e0             	mov    %cr4,%rax
 3303f80:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
 3303f87:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
 3303f8e:	48 c7 85 10 f9 ff ff 	movq   $0x6804,-0x6f0(%rbp)
 3303f95:	04 68 00 00 
 3303f99:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
 3303fa0:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
 3303fa7:	48 8b 95 08 f9 ff ff 	mov    -0x6f8(%rbp),%rdx
 3303fae:	0f 79 c2             	vmwrite %rdx,%rax
 3303fb1:	90                   	nop
 3303fb2:	48 8d 85 86 f8 ff ff 	lea    -0x77a(%rbp),%rax
 3303fb9:	48 89 c7             	mov    %rax,%rdi
 3303fbc:	e8 3d c5 ff ff       	callq  33004fe <GetGDT>
 3303fc1:	48 8d 85 7c f8 ff ff 	lea    -0x784(%rbp),%rax
 3303fc8:	48 89 c7             	mov    %rax,%rdi
 3303fcb:	e8 32 c5 ff ff       	callq  3300502 <GetIDT>
 3303fd0:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
 3303fd7:	48 c7 85 20 f9 ff ff 	movq   $0x6816,-0x6e0(%rbp)
 3303fde:	16 68 00 00 
 3303fe2:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
 3303fe9:	48 8b 85 20 f9 ff ff 	mov    -0x6e0(%rbp),%rax
 3303ff0:	48 8b 95 18 f9 ff ff 	mov    -0x6e8(%rbp),%rdx
 3303ff7:	0f 79 c2             	vmwrite %rdx,%rax
 3303ffa:	90                   	nop
 3303ffb:	0f b7 85 86 f8 ff ff 	movzwl -0x77a(%rbp),%eax
 3304002:	0f b7 c0             	movzwl %ax,%eax
 3304005:	48 c7 85 30 f9 ff ff 	movq   $0x4810,-0x6d0(%rbp)
 330400c:	10 48 00 00 
 3304010:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
 3304017:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
 330401e:	48 8b 95 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdx
 3304025:	0f 79 c2             	vmwrite %rdx,%rax
 3304028:	90                   	nop
 3304029:	48 8b 85 7e f8 ff ff 	mov    -0x782(%rbp),%rax
 3304030:	48 c7 85 40 f9 ff ff 	movq   $0x6818,-0x6c0(%rbp)
 3304037:	18 68 00 00 
 330403b:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
 3304042:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
 3304049:	48 8b 95 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdx
 3304050:	0f 79 c2             	vmwrite %rdx,%rax
 3304053:	90                   	nop
 3304054:	0f b7 85 7c f8 ff ff 	movzwl -0x784(%rbp),%eax
 330405b:	0f b7 c0             	movzwl %ax,%eax
 330405e:	48 c7 85 50 f9 ff ff 	movq   $0x4812,-0x6b0(%rbp)
 3304065:	12 48 00 00 
 3304069:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
 3304070:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
 3304077:	48 8b 95 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdx
 330407e:	0f 79 c2             	vmwrite %rdx,%rax
 3304081:	90                   	nop
 3304082:	48 c7 85 60 f9 ff ff 	movq   $0x6812,-0x6a0(%rbp)
 3304089:	12 68 00 00 
 330408d:	48 c7 85 58 f9 ff ff 	movq   $0x0,-0x6a8(%rbp)
 3304094:	00 00 00 00 
 3304098:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
 330409f:	48 8b 95 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdx
 33040a6:	0f 79 c2             	vmwrite %rdx,%rax
 33040a9:	90                   	nop
 33040aa:	48 c7 85 70 f9 ff ff 	movq   $0x480c,-0x690(%rbp)
 33040b1:	0c 48 00 00 
 33040b5:	48 c7 85 68 f9 ff ff 	movq   $0xff,-0x698(%rbp)
 33040bc:	ff 00 00 00 
 33040c0:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
 33040c7:	48 8b 95 68 f9 ff ff 	mov    -0x698(%rbp),%rdx
 33040ce:	0f 79 c2             	vmwrite %rdx,%rax
 33040d1:	90                   	nop
 33040d2:	48 c7 85 80 f9 ff ff 	movq   $0x4820,-0x680(%rbp)
 33040d9:	20 48 00 00 
 33040dd:	48 c7 85 78 f9 ff ff 	movq   $0x10000,-0x688(%rbp)
 33040e4:	00 00 01 00 
 33040e8:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
 33040ef:	48 8b 95 78 f9 ff ff 	mov    -0x688(%rbp),%rdx
 33040f6:	0f 79 c2             	vmwrite %rdx,%rax
 33040f9:	90                   	nop
 33040fa:	b8 00 00 00 00       	mov    $0x0,%eax
 33040ff:	e8 02 c4 ff ff       	callq  3300506 <GetCS>
 3304104:	25 f8 00 00 00       	and    $0xf8,%eax
 3304109:	48 c7 85 90 f9 ff ff 	movq   $0x802,-0x670(%rbp)
 3304110:	02 08 00 00 
 3304114:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
 330411b:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
 3304122:	48 8b 95 88 f9 ff ff 	mov    -0x678(%rbp),%rdx
 3304129:	0f 79 c2             	vmwrite %rdx,%rax
 330412c:	90                   	nop
 330412d:	48 c7 85 a0 f9 ff ff 	movq   $0x6808,-0x660(%rbp)
 3304134:	08 68 00 00 
 3304138:	48 c7 85 98 f9 ff ff 	movq   $0x0,-0x668(%rbp)
 330413f:	00 00 00 00 
 3304143:	48 8b 85 a0 f9 ff ff 	mov    -0x660(%rbp),%rax
 330414a:	48 8b 95 98 f9 ff ff 	mov    -0x668(%rbp),%rdx
 3304151:	0f 79 c2             	vmwrite %rdx,%rax
 3304154:	90                   	nop
 3304155:	48 c7 85 b0 f9 ff ff 	movq   $0x4802,-0x650(%rbp)
 330415c:	02 48 00 00 
 3304160:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
 3304165:	48 89 9d a8 f9 ff ff 	mov    %rbx,-0x658(%rbp)
 330416c:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
 3304173:	48 8b 95 a8 f9 ff ff 	mov    -0x658(%rbp),%rdx
 330417a:	0f 79 c2             	vmwrite %rdx,%rax
 330417d:	90                   	nop
 330417e:	48 c7 85 c0 f9 ff ff 	movq   $0x4816,-0x640(%rbp)
 3304185:	16 48 00 00 
 3304189:	48 c7 85 b8 f9 ff ff 	movq   $0xa09b,-0x648(%rbp)
 3304190:	9b a0 00 00 
 3304194:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
 330419b:	48 8b 95 b8 f9 ff ff 	mov    -0x648(%rbp),%rdx
 33041a2:	0f 79 c2             	vmwrite %rdx,%rax
 33041a5:	90                   	nop
 33041a6:	b8 00 00 00 00       	mov    $0x0,%eax
 33041ab:	e8 59 c3 ff ff       	callq  3300509 <GetDS>
 33041b0:	25 f8 00 00 00       	and    $0xf8,%eax
 33041b5:	48 c7 85 d0 f9 ff ff 	movq   $0x806,-0x630(%rbp)
 33041bc:	06 08 00 00 
 33041c0:	48 89 85 c8 f9 ff ff 	mov    %rax,-0x638(%rbp)
 33041c7:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
 33041ce:	48 8b 95 c8 f9 ff ff 	mov    -0x638(%rbp),%rdx
 33041d5:	0f 79 c2             	vmwrite %rdx,%rax
 33041d8:	90                   	nop
 33041d9:	48 c7 85 e0 f9 ff ff 	movq   $0x680c,-0x620(%rbp)
 33041e0:	0c 68 00 00 
 33041e4:	48 c7 85 d8 f9 ff ff 	movq   $0x0,-0x628(%rbp)
 33041eb:	00 00 00 00 
 33041ef:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
 33041f6:	48 8b 95 d8 f9 ff ff 	mov    -0x628(%rbp),%rdx
 33041fd:	0f 79 c2             	vmwrite %rdx,%rax
 3304200:	90                   	nop
 3304201:	48 c7 85 f0 f9 ff ff 	movq   $0x4806,-0x610(%rbp)
 3304208:	06 48 00 00 
 330420c:	48 89 9d e8 f9 ff ff 	mov    %rbx,-0x618(%rbp)
 3304213:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
 330421a:	48 8b 95 e8 f9 ff ff 	mov    -0x618(%rbp),%rdx
 3304221:	0f 79 c2             	vmwrite %rdx,%rax
 3304224:	90                   	nop
 3304225:	48 c7 85 00 fa ff ff 	movq   $0x481a,-0x600(%rbp)
 330422c:	1a 48 00 00 
 3304230:	48 c7 85 f8 f9 ff ff 	movq   $0xc093,-0x608(%rbp)
 3304237:	93 c0 00 00 
 330423b:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
 3304242:	48 8b 95 f8 f9 ff ff 	mov    -0x608(%rbp),%rdx
 3304249:	0f 79 c2             	vmwrite %rdx,%rax
 330424c:	90                   	nop
 330424d:	b8 00 00 00 00       	mov    $0x0,%eax
 3304252:	e8 b5 c2 ff ff       	callq  330050c <GetSS>
 3304257:	25 f8 00 00 00       	and    $0xf8,%eax
 330425c:	48 c7 85 10 fa ff ff 	movq   $0x804,-0x5f0(%rbp)
 3304263:	04 08 00 00 
 3304267:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
 330426e:	48 8b 85 10 fa ff ff 	mov    -0x5f0(%rbp),%rax
 3304275:	48 8b 95 08 fa ff ff 	mov    -0x5f8(%rbp),%rdx
 330427c:	0f 79 c2             	vmwrite %rdx,%rax
 330427f:	90                   	nop
 3304280:	48 c7 85 20 fa ff ff 	movq   $0x680a,-0x5e0(%rbp)
 3304287:	0a 68 00 00 
 330428b:	48 c7 85 18 fa ff ff 	movq   $0x0,-0x5e8(%rbp)
 3304292:	00 00 00 00 
 3304296:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
 330429d:	48 8b 95 18 fa ff ff 	mov    -0x5e8(%rbp),%rdx
 33042a4:	0f 79 c2             	vmwrite %rdx,%rax
 33042a7:	90                   	nop
 33042a8:	48 c7 85 30 fa ff ff 	movq   $0x4804,-0x5d0(%rbp)
 33042af:	04 48 00 00 
 33042b3:	48 89 9d 28 fa ff ff 	mov    %rbx,-0x5d8(%rbp)
 33042ba:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
 33042c1:	48 8b 95 28 fa ff ff 	mov    -0x5d8(%rbp),%rdx
 33042c8:	0f 79 c2             	vmwrite %rdx,%rax
 33042cb:	90                   	nop
 33042cc:	48 c7 85 40 fa ff ff 	movq   $0x4818,-0x5c0(%rbp)
 33042d3:	18 48 00 00 
 33042d7:	48 c7 85 38 fa ff ff 	movq   $0xc093,-0x5c8(%rbp)
 33042de:	93 c0 00 00 
 33042e2:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
 33042e9:	48 8b 95 38 fa ff ff 	mov    -0x5c8(%rbp),%rdx
 33042f0:	0f 79 c2             	vmwrite %rdx,%rax
 33042f3:	90                   	nop
 33042f4:	b8 00 00 00 00       	mov    $0x0,%eax
 33042f9:	e8 11 c2 ff ff       	callq  330050f <GetES>
 33042fe:	25 f8 00 00 00       	and    $0xf8,%eax
 3304303:	48 c7 85 50 fa ff ff 	movq   $0x800,-0x5b0(%rbp)
 330430a:	00 08 00 00 
 330430e:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
 3304315:	48 8b 85 50 fa ff ff 	mov    -0x5b0(%rbp),%rax
 330431c:	48 8b 95 48 fa ff ff 	mov    -0x5b8(%rbp),%rdx
 3304323:	0f 79 c2             	vmwrite %rdx,%rax
 3304326:	90                   	nop
 3304327:	48 c7 85 60 fa ff ff 	movq   $0x6806,-0x5a0(%rbp)
 330432e:	06 68 00 00 
 3304332:	48 c7 85 58 fa ff ff 	movq   $0x0,-0x5a8(%rbp)
 3304339:	00 00 00 00 
 330433d:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
 3304344:	48 8b 95 58 fa ff ff 	mov    -0x5a8(%rbp),%rdx
 330434b:	0f 79 c2             	vmwrite %rdx,%rax
 330434e:	90                   	nop
 330434f:	48 c7 85 70 fa ff ff 	movq   $0x4800,-0x590(%rbp)
 3304356:	00 48 00 00 
 330435a:	48 89 9d 68 fa ff ff 	mov    %rbx,-0x598(%rbp)
 3304361:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
 3304368:	48 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%rdx
 330436f:	0f 79 c2             	vmwrite %rdx,%rax
 3304372:	90                   	nop
 3304373:	48 c7 85 80 fa ff ff 	movq   $0x4814,-0x580(%rbp)
 330437a:	14 48 00 00 
 330437e:	48 c7 85 78 fa ff ff 	movq   $0xc093,-0x588(%rbp)
 3304385:	93 c0 00 00 
 3304389:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
 3304390:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
 3304397:	0f 79 c2             	vmwrite %rdx,%rax
 330439a:	90                   	nop
 330439b:	b8 00 00 00 00       	mov    $0x0,%eax
 33043a0:	e8 70 c1 ff ff       	callq  3300515 <GetGS>
 33043a5:	25 f8 00 00 00       	and    $0xf8,%eax
 33043aa:	48 c7 85 90 fa ff ff 	movq   $0x80a,-0x570(%rbp)
 33043b1:	0a 08 00 00 
 33043b5:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
 33043bc:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
 33043c3:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
 33043ca:	0f 79 c2             	vmwrite %rdx,%rax
 33043cd:	90                   	nop
 33043ce:	48 c7 85 a0 fa ff ff 	movq   $0x6810,-0x560(%rbp)
 33043d5:	10 68 00 00 
 33043d9:	48 c7 85 98 fa ff ff 	movq   $0x0,-0x568(%rbp)
 33043e0:	00 00 00 00 
 33043e4:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
 33043eb:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
 33043f2:	0f 79 c2             	vmwrite %rdx,%rax
 33043f5:	90                   	nop
 33043f6:	48 c7 85 b0 fa ff ff 	movq   $0x480a,-0x550(%rbp)
 33043fd:	0a 48 00 00 
 3304401:	48 89 9d a8 fa ff ff 	mov    %rbx,-0x558(%rbp)
 3304408:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
 330440f:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
 3304416:	0f 79 c2             	vmwrite %rdx,%rax
 3304419:	90                   	nop
 330441a:	48 c7 85 c0 fa ff ff 	movq   $0x481e,-0x540(%rbp)
 3304421:	1e 48 00 00 
 3304425:	48 c7 85 b8 fa ff ff 	movq   $0xc093,-0x548(%rbp)
 330442c:	93 c0 00 00 
 3304430:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
 3304437:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
 330443e:	0f 79 c2             	vmwrite %rdx,%rax
 3304441:	90                   	nop
 3304442:	b8 00 00 00 00       	mov    $0x0,%eax
 3304447:	e8 c6 c0 ff ff       	callq  3300512 <GetFS>
 330444c:	25 f8 00 00 00       	and    $0xf8,%eax
 3304451:	48 c7 85 d0 fa ff ff 	movq   $0x808,-0x530(%rbp)
 3304458:	08 08 00 00 
 330445c:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
 3304463:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
 330446a:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
 3304471:	0f 79 c2             	vmwrite %rdx,%rax
 3304474:	90                   	nop
 3304475:	48 c7 85 e0 fa ff ff 	movq   $0x680e,-0x520(%rbp)
 330447c:	0e 68 00 00 
 3304480:	48 c7 85 d8 fa ff ff 	movq   $0x0,-0x528(%rbp)
 3304487:	00 00 00 00 
 330448b:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
 3304492:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
 3304499:	0f 79 c2             	vmwrite %rdx,%rax
 330449c:	90                   	nop
 330449d:	48 c7 85 f0 fa ff ff 	movq   $0x4808,-0x510(%rbp)
 33044a4:	08 48 00 00 
 33044a8:	48 89 9d e8 fa ff ff 	mov    %rbx,-0x518(%rbp)
 33044af:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
 33044b6:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
 33044bd:	0f 79 c2             	vmwrite %rdx,%rax
 33044c0:	90                   	nop
 33044c1:	48 c7 85 00 fb ff ff 	movq   $0x481c,-0x500(%rbp)
 33044c8:	1c 48 00 00 
 33044cc:	48 c7 85 f8 fa ff ff 	movq   $0xc093,-0x508(%rbp)
 33044d3:	93 c0 00 00 
 33044d7:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
 33044de:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
 33044e5:	0f 79 c2             	vmwrite %rdx,%rax
 33044e8:	90                   	nop
 33044e9:	b8 00 00 00 00       	mov    $0x0,%eax
 33044ee:	e8 16 c0 ff ff       	callq  3300509 <GetDS>
 33044f3:	25 f8 00 00 00       	and    $0xf8,%eax
 33044f8:	48 c7 85 10 fb ff ff 	movq   $0x80e,-0x4f0(%rbp)
 33044ff:	0e 08 00 00 
 3304503:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
 330450a:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
 3304511:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
 3304518:	0f 79 c2             	vmwrite %rdx,%rax
 330451b:	90                   	nop
 330451c:	48 c7 85 20 fb ff ff 	movq   $0x6814,-0x4e0(%rbp)
 3304523:	14 68 00 00 
 3304527:	48 c7 85 18 fb ff ff 	movq   $0x0,-0x4e8(%rbp)
 330452e:	00 00 00 00 
 3304532:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
 3304539:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
 3304540:	0f 79 c2             	vmwrite %rdx,%rax
 3304543:	90                   	nop
 3304544:	48 c7 85 30 fb ff ff 	movq   $0x480e,-0x4d0(%rbp)
 330454b:	0e 48 00 00 
 330454f:	48 89 9d 28 fb ff ff 	mov    %rbx,-0x4d8(%rbp)
 3304556:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
 330455d:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
 3304564:	0f 79 c2             	vmwrite %rdx,%rax
 3304567:	90                   	nop
 3304568:	48 c7 85 40 fb ff ff 	movq   $0x4822,-0x4c0(%rbp)
 330456f:	22 48 00 00 
 3304573:	48 c7 85 38 fb ff ff 	movq   $0xc08b,-0x4c8(%rbp)
 330457a:	8b c0 00 00 
 330457e:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
 3304585:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
 330458c:	0f 79 c2             	vmwrite %rdx,%rax
 330458f:	90                   	nop
 3304590:	48 c7 c0 31 05 30 03 	mov    $0x3300531,%rax
 3304597:	48 c7 85 50 fb ff ff 	movq   $0x681e,-0x4b0(%rbp)
 330459e:	1e 68 00 00 
 33045a2:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
 33045a9:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
 33045b0:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
 33045b7:	0f 79 c2             	vmwrite %rdx,%rax
 33045ba:	90                   	nop
 33045bb:	48 c7 85 60 fb ff ff 	movq   $0x681c,-0x4a0(%rbp)
 33045c2:	1c 68 00 00 
 33045c6:	48 c7 85 58 fb ff ff 	movq   $0x0,-0x4a8(%rbp)
 33045cd:	00 00 00 00 
 33045d1:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
 33045d8:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
 33045df:	0f 79 c2             	vmwrite %rdx,%rax
 33045e2:	90                   	nop
 33045e3:	41 be 80 00 00 c0    	mov    $0xc0000080,%r14d
 33045e9:	4c 89 b5 78 fb ff ff 	mov    %r14,-0x488(%rbp)
 33045f0:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
 33045f7:	00 00 00 00 
 33045fb:	48 c7 85 68 fb ff ff 	movq   $0x0,-0x498(%rbp)
 3304602:	00 00 00 00 
 3304606:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
 330460d:	48 89 c1             	mov    %rax,%rcx
 3304610:	0f 32                	rdmsr  
 3304612:	48 89 95 70 fb ff ff 	mov    %rdx,-0x490(%rbp)
 3304619:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
 3304620:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
 3304627:	48 c1 e0 20          	shl    $0x20,%rax
 330462b:	48 0b 85 68 fb ff ff 	or     -0x498(%rbp),%rax
 3304632:	48 c7 85 88 fb ff ff 	movq   $0x2806,-0x478(%rbp)
 3304639:	06 28 00 00 
 330463d:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
 3304644:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
 330464b:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
 3304652:	0f 79 c2             	vmwrite %rdx,%rax
 3304655:	90                   	nop
 3304656:	9c                   	pushfq 
 3304657:	58                   	pop    %rax
 3304658:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
 330465f:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
 3304666:	25 d7 ff 1f 00       	and    $0x1fffd7,%eax
 330466b:	48 c7 85 a0 fb ff ff 	movq   $0x6820,-0x460(%rbp)
 3304672:	20 68 00 00 
 3304676:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
 330467d:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
 3304684:	48 8b 95 98 fb ff ff 	mov    -0x468(%rbp),%rdx
 330468b:	0f 79 c2             	vmwrite %rdx,%rax
 330468e:	90                   	nop
 330468f:	48 c7 85 b8 fb ff ff 	movq   $0x1d9,-0x448(%rbp)
 3304696:	d9 01 00 00 
 330469a:	48 c7 85 b0 fb ff ff 	movq   $0x0,-0x450(%rbp)
 33046a1:	00 00 00 00 
 33046a5:	48 c7 85 a8 fb ff ff 	movq   $0x0,-0x458(%rbp)
 33046ac:	00 00 00 00 
 33046b0:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
 33046b7:	48 89 c1             	mov    %rax,%rcx
 33046ba:	0f 32                	rdmsr  
 33046bc:	48 89 95 b0 fb ff ff 	mov    %rdx,-0x450(%rbp)
 33046c3:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
 33046ca:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
 33046d1:	48 c1 e0 20          	shl    $0x20,%rax
 33046d5:	48 0b 85 a8 fb ff ff 	or     -0x458(%rbp),%rax
 33046dc:	89 c0                	mov    %eax,%eax
 33046de:	48 c7 85 c8 fb ff ff 	movq   $0x2802,-0x438(%rbp)
 33046e5:	02 28 00 00 
 33046e9:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
 33046f0:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
 33046f7:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
 33046fe:	0f 79 c2             	vmwrite %rdx,%rax
 3304701:	90                   	nop
 3304702:	48 c7 85 e0 fb ff ff 	movq   $0x1d9,-0x420(%rbp)
 3304709:	d9 01 00 00 
 330470d:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
 3304714:	00 00 00 00 
 3304718:	48 c7 85 d0 fb ff ff 	movq   $0x0,-0x430(%rbp)
 330471f:	00 00 00 00 
 3304723:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
 330472a:	48 89 c1             	mov    %rax,%rcx
 330472d:	0f 32                	rdmsr  
 330472f:	48 89 95 d8 fb ff ff 	mov    %rdx,-0x428(%rbp)
 3304736:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
 330473d:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 3304744:	48 c1 e0 20          	shl    $0x20,%rax
 3304748:	48 0b 85 d0 fb ff ff 	or     -0x430(%rbp),%rax
 330474f:	48 c1 e8 20          	shr    $0x20,%rax
 3304753:	48 c7 85 f0 fb ff ff 	movq   $0x2803,-0x410(%rbp)
 330475a:	03 28 00 00 
 330475e:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
 3304765:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
 330476c:	48 8b 95 e8 fb ff ff 	mov    -0x418(%rbp),%rdx
 3304773:	0f 79 c2             	vmwrite %rdx,%rax
 3304776:	90                   	nop
 3304777:	48 c7 85 00 fc ff ff 	movq   $0x4824,-0x400(%rbp)
 330477e:	24 48 00 00 
 3304782:	48 c7 85 f8 fb ff ff 	movq   $0x0,-0x408(%rbp)
 3304789:	00 00 00 00 
 330478d:	48 8b 85 00 fc ff ff 	mov    -0x400(%rbp),%rax
 3304794:	48 8b 95 f8 fb ff ff 	mov    -0x408(%rbp),%rdx
 330479b:	0f 79 c2             	vmwrite %rdx,%rax
 330479e:	90                   	nop
 330479f:	48 c7 85 10 fc ff ff 	movq   $0x4826,-0x3f0(%rbp)
 33047a6:	26 48 00 00 
 33047aa:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
 33047b1:	00 00 00 00 
 33047b5:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 33047bc:	48 8b 95 08 fc ff ff 	mov    -0x3f8(%rbp),%rdx
 33047c3:	0f 79 c2             	vmwrite %rdx,%rax
 33047c6:	90                   	nop
 33047c7:	48 c7 85 20 fc ff ff 	movq   $0x6826,-0x3e0(%rbp)
 33047ce:	26 68 00 00 
 33047d2:	48 c7 85 18 fc ff ff 	movq   $0xffff,-0x3e8(%rbp)
 33047d9:	ff ff 00 00 
 33047dd:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
 33047e4:	48 8b 95 18 fc ff ff 	mov    -0x3e8(%rbp),%rdx
 33047eb:	0f 79 c2             	vmwrite %rdx,%rax
 33047ee:	90                   	nop
 33047ef:	48 c7 85 30 fc ff ff 	movq   $0x6824,-0x3d0(%rbp)
 33047f6:	24 68 00 00 
 33047fa:	48 c7 85 28 fc ff ff 	movq   $0xffff,-0x3d8(%rbp)
 3304801:	ff ff 00 00 
 3304805:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
 330480c:	48 8b 95 28 fc ff ff 	mov    -0x3d8(%rbp),%rdx
 3304813:	0f 79 c2             	vmwrite %rdx,%rax
 3304816:	90                   	nop
 3304817:	48 c7 85 40 fc ff ff 	movq   $0x482a,-0x3c0(%rbp)
 330481e:	2a 48 00 00 
 3304822:	48 c7 85 38 fc ff ff 	movq   $0x8,-0x3c8(%rbp)
 3304829:	08 00 00 00 
 330482d:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
 3304834:	48 8b 95 38 fc ff ff 	mov    -0x3c8(%rbp),%rdx
 330483b:	0f 79 c2             	vmwrite %rdx,%rax
 330483e:	90                   	nop
 330483f:	0f 21 f8             	mov    %db7,%rax
 3304842:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
 3304849:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
 3304850:	48 c7 85 58 fc ff ff 	movq   $0x681a,-0x3a8(%rbp)
 3304857:	1a 68 00 00 
 330485b:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
 3304862:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
 3304869:	48 8b 95 50 fc ff ff 	mov    -0x3b0(%rbp),%rdx
 3304870:	0f 79 c2             	vmwrite %rdx,%rax
 3304873:	90                   	nop
 3304874:	48 c7 85 68 fc ff ff 	movq   $0x6000,-0x398(%rbp)
 330487b:	00 60 00 00 
 330487f:	48 c7 85 60 fc ff ff 	movq   $0x0,-0x3a0(%rbp)
 3304886:	00 00 00 00 
 330488a:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
 3304891:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
 3304898:	0f 79 c2             	vmwrite %rdx,%rax
 330489b:	90                   	nop
 330489c:	48 c7 85 78 fc ff ff 	movq   $0x6002,-0x388(%rbp)
 33048a3:	02 60 00 00 
 33048a7:	48 c7 85 70 fc ff ff 	movq   $0x0,-0x390(%rbp)
 33048ae:	00 00 00 00 
 33048b2:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
 33048b9:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
 33048c0:	0f 79 c2             	vmwrite %rdx,%rax
 33048c3:	90                   	nop
 33048c4:	0f 20 c0             	mov    %cr0,%rax
 33048c7:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
 33048ce:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
 33048d5:	48 c7 85 90 fc ff ff 	movq   $0x6c00,-0x370(%rbp)
 33048dc:	00 6c 00 00 
 33048e0:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
 33048e7:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
 33048ee:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
 33048f5:	0f 79 c2             	vmwrite %rdx,%rax
 33048f8:	90                   	nop
 33048f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33048fd:	48 89 c7             	mov    %rax,%rdi
 3304900:	e8 71 de ff ff       	callq  3302776 <InitializeHypervisorPaging>
 3304905:	48 c7 85 a0 fc ff ff 	movq   $0x6c02,-0x360(%rbp)
 330490c:	02 6c 00 00 
 3304910:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
 3304917:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
 330491e:	48 8b 95 98 fc ff ff 	mov    -0x368(%rbp),%rdx
 3304925:	0f 79 c2             	vmwrite %rdx,%rax
 3304928:	90                   	nop
 3304929:	0f 20 e0             	mov    %cr4,%rax
 330492c:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
 3304933:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
 330493a:	48 0d 00 02 04 00    	or     $0x40200,%rax
 3304940:	48 c7 85 b8 fc ff ff 	movq   $0x6c04,-0x348(%rbp)
 3304947:	04 6c 00 00 
 330494b:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
 3304952:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
 3304959:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
 3304960:	0f 79 c2             	vmwrite %rdx,%rax
 3304963:	90                   	nop
 3304964:	48 c7 c0 37 05 30 03 	mov    $0x3300537,%rax
 330496b:	48 c7 85 c8 fc ff ff 	movq   $0x6c16,-0x338(%rbp)
 3304972:	16 6c 00 00 
 3304976:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
 330497d:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
 3304984:	48 8b 95 c0 fc ff ff 	mov    -0x340(%rbp),%rdx
 330498b:	0f 79 c2             	vmwrite %rdx,%rax
 330498e:	90                   	nop
 330498f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304993:	48 05 00 30 00 00    	add    $0x3000,%rax
 3304999:	48 05 00 40 00 00    	add    $0x4000,%rax
 330499f:	48 c7 85 d8 fc ff ff 	movq   $0x6c14,-0x328(%rbp)
 33049a6:	14 6c 00 00 
 33049aa:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
 33049b1:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
 33049b8:	48 8b 95 d0 fc ff ff 	mov    -0x330(%rbp),%rdx
 33049bf:	0f 79 c2             	vmwrite %rdx,%rax
 33049c2:	90                   	nop
 33049c3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33049c7:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33049ce:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33049d2:	0f b6 92 00 b0 21 02 	movzbl 0x221b000(%rdx),%edx
 33049d9:	0f b6 d2             	movzbl %dl,%edx
 33049dc:	48 63 d2             	movslq %edx,%rdx
 33049df:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 33049e6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 33049ea:	48 c7 85 e8 fc ff ff 	movq   $0x6c06,-0x318(%rbp)
 33049f1:	06 6c 00 00 
 33049f5:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
 33049fc:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
 3304a03:	48 8b 95 e0 fc ff ff 	mov    -0x320(%rbp),%rdx
 3304a0a:	0f 79 c2             	vmwrite %rdx,%rax
 3304a0d:	90                   	nop
 3304a0e:	48 c7 85 f8 fc ff ff 	movq   $0x6c08,-0x308(%rbp)
 3304a15:	08 6c 00 00 
 3304a19:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
 3304a20:	00 00 00 00 
 3304a24:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
 3304a2b:	48 8b 95 f0 fc ff ff 	mov    -0x310(%rbp),%rdx
 3304a32:	0f 79 c2             	vmwrite %rdx,%rax
 3304a35:	90                   	nop
 3304a36:	48 c7 85 08 fd ff ff 	movq   $0xc02,-0x2f8(%rbp)
 3304a3d:	02 0c 00 00 
 3304a41:	48 c7 85 00 fd ff ff 	movq   $0x8,-0x300(%rbp)
 3304a48:	08 00 00 00 
 3304a4c:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
 3304a53:	48 8b 95 00 fd ff ff 	mov    -0x300(%rbp),%rdx
 3304a5a:	0f 79 c2             	vmwrite %rdx,%rax
 3304a5d:	90                   	nop
 3304a5e:	48 c7 85 18 fd ff ff 	movq   $0xc06,-0x2e8(%rbp)
 3304a65:	06 0c 00 00 
 3304a69:	48 c7 85 10 fd ff ff 	movq   $0x10,-0x2f0(%rbp)
 3304a70:	10 00 00 00 
 3304a74:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
 3304a7b:	48 8b 95 10 fd ff ff 	mov    -0x2f0(%rbp),%rdx
 3304a82:	0f 79 c2             	vmwrite %rdx,%rax
 3304a85:	90                   	nop
 3304a86:	48 c7 85 28 fd ff ff 	movq   $0xc00,-0x2d8(%rbp)
 3304a8d:	00 0c 00 00 
 3304a91:	48 c7 85 20 fd ff ff 	movq   $0x10,-0x2e0(%rbp)
 3304a98:	10 00 00 00 
 3304a9c:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
 3304aa3:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
 3304aaa:	0f 79 c2             	vmwrite %rdx,%rax
 3304aad:	90                   	nop
 3304aae:	48 c7 85 38 fd ff ff 	movq   $0xc04,-0x2c8(%rbp)
 3304ab5:	04 0c 00 00 
 3304ab9:	48 c7 85 30 fd ff ff 	movq   $0x10,-0x2d0(%rbp)
 3304ac0:	10 00 00 00 
 3304ac4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
 3304acb:	48 8b 95 30 fd ff ff 	mov    -0x2d0(%rbp),%rdx
 3304ad2:	0f 79 c2             	vmwrite %rdx,%rax
 3304ad5:	90                   	nop
 3304ad6:	48 c7 85 48 fd ff ff 	movq   $0xc0a,-0x2b8(%rbp)
 3304add:	0a 0c 00 00 
 3304ae1:	48 c7 85 40 fd ff ff 	movq   $0x10,-0x2c0(%rbp)
 3304ae8:	10 00 00 00 
 3304aec:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
 3304af3:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
 3304afa:	0f 79 c2             	vmwrite %rdx,%rax
 3304afd:	90                   	nop
 3304afe:	48 c7 85 58 fd ff ff 	movq   $0xc08,-0x2a8(%rbp)
 3304b05:	08 0c 00 00 
 3304b09:	48 c7 85 50 fd ff ff 	movq   $0x10,-0x2b0(%rbp)
 3304b10:	10 00 00 00 
 3304b14:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
 3304b1b:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
 3304b22:	0f 79 c2             	vmwrite %rdx,%rax
 3304b25:	90                   	nop
 3304b26:	48 c7 85 68 fd ff ff 	movq   $0xc0c,-0x298(%rbp)
 3304b2d:	0c 0c 00 00 
 3304b31:	48 c7 85 60 fd ff ff 	movq   $0x10,-0x2a0(%rbp)
 3304b38:	10 00 00 00 
 3304b3c:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
 3304b43:	48 8b 95 60 fd ff ff 	mov    -0x2a0(%rbp),%rdx
 3304b4a:	0f 79 c2             	vmwrite %rdx,%rax
 3304b4d:	90                   	nop
 3304b4e:	48 c7 85 78 fd ff ff 	movq   $0x6c0a,-0x288(%rbp)
 3304b55:	0a 6c 00 00 
 3304b59:	48 c7 85 70 fd ff ff 	movq   $0x10,-0x290(%rbp)
 3304b60:	10 00 00 00 
 3304b64:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
 3304b6b:	48 8b 95 70 fd ff ff 	mov    -0x290(%rbp),%rdx
 3304b72:	0f 79 c2             	vmwrite %rdx,%rax
 3304b75:	90                   	nop
 3304b76:	4c 89 b5 90 fd ff ff 	mov    %r14,-0x270(%rbp)
 3304b7d:	48 c7 85 88 fd ff ff 	movq   $0x0,-0x278(%rbp)
 3304b84:	00 00 00 00 
 3304b88:	48 c7 85 80 fd ff ff 	movq   $0x0,-0x280(%rbp)
 3304b8f:	00 00 00 00 
 3304b93:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 3304b9a:	48 89 c1             	mov    %rax,%rcx
 3304b9d:	0f 32                	rdmsr  
 3304b9f:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
 3304ba6:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
 3304bad:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 3304bb4:	48 c1 e0 20          	shl    $0x20,%rax
 3304bb8:	48 0b 85 80 fd ff ff 	or     -0x280(%rbp),%rax
 3304bbf:	48 c7 85 a0 fd ff ff 	movq   $0x2c02,-0x260(%rbp)
 3304bc6:	02 2c 00 00 
 3304bca:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
 3304bd1:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 3304bd8:	48 8b 95 98 fd ff ff 	mov    -0x268(%rbp),%rdx
 3304bdf:	0f 79 c2             	vmwrite %rdx,%rax
 3304be2:	90                   	nop
 3304be3:	48 c7 85 b0 fd ff ff 	movq   $0x4c00,-0x250(%rbp)
 3304bea:	00 4c 00 00 
 3304bee:	48 c7 85 a8 fd ff ff 	movq   $0xff,-0x258(%rbp)
 3304bf5:	ff 00 00 00 
 3304bf9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
 3304c00:	48 8b 95 a8 fd ff ff 	mov    -0x258(%rbp),%rdx
 3304c07:	0f 79 c2             	vmwrite %rdx,%rax
 3304c0a:	90                   	nop
 3304c0b:	48 c7 85 c0 fd ff ff 	movq   $0x6c12,-0x240(%rbp)
 3304c12:	12 6c 00 00 
 3304c16:	48 89 9d b8 fd ff ff 	mov    %rbx,-0x248(%rbp)
 3304c1d:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 3304c24:	48 8b 95 b8 fd ff ff 	mov    -0x248(%rbp),%rdx
 3304c2b:	0f 79 c2             	vmwrite %rdx,%rax
 3304c2e:	90                   	nop
 3304c2f:	48 c7 85 d0 fd ff ff 	movq   $0x6c10,-0x230(%rbp)
 3304c36:	10 6c 00 00 
 3304c3a:	48 89 9d c8 fd ff ff 	mov    %rbx,-0x238(%rbp)
 3304c41:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
 3304c48:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
 3304c4f:	0f 79 c2             	vmwrite %rdx,%rax
 3304c52:	90                   	nop
 3304c53:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304c57:	48 05 08 b0 21 02    	add    $0x221b008,%rax
 3304c5d:	48 c7 85 e0 fd ff ff 	movq   $0x6c0c,-0x220(%rbp)
 3304c64:	0c 6c 00 00 
 3304c68:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
 3304c6f:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
 3304c76:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
 3304c7d:	0f 79 c2             	vmwrite %rdx,%rax
 3304c80:	90                   	nop
 3304c81:	48 c7 85 f0 fd ff ff 	movq   $0x2800,-0x210(%rbp)
 3304c88:	00 28 00 00 
 3304c8c:	48 c7 85 e8 fd ff ff 	movq   $0xffffffffffffffff,-0x218(%rbp)
 3304c93:	ff ff ff ff 
 3304c97:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
 3304c9e:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
 3304ca5:	0f 79 c2             	vmwrite %rdx,%rax
 3304ca8:	90                   	nop
 3304ca9:	48 c7 85 00 fe ff ff 	movq   $0x2010,-0x200(%rbp)
 3304cb0:	10 20 00 00 
 3304cb4:	48 c7 85 f8 fd ff ff 	movq   $0x0,-0x208(%rbp)
 3304cbb:	00 00 00 00 
 3304cbf:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
 3304cc6:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
 3304ccd:	0f 79 c2             	vmwrite %rdx,%rax
 3304cd0:	90                   	nop
 3304cd1:	48 c7 85 10 fe ff ff 	movq   $0x2011,-0x1f0(%rbp)
 3304cd8:	11 20 00 00 
 3304cdc:	48 c7 85 08 fe ff ff 	movq   $0x0,-0x1f8(%rbp)
 3304ce3:	00 00 00 00 
 3304ce7:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
 3304cee:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
 3304cf5:	0f 79 c2             	vmwrite %rdx,%rax
 3304cf8:	90                   	nop
 3304cf9:	48 c7 85 20 fe ff ff 	movq   $0x4006,-0x1e0(%rbp)
 3304d00:	06 40 00 00 
 3304d04:	48 c7 85 18 fe ff ff 	movq   $0x0,-0x1e8(%rbp)
 3304d0b:	00 00 00 00 
 3304d0f:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
 3304d16:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
 3304d1d:	0f 79 c2             	vmwrite %rdx,%rax
 3304d20:	90                   	nop
 3304d21:	48 c7 85 30 fe ff ff 	movq   $0x4008,-0x1d0(%rbp)
 3304d28:	08 40 00 00 
 3304d2c:	48 c7 85 28 fe ff ff 	movq   $0x0,-0x1d8(%rbp)
 3304d33:	00 00 00 00 
 3304d37:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
 3304d3e:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
 3304d45:	0f 79 c2             	vmwrite %rdx,%rax
 3304d48:	90                   	nop
 3304d49:	48 c7 85 40 fe ff ff 	movq   $0x400e,-0x1c0(%rbp)
 3304d50:	0e 40 00 00 
 3304d54:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
 3304d5b:	00 00 00 00 
 3304d5f:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
 3304d66:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
 3304d6d:	0f 79 c2             	vmwrite %rdx,%rax
 3304d70:	90                   	nop
 3304d71:	48 c7 85 50 fe ff ff 	movq   $0x4010,-0x1b0(%rbp)
 3304d78:	10 40 00 00 
 3304d7c:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
 3304d83:	00 00 00 00 
 3304d87:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 3304d8e:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
 3304d95:	0f 79 c2             	vmwrite %rdx,%rax
 3304d98:	90                   	nop
 3304d99:	48 c7 85 60 fe ff ff 	movq   $0x4014,-0x1a0(%rbp)
 3304da0:	14 40 00 00 
 3304da4:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
 3304dab:	00 00 00 00 
 3304daf:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
 3304db6:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
 3304dbd:	0f 79 c2             	vmwrite %rdx,%rax
 3304dc0:	90                   	nop
 3304dc1:	48 c7 85 70 fe ff ff 	movq   $0x4016,-0x190(%rbp)
 3304dc8:	16 40 00 00 
 3304dcc:	48 c7 85 68 fe ff ff 	movq   $0x0,-0x198(%rbp)
 3304dd3:	00 00 00 00 
 3304dd7:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
 3304dde:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
 3304de5:	0f 79 c2             	vmwrite %rdx,%rax
 3304de8:	90                   	nop
 3304de9:	be 82 04 00 00       	mov    $0x482,%esi
 3304dee:	bf 00 00 00 90       	mov    $0x90000000,%edi
 3304df3:	e8 59 03 00 00       	callq  3305151 <AdjustControls>
 3304df8:	89 c0                	mov    %eax,%eax
 3304dfa:	48 c7 85 80 fe ff ff 	movq   $0x4002,-0x180(%rbp)
 3304e01:	02 40 00 00 
 3304e05:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
 3304e0c:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
 3304e13:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
 3304e1a:	0f 79 c2             	vmwrite %rdx,%rax
 3304e1d:	90                   	nop
 3304e1e:	be 8b 04 00 00       	mov    $0x48b,%esi
 3304e23:	bf 8a 10 00 00       	mov    $0x108a,%edi
 3304e28:	e8 24 03 00 00       	callq  3305151 <AdjustControls>
 3304e2d:	89 c0                	mov    %eax,%eax
 3304e2f:	48 c7 85 90 fe ff ff 	movq   $0x401e,-0x170(%rbp)
 3304e36:	1e 40 00 00 
 3304e3a:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
 3304e41:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
 3304e48:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
 3304e4f:	0f 79 c2             	vmwrite %rdx,%rax
 3304e52:	90                   	nop
 3304e53:	be 81 04 00 00       	mov    $0x481,%esi
 3304e58:	bf 00 00 00 00       	mov    $0x0,%edi
 3304e5d:	e8 ef 02 00 00       	callq  3305151 <AdjustControls>
 3304e62:	89 c0                	mov    %eax,%eax
 3304e64:	48 c7 85 a0 fe ff ff 	movq   $0x4000,-0x160(%rbp)
 3304e6b:	00 40 00 00 
 3304e6f:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 3304e76:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
 3304e7d:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
 3304e84:	0f 79 c2             	vmwrite %rdx,%rax
 3304e87:	90                   	nop
 3304e88:	be 83 04 00 00       	mov    $0x483,%esi
 3304e8d:	bf 00 02 30 00       	mov    $0x300200,%edi
 3304e92:	e8 ba 02 00 00       	callq  3305151 <AdjustControls>
 3304e97:	89 c0                	mov    %eax,%eax
 3304e99:	48 c7 85 b0 fe ff ff 	movq   $0x400c,-0x150(%rbp)
 3304ea0:	0c 40 00 00 
 3304ea4:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 3304eab:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
 3304eb2:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 3304eb9:	0f 79 c2             	vmwrite %rdx,%rax
 3304ebc:	90                   	nop
 3304ebd:	be 84 04 00 00       	mov    $0x484,%esi
 3304ec2:	bf 00 82 00 00       	mov    $0x8200,%edi
 3304ec7:	e8 85 02 00 00       	callq  3305151 <AdjustControls>
 3304ecc:	89 c0                	mov    %eax,%eax
 3304ece:	48 c7 85 c0 fe ff ff 	movq   $0x4012,-0x140(%rbp)
 3304ed5:	12 40 00 00 
 3304ed9:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 3304ee0:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
 3304ee7:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
 3304eee:	0f 79 c2             	vmwrite %rdx,%rax
 3304ef1:	90                   	nop
 3304ef2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304ef6:	48 89 c7             	mov    %rax,%rdi
 3304ef9:	e8 7e d9 ff ff       	callq  330287c <InitializeExtendedPageTable>
 3304efe:	48 c7 85 d0 fe ff ff 	movq   $0x201a,-0x130(%rbp)
 3304f05:	1a 20 00 00 
 3304f09:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 3304f10:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 3304f17:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 3304f1e:	0f 79 c2             	vmwrite %rdx,%rax
 3304f21:	90                   	nop
 3304f22:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304f26:	48 05 00 20 00 00    	add    $0x2000,%rax
 3304f2c:	48 89 c7             	mov    %rax,%rdi
 3304f2f:	e8 fc d7 ff ff       	callq  3302730 <VirtualToPhysical>
 3304f34:	48 c7 85 e0 fe ff ff 	movq   $0x2004,-0x120(%rbp)
 3304f3b:	04 20 00 00 
 3304f3f:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
 3304f46:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 3304f4d:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
 3304f54:	0f 79 c2             	vmwrite %rdx,%rax
 3304f57:	90                   	nop
 3304f58:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
 3304f5f:	00 00 00 00 
 3304f63:	48 c7 85 e8 fe ff ff 	movq   $0x1,-0x118(%rbp)
 3304f6a:	01 00 00 00 
 3304f6e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 3304f75:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
 3304f7c:	0f 79 c2             	vmwrite %rdx,%rax
 3304f7f:	90                   	nop
 3304f80:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304f84:	48 89 c7             	mov    %rax,%rdi
 3304f87:	e8 81 00 00 00       	callq  330500d <RegisterVmExitHandlers>
 3304f8c:	b8 00 00 00 00       	mov    $0x0,%eax
 3304f91:	e8 8a b5 ff ff       	callq  3300520 <SetupCompleteBackToGuestState>
 3304f96:	48 85 c0             	test   %rax,%rax
 3304f99:	74 44                	je     3304fdf <InitializeSingleHypervisor+0x15a3>
 3304f9b:	bf 00 44 00 00       	mov    $0x4400,%edi
 3304fa0:	e8 2e d7 ff ff       	callq  33026d3 <vmread>
 3304fa5:	48 89 c2             	mov    %rax,%rdx
 3304fa8:	9c                   	pushfq 
 3304fa9:	58                   	pop    %rax
 3304faa:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
 3304fb1:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
 3304fb8:	48 89 c6             	mov    %rax,%rsi
 3304fbb:	48 8d 3d 06 18 00 00 	lea    0x1806(%rip),%rdi        # 33067c8 <CopyMemoryToGuest+0xc61>
 3304fc2:	b8 00 00 00 00       	mov    $0x0,%eax
 3304fc7:	e8 d9 d1 ff ff       	callq  33021a5 <Print>
 3304fcc:	48 8d 3d 1d 18 00 00 	lea    0x181d(%rip),%rdi        # 33067f0 <CopyMemoryToGuest+0xc89>
 3304fd3:	b8 00 00 00 00       	mov    $0x0,%eax
 3304fd8:	e8 c8 d1 ff ff       	callq  33021a5 <Print>
 3304fdd:	eb fe                	jmp    3304fdd <InitializeSingleHypervisor+0x15a1>
 3304fdf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304fe3:	0f b6 80 00 b0 21 02 	movzbl 0x221b000(%rax),%eax
 3304fea:	0f b6 c0             	movzbl %al,%eax
 3304fed:	89 c6                	mov    %eax,%esi
 3304fef:	48 8d 3d 5a 18 00 00 	lea    0x185a(%rip),%rdi        # 3306850 <CopyMemoryToGuest+0xce9>
 3304ff6:	b8 00 00 00 00       	mov    $0x0,%eax
 3304ffb:	e8 a5 d1 ff ff       	callq  33021a5 <Print>
 3305000:	90                   	nop
 3305001:	48 81 c4 a0 07 00 00 	add    $0x7a0,%rsp
 3305008:	5b                   	pop    %rbx
 3305009:	41 5e                	pop    %r14
 330500b:	5d                   	pop    %rbp
 330500c:	c3                   	retq   

000000000330500d <RegisterVmExitHandlers>:
 330500d:	f3 0f 1e fa          	endbr64 
 3305011:	55                   	push   %rbp
 3305012:	48 89 e5             	mov    %rsp,%rbp
 3305015:	48 83 ec 20          	sub    $0x20,%rsp
 3305019:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 330501d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305024:	00 
 3305025:	eb 18                	jmp    330503f <RegisterVmExitHandlers+0x32>
 3305027:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330502b:	48 8d 50 01          	lea    0x1(%rax),%rdx
 330502f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 3305033:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305037:	c6 84 02 00 b8 21 02 	movb   $0x0,0x221b800(%rdx,%rax,1)
 330503e:	00 
 330503f:	48 83 7d f8 63       	cmpq   $0x63,-0x8(%rbp)
 3305044:	76 e1                	jbe    3305027 <RegisterVmExitHandlers+0x1a>
 3305046:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330504a:	48 c7 c2 6a 36 30 03 	mov    $0x330366a,%rdx
 3305051:	be 1f 00 00 00       	mov    $0x1f,%esi
 3305056:	48 89 c7             	mov    %rax,%rdi
 3305059:	e8 57 05 00 00       	callq  33055b5 <RegisterVmExitHandler>
 330505e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305062:	48 c7 c2 13 37 30 03 	mov    $0x3303713,%rdx
 3305069:	be 20 00 00 00       	mov    $0x20,%esi
 330506e:	48 89 c7             	mov    %rax,%rdi
 3305071:	e8 3f 05 00 00       	callq  33055b5 <RegisterVmExitHandler>
 3305076:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330507a:	48 c7 c2 9c 39 30 03 	mov    $0x330399c,%rdx
 3305081:	be 21 00 00 00       	mov    $0x21,%esi
 3305086:	48 89 c7             	mov    %rax,%rdi
 3305089:	e8 27 05 00 00       	callq  33055b5 <RegisterVmExitHandler>
 330508e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305092:	48 c7 c2 cd 31 30 03 	mov    $0x33031cd,%rdx
 3305099:	be 37 00 00 00       	mov    $0x37,%esi
 330509e:	48 89 c7             	mov    %rax,%rdi
 33050a1:	e8 0f 05 00 00       	callq  33055b5 <RegisterVmExitHandler>
 33050a6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050aa:	48 c7 c2 a8 37 30 03 	mov    $0x33037a8,%rdx
 33050b1:	be 0a 00 00 00       	mov    $0xa,%esi
 33050b6:	48 89 c7             	mov    %rax,%rdi
 33050b9:	e8 f7 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 33050be:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050c2:	48 c7 c2 e6 29 30 03 	mov    $0x33029e6,%rdx
 33050c9:	be 1c 00 00 00       	mov    $0x1c,%esi
 33050ce:	48 89 c7             	mov    %rax,%rdi
 33050d1:	e8 df 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 33050d6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050da:	48 c7 c2 ff 38 30 03 	mov    $0x33038ff,%rdx
 33050e1:	be 30 00 00 00       	mov    $0x30,%esi
 33050e6:	48 89 c7             	mov    %rax,%rdi
 33050e9:	e8 c7 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 33050ee:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050f2:	48 c7 c2 28 33 30 03 	mov    $0x3303328,%rdx
 33050f9:	be 12 00 00 00       	mov    $0x12,%esi
 33050fe:	48 89 c7             	mov    %rax,%rdi
 3305101:	e8 af 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 3305106:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330510a:	48 c7 c2 c4 39 30 03 	mov    $0x33039c4,%rdx
 3305111:	be 22 00 00 00       	mov    $0x22,%esi
 3305116:	48 89 c7             	mov    %rax,%rdi
 3305119:	e8 97 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 330511e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305122:	48 c7 c2 ec 39 30 03 	mov    $0x33039ec,%rdx
 3305129:	be 29 00 00 00       	mov    $0x29,%esi
 330512e:	48 89 c7             	mov    %rax,%rdi
 3305131:	e8 7f 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 3305136:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330513a:	48 c7 c2 14 3a 30 03 	mov    $0x3303a14,%rdx
 3305141:	be 02 00 00 00       	mov    $0x2,%esi
 3305146:	48 89 c7             	mov    %rax,%rdi
 3305149:	e8 67 04 00 00       	callq  33055b5 <RegisterVmExitHandler>
 330514e:	90                   	nop
 330514f:	c9                   	leaveq 
 3305150:	c3                   	retq   

0000000003305151 <AdjustControls>:
 3305151:	f3 0f 1e fa          	endbr64 
 3305155:	55                   	push   %rbp
 3305156:	48 89 e5             	mov    %rsp,%rbp
 3305159:	48 83 ec 30          	sub    $0x30,%rsp
 330515d:	89 7d dc             	mov    %edi,-0x24(%rbp)
 3305160:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305164:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305168:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330516c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3305173:	00 
 3305174:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 330517b:	00 
 330517c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305180:	48 89 c1             	mov    %rax,%rcx
 3305183:	0f 32                	rdmsr  
 3305185:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3305189:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 330518d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305191:	48 c1 e0 20          	shl    $0x20,%rax
 3305195:	48 0b 45 e0          	or     -0x20(%rbp),%rax
 3305199:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330519d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33051a1:	48 c1 e8 20          	shr    $0x20,%rax
 33051a5:	21 45 dc             	and    %eax,-0x24(%rbp)
 33051a8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33051ac:	09 45 dc             	or     %eax,-0x24(%rbp)
 33051af:	8b 45 dc             	mov    -0x24(%rbp),%eax
 33051b2:	c9                   	leaveq 
 33051b3:	c3                   	retq   

00000000033051b4 <HandleVmExitEx>:
 33051b4:	f3 0f 1e fa          	endbr64 
 33051b8:	55                   	push   %rbp
 33051b9:	48 89 e5             	mov    %rsp,%rbp
 33051bc:	48 83 ec 20          	sub    $0x20,%rsp
 33051c0:	bf 02 44 00 00       	mov    $0x4402,%edi
 33051c5:	e8 09 d5 ff ff       	callq  33026d3 <vmread>
 33051ca:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33051ce:	bf 00 64 00 00       	mov    $0x6400,%edi
 33051d3:	e8 fb d4 ff ff       	callq  33026d3 <vmread>
 33051d8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33051dc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33051e0:	48 25 00 00 00 80    	and    $0xffffffff80000000,%rax
 33051e6:	48 85 c0             	test   %rax,%rax
 33051e9:	74 18                	je     3305203 <HandleVmExitEx+0x4f>
 33051eb:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33051ef:	48 89 c6             	mov    %rax,%rsi
 33051f2:	48 8d 3d 7f 16 00 00 	lea    0x167f(%rip),%rdi        # 3306878 <CopyMemoryToGuest+0xd11>
 33051f9:	b8 00 00 00 00       	mov    $0x0,%eax
 33051fe:	e8 a2 cf ff ff       	callq  33021a5 <Print>
 3305203:	48 81 65 f8 ff ff 00 	andq   $0xffff,-0x8(%rbp)
 330520a:	00 
 330520b:	b8 00 00 00 00       	mov    $0x0,%eax
 3305210:	e8 af 00 00 00       	callq  33052c4 <GetVMMStruct>
 3305215:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305219:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330521d:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
 3305224:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305228:	48 01 d0             	add    %rdx,%rax
 330522b:	48 05 00 b8 21 02    	add    $0x221b800,%rax
 3305231:	0f b6 00             	movzbl (%rax),%eax
 3305234:	84 c0                	test   %al,%al
 3305236:	74 5e                	je     3305296 <HandleVmExitEx+0xe2>
 3305238:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330523c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3305243:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3305247:	48 81 c2 0c 37 44 00 	add    $0x44370c,%rdx
 330524e:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
 3305253:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305257:	48 89 c7             	mov    %rax,%rdi
 330525a:	ff d2                	callq  *%rdx
 330525c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3305260:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 3305265:	74 5a                	je     33052c1 <HandleVmExitEx+0x10d>
 3305267:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330526b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330526f:	48 89 c6             	mov    %rax,%rsi
 3305272:	48 8d 3d 37 16 00 00 	lea    0x1637(%rip),%rdi        # 33068b0 <CopyMemoryToGuest+0xd49>
 3305279:	b8 00 00 00 00       	mov    $0x0,%eax
 330527e:	e8 22 cf ff ff       	callq  33021a5 <Print>
 3305283:	48 8d 3d 66 16 00 00 	lea    0x1666(%rip),%rdi        # 33068f0 <CopyMemoryToGuest+0xd89>
 330528a:	b8 00 00 00 00       	mov    $0x0,%eax
 330528f:	e8 11 cf ff ff       	callq  33021a5 <Print>
 3305294:	eb fe                	jmp    3305294 <HandleVmExitEx+0xe0>
 3305296:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330529a:	48 89 c6             	mov    %rax,%rsi
 330529d:	48 8d 3d ac 16 00 00 	lea    0x16ac(%rip),%rdi        # 3306950 <CopyMemoryToGuest+0xde9>
 33052a4:	b8 00 00 00 00       	mov    $0x0,%eax
 33052a9:	e8 f7 ce ff ff       	callq  33021a5 <Print>
 33052ae:	48 8d 3d cb 16 00 00 	lea    0x16cb(%rip),%rdi        # 3306980 <CopyMemoryToGuest+0xe19>
 33052b5:	b8 00 00 00 00       	mov    $0x0,%eax
 33052ba:	e8 e6 ce ff ff       	callq  33021a5 <Print>
 33052bf:	eb fe                	jmp    33052bf <HandleVmExitEx+0x10b>
 33052c1:	90                   	nop
 33052c2:	c9                   	leaveq 
 33052c3:	c3                   	retq   

00000000033052c4 <GetVMMStruct>:
 33052c4:	f3 0f 1e fa          	endbr64 
 33052c8:	55                   	push   %rbp
 33052c9:	48 89 e5             	mov    %rsp,%rbp
 33052cc:	bf 06 6c 00 00       	mov    $0x6c06,%edi
 33052d1:	e8 fd d3 ff ff       	callq  33026d3 <vmread>
 33052d6:	5d                   	pop    %rbp
 33052d7:	c3                   	retq   

00000000033052d8 <SetupHypervisorCodeProtection>:
 33052d8:	f3 0f 1e fa          	endbr64 
 33052dc:	55                   	push   %rbp
 33052dd:	48 89 e5             	mov    %rsp,%rbp
 33052e0:	48 83 ec 40          	sub    $0x40,%rsp
 33052e4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33052e8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33052ec:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 33052f0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33052f4:	25 ff 0f 00 00       	and    $0xfff,%eax
 33052f9:	48 85 c0             	test   %rax,%rax
 33052fc:	74 0a                	je     3305308 <SetupHypervisorCodeProtection+0x30>
 33052fe:	b8 09 00 00 00       	mov    $0x9,%eax
 3305303:	e9 28 01 00 00       	jmpq   3305430 <SetupHypervisorCodeProtection+0x158>
 3305308:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330530c:	48 8b 88 30 86 00 00 	mov    0x8630(%rax),%rcx
 3305313:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305317:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 330531b:	48 89 c6             	mov    %rax,%rsi
 330531e:	48 8d 3d bb 16 00 00 	lea    0x16bb(%rip),%rdi        # 33069e0 <CopyMemoryToGuest+0xe79>
 3305325:	b8 00 00 00 00       	mov    $0x0,%eax
 330532a:	e8 1c cf ff ff       	callq  330224b <PrintDebugLevelDebug>
 330532f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305333:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305339:	48 c1 e8 0c          	shr    $0xc,%rax
 330533d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305341:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305345:	48 8b 80 38 86 00 00 	mov    0x8638(%rax),%rax
 330534c:	48 c1 e8 0c          	shr    $0xc,%rax
 3305350:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305354:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330535b:	00 
 330535c:	e9 a1 00 00 00       	jmpq   3305402 <SetupHypervisorCodeProtection+0x12a>
 3305361:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305365:	48 8b 90 50 86 00 00 	mov    0x8650(%rax),%rdx
 330536c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305370:	48 8b b0 48 86 00 00 	mov    0x8648(%rax),%rsi
 3305377:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330537b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 330537f:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3305386:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 330538a:	b9 00 00 00 00       	mov    $0x0,%ecx
 330538f:	48 89 c7             	mov    %rax,%rdi
 3305392:	e8 ed 00 00 00       	callq  3305484 <UpdateEptAccessPolicy>
 3305397:	48 85 c0             	test   %rax,%rax
 330539a:	74 13                	je     33053af <SetupHypervisorCodeProtection+0xd7>
 330539c:	48 8d 3d 6d 16 00 00 	lea    0x166d(%rip),%rdi        # 3306a10 <CopyMemoryToGuest+0xea9>
 33053a3:	b8 00 00 00 00       	mov    $0x0,%eax
 33053a8:	e8 f8 cd ff ff       	callq  33021a5 <Print>
 33053ad:	eb fe                	jmp    33053ad <SetupHypervisorCodeProtection+0xd5>
 33053af:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053b3:	48 8b 90 38 86 00 00 	mov    0x8638(%rax),%rdx
 33053ba:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053be:	48 8b b0 30 86 00 00 	mov    0x8630(%rax),%rsi
 33053c5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053c9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 33053cd:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 33053d4:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 33053d8:	b9 00 00 00 00       	mov    $0x0,%ecx
 33053dd:	48 89 c7             	mov    %rax,%rdi
 33053e0:	e8 9f 00 00 00       	callq  3305484 <UpdateEptAccessPolicy>
 33053e5:	48 85 c0             	test   %rax,%rax
 33053e8:	74 13                	je     33053fd <SetupHypervisorCodeProtection+0x125>
 33053ea:	48 8d 3d d7 16 00 00 	lea    0x16d7(%rip),%rdi        # 3306ac8 <CopyMemoryToGuest+0xf61>
 33053f1:	b8 00 00 00 00       	mov    $0x0,%eax
 33053f6:	e8 aa cd ff ff       	callq  33021a5 <Print>
 33053fb:	eb fe                	jmp    33053fb <SetupHypervisorCodeProtection+0x123>
 33053fd:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3305402:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305406:	0f b6 80 22 86 00 00 	movzbl 0x8622(%rax),%eax
 330540d:	0f b6 c0             	movzbl %al,%eax
 3305410:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 3305414:	0f 82 47 ff ff ff    	jb     3305361 <SetupHypervisorCodeProtection+0x89>
 330541a:	48 8d 3d 67 17 00 00 	lea    0x1767(%rip),%rdi        # 3306b88 <CopyMemoryToGuest+0x1021>
 3305421:	b8 00 00 00 00       	mov    $0x0,%eax
 3305426:	e8 20 ce ff ff       	callq  330224b <PrintDebugLevelDebug>
 330542b:	b8 00 00 00 00       	mov    $0x0,%eax
 3305430:	c9                   	leaveq 
 3305431:	c3                   	retq   

0000000003305432 <CheckAccessToHiddenBase>:
 3305432:	f3 0f 1e fa          	endbr64 
 3305436:	55                   	push   %rbp
 3305437:	48 89 e5             	mov    %rsp,%rbp
 330543a:	48 83 ec 10          	sub    $0x10,%rsp
 330543e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3305442:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 3305446:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330544a:	48 8b 80 30 86 00 00 	mov    0x8630(%rax),%rax
 3305451:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3305455:	72 26                	jb     330547d <CheckAccessToHiddenBase+0x4b>
 3305457:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330545b:	48 8b 90 30 86 00 00 	mov    0x8630(%rax),%rdx
 3305462:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305466:	48 8b 80 38 86 00 00 	mov    0x8638(%rax),%rax
 330546d:	48 01 d0             	add    %rdx,%rax
 3305470:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3305474:	77 07                	ja     330547d <CheckAccessToHiddenBase+0x4b>
 3305476:	b8 0a 00 00 00       	mov    $0xa,%eax
 330547b:	eb 05                	jmp    3305482 <CheckAccessToHiddenBase+0x50>
 330547d:	b8 00 00 00 00       	mov    $0x0,%eax
 3305482:	c9                   	leaveq 
 3305483:	c3                   	retq   

0000000003305484 <UpdateEptAccessPolicy>:
 3305484:	f3 0f 1e fa          	endbr64 
 3305488:	55                   	push   %rbp
 3305489:	48 89 e5             	mov    %rsp,%rbp
 330548c:	48 83 ec 30          	sub    $0x30,%rsp
 3305490:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3305494:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3305498:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 330549c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 33054a0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33054a4:	25 ff 0f 00 00       	and    $0xfff,%eax
 33054a9:	48 85 c0             	test   %rax,%rax
 33054ac:	75 0e                	jne    33054bc <UpdateEptAccessPolicy+0x38>
 33054ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33054b2:	25 ff 0f 00 00       	and    $0xfff,%eax
 33054b7:	48 85 c0             	test   %rax,%rax
 33054ba:	74 26                	je     33054e2 <UpdateEptAccessPolicy+0x5e>
 33054bc:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 33054c0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33054c4:	48 89 c6             	mov    %rax,%rsi
 33054c7:	48 8d 3d ca 16 00 00 	lea    0x16ca(%rip),%rdi        # 3306b98 <CopyMemoryToGuest+0x1031>
 33054ce:	b8 00 00 00 00       	mov    $0x0,%eax
 33054d3:	e8 73 cd ff ff       	callq  330224b <PrintDebugLevelDebug>
 33054d8:	b8 09 00 00 00       	mov    $0x9,%eax
 33054dd:	e9 d1 00 00 00       	jmpq   33055b3 <UpdateEptAccessPolicy+0x12f>
 33054e2:	48 83 7d d0 07       	cmpq   $0x7,-0x30(%rbp)
 33054e7:	76 22                	jbe    330550b <UpdateEptAccessPolicy+0x87>
 33054e9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33054ed:	48 89 c6             	mov    %rax,%rsi
 33054f0:	48 8d 3d d9 16 00 00 	lea    0x16d9(%rip),%rdi        # 3306bd0 <CopyMemoryToGuest+0x1069>
 33054f7:	b8 00 00 00 00       	mov    $0x0,%eax
 33054fc:	e8 4a cd ff ff       	callq  330224b <PrintDebugLevelDebug>
 3305501:	b8 0b 00 00 00       	mov    $0xb,%eax
 3305506:	e9 a8 00 00 00       	jmpq   33055b3 <UpdateEptAccessPolicy+0x12f>
 330550b:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 330550f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305513:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305517:	48 89 c6             	mov    %rax,%rsi
 330551a:	48 8d 3d e7 16 00 00 	lea    0x16e7(%rip),%rdi        # 3306c08 <CopyMemoryToGuest+0x10a1>
 3305521:	b8 00 00 00 00       	mov    $0x0,%eax
 3305526:	e8 20 cd ff ff       	callq  330224b <PrintDebugLevelDebug>
 330552b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330552f:	48 c1 e8 0c          	shr    $0xc,%rax
 3305533:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305537:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330553e:	00 
 330553f:	eb 52                	jmp    3305593 <UpdateEptAccessPolicy+0x10f>
 3305541:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305545:	48 c1 e8 0c          	shr    $0xc,%rax
 3305549:	48 89 c2             	mov    %rax,%rdx
 330554c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305550:	48 01 c2             	add    %rax,%rdx
 3305553:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305557:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 330555e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3305562:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
 3305566:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330556a:	48 89 d1             	mov    %rdx,%rcx
 330556d:	48 c1 e9 0c          	shr    $0xc,%rcx
 3305571:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3305575:	48 01 d1             	add    %rdx,%rcx
 3305578:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 330557c:	48 89 c2             	mov    %rax,%rdx
 330557f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305583:	48 81 c1 00 36 04 00 	add    $0x43600,%rcx
 330558a:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
 330558e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3305593:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305597:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
 330559b:	72 a4                	jb     3305541 <UpdateEptAccessPolicy+0xbd>
 330559d:	48 8d 3d a8 16 00 00 	lea    0x16a8(%rip),%rdi        # 3306c4c <CopyMemoryToGuest+0x10e5>
 33055a4:	b8 00 00 00 00       	mov    $0x0,%eax
 33055a9:	e8 9d cc ff ff       	callq  330224b <PrintDebugLevelDebug>
 33055ae:	b8 00 00 00 00       	mov    $0x0,%eax
 33055b3:	c9                   	leaveq 
 33055b4:	c3                   	retq   

00000000033055b5 <RegisterVmExitHandler>:
 33055b5:	f3 0f 1e fa          	endbr64 
 33055b9:	55                   	push   %rbp
 33055ba:	48 89 e5             	mov    %rsp,%rbp
 33055bd:	48 83 ec 18          	sub    $0x18,%rsp
 33055c1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33055c5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 33055c9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 33055cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33055d1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33055d5:	48 01 d0             	add    %rdx,%rax
 33055d8:	48 05 00 b8 21 02    	add    $0x221b800,%rax
 33055de:	c6 00 01             	movb   $0x1,(%rax)
 33055e1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33055e5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33055e9:	48 8d 8a 0c 37 44 00 	lea    0x44370c(%rdx),%rcx
 33055f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33055f4:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
 33055f9:	90                   	nop
 33055fa:	c9                   	leaveq 
 33055fb:	c3                   	retq   

00000000033055fc <SetupE820Hook>:
 33055fc:	f3 0f 1e fa          	endbr64 
 3305600:	55                   	push   %rbp
 3305601:	48 89 e5             	mov    %rsp,%rbp
 3305604:	48 83 ec 30          	sub    $0x30,%rsp
 3305608:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 330560c:	bf 00 00 00 00       	mov    $0x0,%edi
 3305611:	e8 3d d1 ff ff       	callq  3302753 <PhysicalToVirtual>
 3305616:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330561a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330561e:	48 83 c0 54          	add    $0x54,%rax
 3305622:	8b 00                	mov    (%rax),%eax
 3305624:	c1 e8 10             	shr    $0x10,%eax
 3305627:	89 c0                	mov    %eax,%eax
 3305629:	25 ff ff 00 00       	and    $0xffff,%eax
 330562e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305632:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305636:	48 83 c0 54          	add    $0x54,%rax
 330563a:	8b 00                	mov    (%rax),%eax
 330563c:	89 c0                	mov    %eax,%eax
 330563e:	25 ff ff 00 00       	and    $0xffff,%eax
 3305643:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305647:	66 c7 45 e5 0f 01    	movw   $0x10f,-0x1b(%rbp)
 330564d:	c6 45 e7 c1          	movb   $0xc1,-0x19(%rbp)
 3305651:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
 3305655:	ba 03 00 00 00       	mov    $0x3,%edx
 330565a:	48 89 c6             	mov    %rax,%rsi
 330565d:	bf fc ff 00 00       	mov    $0xfffc,%edi
 3305662:	e8 4a cd ff ff       	callq  33023b1 <CopyMemory>
 3305667:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330566b:	48 83 c0 54          	add    $0x54,%rax
 330566f:	c7 00 fc ff 00 00    	movl   $0xfffc,(%rax)
 3305675:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305679:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 330567d:	48 89 90 60 86 00 00 	mov    %rdx,0x8660(%rax)
 3305684:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305688:	48 c1 e0 04          	shl    $0x4,%rax
 330568c:	48 89 c2             	mov    %rax,%rdx
 330568f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305693:	48 89 90 58 86 00 00 	mov    %rdx,0x8658(%rax)
 330569a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330569e:	48 83 c0 54          	add    $0x54,%rax
 33056a2:	8b 00                	mov    (%rax),%eax
 33056a4:	3d fc ff 00 00       	cmp    $0xfffc,%eax
 33056a9:	74 07                	je     33056b2 <SetupE820Hook+0xb6>
 33056ab:	b8 16 00 00 00       	mov    $0x16,%eax
 33056b0:	eb 05                	jmp    33056b7 <SetupE820Hook+0xbb>
 33056b2:	b8 00 00 00 00       	mov    $0x0,%eax
 33056b7:	c9                   	leaveq 
 33056b8:	c3                   	retq   

00000000033056b9 <TranslateGuestVirtualToGuestPhysical>:
 33056b9:	f3 0f 1e fa          	endbr64 
 33056bd:	55                   	push   %rbp
 33056be:	48 89 e5             	mov    %rsp,%rbp
 33056c1:	48 83 ec 50          	sub    $0x50,%rsp
 33056c5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 33056c9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 33056cd:	bf 00 68 00 00       	mov    $0x6800,%edi
 33056d2:	e8 fc cf ff ff       	callq  33026d3 <vmread>
 33056d7:	83 e0 01             	and    $0x1,%eax
 33056da:	48 85 c0             	test   %rax,%rax
 33056dd:	75 13                	jne    33056f2 <TranslateGuestVirtualToGuestPhysical+0x39>
 33056df:	48 8d 3d 7a 15 00 00 	lea    0x157a(%rip),%rdi        # 3306c60 <CopyMemoryToGuest+0x10f9>
 33056e6:	b8 00 00 00 00       	mov    $0x0,%eax
 33056eb:	e8 b5 ca ff ff       	callq  33021a5 <Print>
 33056f0:	eb fe                	jmp    33056f0 <TranslateGuestVirtualToGuestPhysical+0x37>
 33056f2:	bf 00 68 00 00       	mov    $0x6800,%edi
 33056f7:	e8 d7 cf ff ff       	callq  33026d3 <vmread>
 33056fc:	48 25 00 00 00 80    	and    $0xffffffff80000000,%rax
 3305702:	48 85 c0             	test   %rax,%rax
 3305705:	75 13                	jne    330571a <TranslateGuestVirtualToGuestPhysical+0x61>
 3305707:	48 8d 3d e2 15 00 00 	lea    0x15e2(%rip),%rdi        # 3306cf0 <CopyMemoryToGuest+0x1189>
 330570e:	b8 00 00 00 00       	mov    $0x0,%eax
 3305713:	e8 8d ca ff ff       	callq  33021a5 <Print>
 3305718:	eb fe                	jmp    3305718 <TranslateGuestVirtualToGuestPhysical+0x5f>
 330571a:	bf 04 68 00 00       	mov    $0x6804,%edi
 330571f:	e8 af cf ff ff       	callq  33026d3 <vmread>
 3305724:	83 e0 20             	and    $0x20,%eax
 3305727:	48 85 c0             	test   %rax,%rax
 330572a:	75 13                	jne    330573f <TranslateGuestVirtualToGuestPhysical+0x86>
 330572c:	48 8d 3d 4d 16 00 00 	lea    0x164d(%rip),%rdi        # 3306d80 <CopyMemoryToGuest+0x1219>
 3305733:	b8 00 00 00 00       	mov    $0x0,%eax
 3305738:	e8 68 ca ff ff       	callq  33021a5 <Print>
 330573d:	eb fe                	jmp    330573d <TranslateGuestVirtualToGuestPhysical+0x84>
 330573f:	bf 02 68 00 00       	mov    $0x6802,%edi
 3305744:	e8 8a cf ff ff       	callq  33026d3 <vmread>
 3305749:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330574d:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
 3305754:	ff 00 00 
 3305757:	48 23 45 b8          	and    -0x48(%rbp),%rax
 330575b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 330575f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
 3305766:	ff 00 00 
 3305769:	48 23 45 f0          	and    -0x10(%rbp),%rax
 330576d:	0f b7 55 cc          	movzwl -0x34(%rbp),%edx
 3305771:	66 c1 ea 07          	shr    $0x7,%dx
 3305775:	0f b7 d2             	movzwl %dx,%edx
 3305778:	48 c1 e2 03          	shl    $0x3,%rdx
 330577c:	48 01 d0             	add    %rdx,%rax
 330577f:	48 89 c7             	mov    %rax,%rdi
 3305782:	e8 74 02 00 00       	callq  33059fb <TranslateGuestPhysicalToHostVirtual>
 3305787:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 330578b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330578f:	0f b6 00             	movzbl (%rax),%eax
 3305792:	83 e0 01             	and    $0x1,%eax
 3305795:	84 c0                	test   %al,%al
 3305797:	75 0a                	jne    33057a3 <TranslateGuestVirtualToGuestPhysical+0xea>
 3305799:	b8 0f 00 00 00       	mov    $0xf,%eax
 330579e:	e9 e4 01 00 00       	jmpq   3305987 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 33057a3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33057a7:	48 8b 00             	mov    (%rax),%rax
 33057aa:	48 c1 e8 0c          	shr    $0xc,%rax
 33057ae:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33057b5:	00 00 00 
 33057b8:	48 21 d0             	and    %rdx,%rax
 33057bb:	48 c1 e0 0c          	shl    $0xc,%rax
 33057bf:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33057c6:	00 00 00 
 33057c9:	48 21 d0             	and    %rdx,%rax
 33057cc:	48 89 c2             	mov    %rax,%rdx
 33057cf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33057d3:	48 c1 e8 1e          	shr    $0x1e,%rax
 33057d7:	66 25 ff 01          	and    $0x1ff,%ax
 33057db:	0f b7 c0             	movzwl %ax,%eax
 33057de:	48 c1 e0 03          	shl    $0x3,%rax
 33057e2:	48 01 d0             	add    %rdx,%rax
 33057e5:	48 89 c7             	mov    %rax,%rdi
 33057e8:	e8 0e 02 00 00       	callq  33059fb <TranslateGuestPhysicalToHostVirtual>
 33057ed:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33057f1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33057f5:	0f b6 00             	movzbl (%rax),%eax
 33057f8:	83 e0 01             	and    $0x1,%eax
 33057fb:	84 c0                	test   %al,%al
 33057fd:	75 0a                	jne    3305809 <TranslateGuestVirtualToGuestPhysical+0x150>
 33057ff:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305804:	e9 7e 01 00 00       	jmpq   3305987 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 3305809:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330580d:	48 8b 00             	mov    (%rax),%rax
 3305810:	48 c1 e8 0c          	shr    $0xc,%rax
 3305814:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330581b:	00 00 00 
 330581e:	48 21 d0             	and    %rdx,%rax
 3305821:	48 c1 e0 0c          	shl    $0xc,%rax
 3305825:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330582c:	00 00 00 
 330582f:	48 21 d0             	and    %rdx,%rax
 3305832:	48 89 c2             	mov    %rax,%rdx
 3305835:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 3305839:	66 c1 e8 05          	shr    $0x5,%ax
 330583d:	66 25 ff 01          	and    $0x1ff,%ax
 3305841:	0f b7 c0             	movzwl %ax,%eax
 3305844:	48 c1 e0 03          	shl    $0x3,%rax
 3305848:	48 01 d0             	add    %rdx,%rax
 330584b:	48 89 c7             	mov    %rax,%rdi
 330584e:	e8 a8 01 00 00       	callq  33059fb <TranslateGuestPhysicalToHostVirtual>
 3305853:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3305857:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330585b:	0f b6 00             	movzbl (%rax),%eax
 330585e:	83 e0 01             	and    $0x1,%eax
 3305861:	84 c0                	test   %al,%al
 3305863:	75 0a                	jne    330586f <TranslateGuestVirtualToGuestPhysical+0x1b6>
 3305865:	b8 0f 00 00 00       	mov    $0xf,%eax
 330586a:	e9 18 01 00 00       	jmpq   3305987 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 330586f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305873:	0f b6 00             	movzbl (%rax),%eax
 3305876:	83 e0 80             	and    $0xffffff80,%eax
 3305879:	84 c0                	test   %al,%al
 330587b:	74 41                	je     33058be <TranslateGuestVirtualToGuestPhysical+0x205>
 330587d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305881:	48 8b 00             	mov    (%rax),%rax
 3305884:	48 c1 e8 0c          	shr    $0xc,%rax
 3305888:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330588f:	00 00 00 
 3305892:	48 21 d0             	and    %rdx,%rax
 3305895:	48 c1 e0 0c          	shl    $0xc,%rax
 3305899:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33058a0:	00 00 00 
 33058a3:	48 21 d0             	and    %rdx,%rax
 33058a6:	48 89 c2             	mov    %rax,%rdx
 33058a9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 33058ad:	25 ff ff 1f 00       	and    $0x1fffff,%eax
 33058b2:	48 01 d0             	add    %rdx,%rax
 33058b5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33058b9:	e9 b9 00 00 00       	jmpq   3305977 <TranslateGuestVirtualToGuestPhysical+0x2be>
 33058be:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33058c2:	48 8b 00             	mov    (%rax),%rax
 33058c5:	48 c1 e8 0c          	shr    $0xc,%rax
 33058c9:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33058d0:	00 00 00 
 33058d3:	48 21 d0             	and    %rdx,%rax
 33058d6:	48 c1 e0 0c          	shl    $0xc,%rax
 33058da:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33058e1:	00 00 00 
 33058e4:	48 21 d0             	and    %rdx,%rax
 33058e7:	48 89 c2             	mov    %rax,%rdx
 33058ea:	8b 45 c8             	mov    -0x38(%rbp),%eax
 33058ed:	c1 e8 0c             	shr    $0xc,%eax
 33058f0:	66 25 ff 01          	and    $0x1ff,%ax
 33058f4:	0f b7 c0             	movzwl %ax,%eax
 33058f7:	48 c1 e0 03          	shl    $0x3,%rax
 33058fb:	48 01 d0             	add    %rdx,%rax
 33058fe:	48 89 c7             	mov    %rax,%rdi
 3305901:	e8 f5 00 00 00       	callq  33059fb <TranslateGuestPhysicalToHostVirtual>
 3305906:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 330590a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 330590e:	0f b6 00             	movzbl (%rax),%eax
 3305911:	83 e0 01             	and    $0x1,%eax
 3305914:	84 c0                	test   %al,%al
 3305916:	75 07                	jne    330591f <TranslateGuestVirtualToGuestPhysical+0x266>
 3305918:	b8 0f 00 00 00       	mov    $0xf,%eax
 330591d:	eb 68                	jmp    3305987 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 330591f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305923:	48 8b 00             	mov    (%rax),%rax
 3305926:	48 c1 e8 0c          	shr    $0xc,%rax
 330592a:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 3305931:	00 00 00 
 3305934:	48 21 d0             	and    %rdx,%rax
 3305937:	48 c1 e0 0c          	shl    $0xc,%rax
 330593b:	48 89 c2             	mov    %rax,%rdx
 330593e:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
 3305945:	00 00 00 
 3305948:	48 21 c2             	and    %rax,%rdx
 330594b:	0f b7 45 c8          	movzwl -0x38(%rbp),%eax
 330594f:	66 25 ff 0f          	and    $0xfff,%ax
 3305953:	0f b7 c0             	movzwl %ax,%eax
 3305956:	48 b9 ff ff ff ff 0f 	movabs $0xfffffffff,%rcx
 330595d:	00 00 00 
 3305960:	48 21 c8             	and    %rcx,%rax
 3305963:	48 01 d0             	add    %rdx,%rax
 3305966:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330596d:	00 00 00 
 3305970:	48 21 d0             	and    %rdx,%rax
 3305973:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3305977:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 330597b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330597f:	48 89 10             	mov    %rdx,(%rax)
 3305982:	b8 00 00 00 00       	mov    $0x0,%eax
 3305987:	c9                   	leaveq 
 3305988:	c3                   	retq   

0000000003305989 <TranslateGuestPhysicalToPhysicalAddress>:
 3305989:	f3 0f 1e fa          	endbr64 
 330598d:	55                   	push   %rbp
 330598e:	48 89 e5             	mov    %rsp,%rbp
 3305991:	48 83 ec 10          	sub    $0x10,%rsp
 3305995:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3305999:	48 b8 ff 0f 00 00 04 	movabs $0x400000fff,%rax
 33059a0:	00 00 00 
 33059a3:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 33059a7:	76 13                	jbe    33059bc <TranslateGuestPhysicalToPhysicalAddress+0x33>
 33059a9:	48 8d 3d 60 14 00 00 	lea    0x1460(%rip),%rdi        # 3306e10 <CopyMemoryToGuest+0x12a9>
 33059b0:	b8 00 00 00 00       	mov    $0x0,%eax
 33059b5:	e8 eb c7 ff ff       	callq  33021a5 <Print>
 33059ba:	eb fe                	jmp    33059ba <TranslateGuestPhysicalToPhysicalAddress+0x31>
 33059bc:	b8 00 00 00 00       	mov    $0x0,%eax
 33059c1:	e8 fe f8 ff ff       	callq  33052c4 <GetVMMStruct>
 33059c6:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33059cd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33059d1:	48 c1 ea 0c          	shr    $0xc,%rdx
 33059d5:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 33059dc:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 33059e0:	48 ba 00 f0 ff ff ff 	movabs $0xfffffffff000,%rdx
 33059e7:	ff 00 00 
 33059ea:	48 21 c2             	and    %rax,%rdx
 33059ed:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33059f1:	25 ff 0f 00 00       	and    $0xfff,%eax
 33059f6:	48 01 d0             	add    %rdx,%rax
 33059f9:	c9                   	leaveq 
 33059fa:	c3                   	retq   

00000000033059fb <TranslateGuestPhysicalToHostVirtual>:
 33059fb:	f3 0f 1e fa          	endbr64 
 33059ff:	55                   	push   %rbp
 3305a00:	48 89 e5             	mov    %rsp,%rbp
 3305a03:	48 83 ec 10          	sub    $0x10,%rsp
 3305a07:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3305a0b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305a0f:	48 89 c7             	mov    %rax,%rdi
 3305a12:	e8 72 ff ff ff       	callq  3305989 <TranslateGuestPhysicalToPhysicalAddress>
 3305a17:	48 89 c7             	mov    %rax,%rdi
 3305a1a:	e8 34 cd ff ff       	callq  3302753 <PhysicalToVirtual>
 3305a1f:	c9                   	leaveq 
 3305a20:	c3                   	retq   

0000000003305a21 <TranslateGuestVirtualToHostVirtual>:
 3305a21:	f3 0f 1e fa          	endbr64 
 3305a25:	55                   	push   %rbp
 3305a26:	48 89 e5             	mov    %rsp,%rbp
 3305a29:	48 83 ec 20          	sub    $0x20,%rsp
 3305a2d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3305a31:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3305a35:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
 3305a39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305a3d:	48 89 d6             	mov    %rdx,%rsi
 3305a40:	48 89 c7             	mov    %rax,%rdi
 3305a43:	e8 71 fc ff ff       	callq  33056b9 <TranslateGuestVirtualToGuestPhysical>
 3305a48:	48 85 c0             	test   %rax,%rax
 3305a4b:	74 07                	je     3305a54 <TranslateGuestVirtualToHostVirtual+0x33>
 3305a4d:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305a52:	eb 18                	jmp    3305a6c <TranslateGuestVirtualToHostVirtual+0x4b>
 3305a54:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305a58:	48 89 c7             	mov    %rax,%rdi
 3305a5b:	e8 9b ff ff ff       	callq  33059fb <TranslateGuestPhysicalToHostVirtual>
 3305a60:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3305a64:	48 89 02             	mov    %rax,(%rdx)
 3305a67:	b8 00 00 00 00       	mov    $0x0,%eax
 3305a6c:	c9                   	leaveq 
 3305a6d:	c3                   	retq   

0000000003305a6e <CopyGuestMemory>:
 3305a6e:	f3 0f 1e fa          	endbr64 
 3305a72:	55                   	push   %rbp
 3305a73:	48 89 e5             	mov    %rsp,%rbp
 3305a76:	48 83 ec 40          	sub    $0x40,%rsp
 3305a7a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3305a7e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305a82:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3305a86:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305a8d:	00 
 3305a8e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3305a95:	00 
 3305a96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305a9a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305a9e:	48 01 c2             	add    %rax,%rdx
 3305aa1:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 3305aa5:	48 89 c6             	mov    %rax,%rsi
 3305aa8:	48 89 d7             	mov    %rdx,%rdi
 3305aab:	e8 71 ff ff ff       	callq  3305a21 <TranslateGuestVirtualToHostVirtual>
 3305ab0:	48 85 c0             	test   %rax,%rax
 3305ab3:	74 0a                	je     3305abf <CopyGuestMemory+0x51>
 3305ab5:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305aba:	e9 a6 00 00 00       	jmpq   3305b65 <CopyGuestMemory+0xf7>
 3305abf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305ac3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305ac7:	48 01 d0             	add    %rdx,%rax
 3305aca:	25 ff 0f 00 00       	and    $0xfff,%eax
 3305acf:	48 85 c0             	test   %rax,%rax
 3305ad2:	74 1d                	je     3305af1 <CopyGuestMemory+0x83>
 3305ad4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305ad8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305adc:	48 01 d0             	add    %rdx,%rax
 3305adf:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305ae5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3305aeb:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
 3305aef:	eb 05                	jmp    3305af6 <CopyGuestMemory+0x88>
 3305af1:	b8 00 10 00 00       	mov    $0x1000,%eax
 3305af6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305afa:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305afe:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 3305b02:	77 22                	ja     3305b26 <CopyGuestMemory+0xb8>
 3305b04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305b08:	48 89 c1             	mov    %rax,%rcx
 3305b0b:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305b0f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305b13:	48 89 ce             	mov    %rcx,%rsi
 3305b16:	48 89 c7             	mov    %rax,%rdi
 3305b19:	e8 93 c8 ff ff       	callq  33023b1 <CopyMemory>
 3305b1e:	90                   	nop
 3305b1f:	b8 00 00 00 00       	mov    $0x0,%eax
 3305b24:	eb 3f                	jmp    3305b65 <CopyGuestMemory+0xf7>
 3305b26:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305b2a:	48 89 c1             	mov    %rax,%rcx
 3305b2d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305b31:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305b35:	48 89 ce             	mov    %rcx,%rsi
 3305b38:	48 89 c7             	mov    %rax,%rdi
 3305b3b:	e8 71 c8 ff ff       	callq  33023b1 <CopyMemory>
 3305b40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b44:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305b48:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b4c:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 3305b50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b54:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
 3305b58:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305b5c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3305b60:	e9 31 ff ff ff       	jmpq   3305a96 <CopyGuestMemory+0x28>
 3305b65:	c9                   	leaveq 
 3305b66:	c3                   	retq   

0000000003305b67 <CopyMemoryToGuest>:
 3305b67:	f3 0f 1e fa          	endbr64 
 3305b6b:	55                   	push   %rbp
 3305b6c:	48 89 e5             	mov    %rsp,%rbp
 3305b6f:	48 83 ec 40          	sub    $0x40,%rsp
 3305b73:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3305b77:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305b7b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3305b7f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305b86:	00 
 3305b87:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3305b8e:	00 
 3305b8f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305b93:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305b97:	48 01 c2             	add    %rax,%rdx
 3305b9a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 3305b9e:	48 89 c6             	mov    %rax,%rsi
 3305ba1:	48 89 d7             	mov    %rdx,%rdi
 3305ba4:	e8 78 fe ff ff       	callq  3305a21 <TranslateGuestVirtualToHostVirtual>
 3305ba9:	48 85 c0             	test   %rax,%rax
 3305bac:	74 0a                	je     3305bb8 <CopyMemoryToGuest+0x51>
 3305bae:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305bb3:	e9 a6 00 00 00       	jmpq   3305c5e <CopyMemoryToGuest+0xf7>
 3305bb8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305bbc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305bc0:	48 01 d0             	add    %rdx,%rax
 3305bc3:	25 ff 0f 00 00       	and    $0xfff,%eax
 3305bc8:	48 85 c0             	test   %rax,%rax
 3305bcb:	74 1d                	je     3305bea <CopyMemoryToGuest+0x83>
 3305bcd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305bd1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305bd5:	48 01 d0             	add    %rdx,%rax
 3305bd8:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305bde:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3305be4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
 3305be8:	eb 05                	jmp    3305bef <CopyMemoryToGuest+0x88>
 3305bea:	b8 00 10 00 00       	mov    $0x1000,%eax
 3305bef:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305bf3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305bf7:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 3305bfb:	77 22                	ja     3305c1f <CopyMemoryToGuest+0xb8>
 3305bfd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305c01:	48 89 c1             	mov    %rax,%rcx
 3305c04:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305c08:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305c0c:	48 89 c6             	mov    %rax,%rsi
 3305c0f:	48 89 cf             	mov    %rcx,%rdi
 3305c12:	e8 9a c7 ff ff       	callq  33023b1 <CopyMemory>
 3305c17:	90                   	nop
 3305c18:	b8 00 00 00 00       	mov    $0x0,%eax
 3305c1d:	eb 3f                	jmp    3305c5e <CopyMemoryToGuest+0xf7>
 3305c1f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305c23:	48 89 c1             	mov    %rax,%rcx
 3305c26:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305c2a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305c2e:	48 89 c6             	mov    %rax,%rsi
 3305c31:	48 89 cf             	mov    %rcx,%rdi
 3305c34:	e8 78 c7 ff ff       	callq  33023b1 <CopyMemory>
 3305c39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c3d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305c41:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c45:	48 01 45 d0          	add    %rax,-0x30(%rbp)
 3305c49:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c4d:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
 3305c51:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305c55:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3305c59:	e9 31 ff ff ff       	jmpq   3305b8f <CopyMemoryToGuest+0x28>
 3305c5e:	c9                   	leaveq 
 3305c5f:	c3                   	retq   
