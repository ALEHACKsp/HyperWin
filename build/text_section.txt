
hypervisor.so:     file format elf64-x86-64


Disassembly of section .text:

0000000003300000 <multiboot2_header_start>:
 3300000:	d6                   	(bad)  
 3300001:	50                   	push   %rax
 3300002:	52                   	push   %rdx
 3300003:	e8 00 00 00 00       	callq  3300008 <multiboot2_header_start+0x8>
 3300008:	3e 00 00             	add    %al,%ds:(%rax)
 330000b:	00 ec                	add    %ch,%ah
 330000d:	ae                   	scas   %es:(%rdi),%al
 330000e:	ad                   	lods   %ds:(%rsi),%eax
 330000f:	17                   	(bad)  

0000000003300010 <multiboot2_address_tag_start>:
 3300010:	02 00                	add    (%rax),%al
 3300012:	00 00                	add    %al,(%rax)
 3300014:	18 00                	sbb    %al,(%rax)
 3300016:	00 00                	add    %al,(%rax)
 3300018:	00 00                	add    %al,(%rax)
 330001a:	30 03                	xor    %al,(%rbx)
 330001c:	ff                   	(bad)  
 330001d:	ff                   	(bad)  
 330001e:	ff                   	(bad)  
 330001f:	ff 00                	incl   (%rax)
 3300021:	00 00                	add    %al,(%rax)
 3300023:	00 00                	add    %al,(%rax)
 3300025:	00 00                	add    %al,(%rax)
	...

0000000003300028 <multiboot2_address_tag_end>:
 3300028:	03 00                	add    (%rax),%eax
 330002a:	00 00                	add    %al,(%rax)
 330002c:	0c 00                	or     $0x0,%al
 330002e:	00 00                	add    %al,(%rax)
 3300030:	3e 00 30             	add    %dh,%ds:(%rax)
 3300033:	03                   	.byte 0x3

0000000003300034 <multiboot2_entry_address_tag_end>:
	...
 330003c:	08 00                	or     %al,(%rax)

000000000330003e <_start>:
 330003e:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300043:	c7 00 03 80 01 00    	movl   $0x18003,(%rax)
 3300049:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 3300050:	b8 00 90 01 00       	mov    $0x19000,%eax
 3300055:	bf 00 80 01 00       	mov    $0x18000,%edi
 330005a:	b9 10 00 00 00       	mov    $0x10,%ecx

000000000330005f <_start.setup_pdpt>:
 330005f:	89 c2                	mov    %eax,%edx
 3300061:	83 ca 03             	or     $0x3,%edx
 3300064:	89 17                	mov    %edx,(%rdi)
 3300066:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
 330006d:	05 00 10 00 00       	add    $0x1000,%eax
 3300072:	83 c7 08             	add    $0x8,%edi
 3300075:	e2 e8                	loop   330005f <_start.setup_pdpt>
 3300077:	b9 03 00 00 00       	mov    $0x3,%ecx
 330007c:	c1 e1 09             	shl    $0x9,%ecx
 330007f:	31 c0                	xor    %eax,%eax
 3300081:	bb 83 00 00 00       	mov    $0x83,%ebx
 3300086:	bf 00 90 01 00       	mov    $0x19000,%edi

000000000330008b <_start.setup_pds>:
 330008b:	09 d8                	or     %ebx,%eax
 330008d:	89 07                	mov    %eax,(%rdi)
 330008f:	c7 47 04 00 00 00 00 	movl   $0x0,0x4(%rdi)
 3300096:	83 c7 08             	add    $0x8,%edi
 3300099:	05 00 00 20 00       	add    $0x200000,%eax
 330009e:	e2 eb                	loop   330008b <_start.setup_pds>
 33000a0:	b8 00 10 00 00       	mov    $0x1000,%eax
 33000a5:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 33000aa:	b8 02 10 00 00       	mov    $0x1002,%eax
 33000af:	c7 00 00 20 00 00    	movl   $0x2000,(%rax)
 33000b5:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 33000bc:	b8 00 20 00 00       	mov    $0x2000,%eax
 33000c1:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 33000c7:	c7 40 04 00 00 00 00 	movl   $0x0,0x4(%rax)
 33000ce:	b8 08 20 00 00       	mov    $0x2008,%eax
 33000d3:	c7 00 00 00 00 00    	movl   $0x0,(%rax)
 33000d9:	c7 40 04 00 9b a0 00 	movl   $0xa09b00,0x4(%rax)
 33000e0:	b8 10 20 00 00       	mov    $0x2010,%eax
 33000e5:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 33000eb:	c7 40 04 00 93 cf 00 	movl   $0xcf9300,0x4(%rax)
 33000f2:	b8 18 20 00 00       	mov    $0x2018,%eax
 33000f7:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 33000fd:	c7 40 04 00 9a cf 00 	movl   $0xcf9a00,0x4(%rax)
 3300104:	b8 20 20 00 00       	mov    $0x2020,%eax
 3300109:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 330010f:	c7 40 04 00 9a 00 00 	movl   $0x9a00,0x4(%rax)
 3300116:	b8 28 20 00 00       	mov    $0x2028,%eax
 330011b:	c7 00 ff ff 00 00    	movl   $0xffff,(%rax)
 3300121:	c7 40 04 00 92 00 00 	movl   $0x9200,0x4(%rax)
 3300128:	0f 01 15 00 10 00 00 	lgdt   0x1000(%rip)        # 330112f <InitializeHypervisorsSharedData+0x133>
 330012f:	0f 20 c0             	mov    %cr0,%rax
 3300132:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 3300137:	0f 22 c0             	mov    %rax,%cr0
 330013a:	0f 20 e0             	mov    %cr4,%rax
 330013d:	83 c8 20             	or     $0x20,%eax
 3300140:	0f 22 e0             	mov    %rax,%cr4
 3300143:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300148:	0f 22 d8             	mov    %rax,%cr3
 330014b:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300150:	0f 32                	rdmsr  
 3300152:	0d 00 01 00 00       	or     $0x100,%eax
 3300157:	0f 30                	wrmsr  
 3300159:	0f 20 c0             	mov    %cr0,%rax
 330015c:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300161:	0f 22 c0             	mov    %rax,%cr0
 3300164:	ea                   	(bad)  
 3300165:	6b 01 30             	imul   $0x30,(%rcx),%eax
 3300168:	03 08                	add    (%rax),%ecx
	...

000000000330016b <CompatibilityTo64>:
 330016b:	fa                   	cli    
 330016c:	66 b8 10 00          	mov    $0x10,%ax
 3300170:	8e d0                	mov    %eax,%ss
 3300172:	8e c0                	mov    %eax,%es
 3300174:	8e d8                	mov    %eax,%ds
 3300176:	8e e0                	mov    %eax,%fs
 3300178:	8e e8                	mov    %eax,%gs
 330017a:	b9 10 00 00 00       	mov    $0x10,%ecx
 330017f:	48 c1 e1 09          	shl    $0x9,%rcx
 3300183:	48 31 c0             	xor    %rax,%rax
 3300186:	48 0d 83 00 00 00    	or     $0x83,%rax
 330018c:	bf 00 90 01 00       	mov    $0x19000,%edi

0000000003300191 <CompatibilityTo64.setup_pds_long_mode>:
 3300191:	48 89 07             	mov    %rax,(%rdi)
 3300194:	48 83 c7 08          	add    $0x8,%rdi
 3300198:	48 05 00 00 20 00    	add    $0x200000,%rax
 330019e:	e2 f1                	loop   3300191 <CompatibilityTo64.setup_pds_long_mode>
 33001a0:	bc 00 00 80 02       	mov    $0x2800000,%esp
 33001a5:	e8 e9 0d 00 00       	callq  3300f93 <Initialize>
 33001aa:	6a 10                	pushq  $0x10
 33001ac:	b8 f0 5f 02 00       	mov    $0x25ff0,%eax
 33001b1:	50                   	push   %rax
 33001b2:	9c                   	pushfq 
 33001b3:	6a 18                	pushq  $0x18
 33001b5:	68 00 42 00 00       	pushq  $0x4200
 33001ba:	48 cf                	iretq  

00000000033001bc <SetupSystemAndHandleControlToBios>:
 33001bc:	fa                   	cli    
 33001bd:	b8 00 75 00 00       	mov    $0x7500,%eax
 33001c2:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 33001c7:	c7 40 02 00 00 00 00 	movl   $0x0,0x2(%rax)
 33001ce:	c7 40 06 00 00 00 00 	movl   $0x0,0x6(%rax)
 33001d5:	0f 01 1d 00 75 00 00 	lidt   0x7500(%rip)        # 33076dc <functionsEnd+0x80c>
 33001dc:	ea                   	(bad)  
 33001dd:	27                   	(bad)  
 33001de:	42 00 00             	rex.X add %al,(%rax)
 33001e1:	20 00                	and    %al,(%rax)

00000000033001e3 <SetupRealMode>:
 33001e3:	b8 28 00 8e d0       	mov    $0xd08e0028,%eax
 33001e8:	8e c0                	mov    %eax,%es
 33001ea:	8e d8                	mov    %eax,%ds
 33001ec:	8e e0                	mov    %eax,%fs
 33001ee:	8e e8                	mov    %eax,%gs
 33001f0:	0f 20 c0             	mov    %cr0,%rax
 33001f3:	66 25 fe ff          	and    $0xfffe,%ax
 33001f7:	ff                   	(bad)  
 33001f8:	7f 0f                	jg     3300209 <SetupRealMode+0x26>
 33001fa:	22 c0                	and    %al,%al
 33001fc:	0f 20 e0             	mov    %cr4,%rax
 33001ff:	66 83 e0 df          	and    $0xffdf,%ax
 3300203:	0f 22 e0             	mov    %rax,%cr4
 3300206:	66 b9 80 00          	mov    $0x80,%cx
 330020a:	00 c0                	add    %al,%al
 330020c:	0f 32                	rdmsr  
 330020e:	66 25 ff fe          	and    $0xfeff,%ax
 3300212:	ff                   	(bad)  
 3300213:	ff 0f                	decl   (%rdi)
 3300215:	30 ea                	xor    %ch,%dl
 3300217:	5f                   	pop    %rdi
 3300218:	42 00 00             	rex.X add %al,(%rax)

000000000330021b <HandleControlToBios>:
 330021b:	8a 16                	mov    (%rsi),%dl
 330021d:	10 60 b8             	adc    %ah,-0x48(%rax)
 3300220:	00 00                	add    %al,(%rax)
 3300222:	8e d8                	mov    %eax,%ds
 3300224:	8e c0                	mov    %eax,%es
 3300226:	8e d0                	mov    %eax,%ss
 3300228:	8e e0                	mov    %eax,%fs
 330022a:	8e e8                	mov    %eax,%gs
 330022c:	66 b8 44 33          	mov    $0x3344,%ax
 3300230:	22 11                	and    (%rcx),%dl
 3300232:	0f 01 c1             	vmcall 

0000000003300235 <SetupSystemAndHandleControlToBiosEnd>:
 3300235:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 330023c:	00 00 00 
 330023f:	90                   	nop

0000000003300240 <AsmEnterRealModeRunFunction>:
 3300240:	55                   	push   %rbp
 3300241:	54                   	push   %rsp
 3300242:	48 89 24 25 00 60 00 	mov    %rsp,0x6000
 3300249:	00 
 330024a:	6a 10                	pushq  $0x10
 330024c:	b8 f0 5f 02 00       	mov    $0x25ff0,%eax
 3300251:	50                   	push   %rax
 3300252:	9c                   	pushfq 
 3300253:	6a 18                	pushq  $0x18
 3300255:	68 00 42 00 00       	pushq  $0x4200
 330025a:	48 cf                	iretq  

000000000330025c <AsmReturnFromRealModeFunction>:
 330025c:	fa                   	cli    
 330025d:	66 b8 10 00          	mov    $0x10,%ax
 3300261:	8e d8                	mov    %eax,%ds
 3300263:	8e d0                	mov    %eax,%ss
 3300265:	8e c0                	mov    %eax,%es
 3300267:	8e e0                	mov    %eax,%fs
 3300269:	8e e8                	mov    %eax,%gs
 330026b:	48 8b 24 25 00 60 00 	mov    0x6000,%rsp
 3300272:	00 
 3300273:	5c                   	pop    %rsp
 3300274:	5d                   	pop    %rbp
 3300275:	c3                   	retq   

0000000003300276 <EnterRealMode>:
 3300276:	fa                   	cli    
 3300277:	b8 00 75 00 00       	mov    $0x7500,%eax
 330027c:	66 c7 00 ff 00       	movw   $0xff,(%rax)
 3300281:	c7 40 02 00 00 00 00 	movl   $0x0,0x2(%rax)
 3300288:	c7 40 06 00 00 00 00 	movl   $0x0,0x6(%rax)
 330028f:	0f 01 1d 00 75 00 00 	lidt   0x7500(%rip)        # 3307796 <functionsEnd+0x8c6>
 3300296:	ea                   	(bad)  
 3300297:	27                   	(bad)  
 3300298:	42 00 00             	rex.X add %al,(%rax)
 330029b:	20 00                	and    %al,(%rax)

000000000330029d <DisableLongMode>:
 330029d:	b8 28 00 8e d0       	mov    $0xd08e0028,%eax
 33002a2:	8e c0                	mov    %eax,%es
 33002a4:	8e d8                	mov    %eax,%ds
 33002a6:	8e e0                	mov    %eax,%fs
 33002a8:	8e e8                	mov    %eax,%gs
 33002aa:	0f 20 c0             	mov    %cr0,%rax
 33002ad:	66 25 fe ff          	and    $0xfffe,%ax
 33002b1:	ff                   	(bad)  
 33002b2:	7f 0f                	jg     33002c3 <DisableLongMode+0x26>
 33002b4:	22 c0                	and    %al,%al
 33002b6:	0f 20 e0             	mov    %cr4,%rax
 33002b9:	66 83 e0 df          	and    $0xffdf,%ax
 33002bd:	0f 22 e0             	mov    %rax,%cr4
 33002c0:	66 b9 80 00          	mov    $0x80,%cx
 33002c4:	00 c0                	add    %al,%al
 33002c6:	0f 32                	rdmsr  
 33002c8:	66 25 ff fe          	and    $0xfeff,%ax
 33002cc:	ff                   	(bad)  
 33002cd:	ff 0f                	decl   (%rdi)
 33002cf:	30 ea                	xor    %ch,%dl
 33002d1:	cc                   	int3   
 33002d2:	42 00 00             	rex.X add %al,(%rax)

00000000033002d5 <BackToLongMode>:
 33002d5:	fa                   	cli    
 33002d6:	0f 01 16             	lgdt   (%rsi)
 33002d9:	00 10                	add    %dl,(%rax)
 33002db:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 33002e0:	8e d8                	mov    %eax,%ds
 33002e2:	8e c0                	mov    %eax,%es
 33002e4:	8e e0                	mov    %eax,%fs
 33002e6:	8e e8                	mov    %eax,%gs
 33002e8:	0f 20 c0             	mov    %cr0,%rax
 33002eb:	66 83 c8 01          	or     $0x1,%ax
 33002ef:	0f 22 c0             	mov    %rax,%cr0
 33002f2:	ea                   	(bad)  
 33002f3:	81                   	.byte 0x81
 33002f4:	42 18 00             	rex.X sbb %al,(%rax)

00000000033002f7 <EnableProtectedMode>:
 33002f7:	fa                   	cli    
 33002f8:	66 b8 10 00          	mov    $0x10,%ax
 33002fc:	8e d0                	mov    %eax,%ss
 33002fe:	8e d8                	mov    %eax,%ds
 3300300:	8e c0                	mov    %eax,%es
 3300302:	8e e8                	mov    %eax,%gs
 3300304:	8e e0                	mov    %eax,%fs
 3300306:	0f 20 c0             	mov    %cr0,%rax
 3300309:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 330030e:	0f 22 c0             	mov    %rax,%cr0
 3300311:	0f 20 e0             	mov    %cr4,%rax
 3300314:	83 c8 20             	or     $0x20,%eax
 3300317:	0f 22 e0             	mov    %rax,%cr4
 330031a:	b8 00 70 01 00       	mov    $0x17000,%eax
 330031f:	0f 22 d8             	mov    %rax,%cr3
 3300322:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300327:	0f 32                	rdmsr  
 3300329:	0d 00 01 00 00       	or     $0x100,%eax
 330032e:	0f 30                	wrmsr  
 3300330:	0f 20 c0             	mov    %cr0,%rax
 3300333:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300338:	0f 22 c0             	mov    %rax,%cr0
 330033b:	ea                   	(bad)  
 330033c:	5c                   	pop    %rsp
 330033d:	02 30                	add    (%rax),%dh
 330033f:	03 08                	add    (%rax),%ecx
	...

0000000003300342 <DiskReader>:
 3300342:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 3300347:	8e c0                	mov    %eax,%es
 3300349:	8e d8                	mov    %eax,%ds
 330034b:	8e e0                	mov    %eax,%fs
 330034d:	8e e8                	mov    %eax,%gs
 330034f:	66 31 c0             	xor    %ax,%ax
 3300352:	be 00 40 b4 42       	mov    $0x42b44000,%esi
 3300357:	8a 16                	mov    (%rsi),%dl
 3300359:	10 40 31             	adc    %al,0x31(%rax)
 330035c:	db cd                	fcmovne %st(5),%st
 330035e:	13 ea                	adc    %edx,%ebp
 3300360:	5f                   	pop    %rdi
 3300361:	42 00 00             	rex.X add %al,(%rax)

0000000003300364 <DiskReaderEnd>:
 3300364:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 3300369:	8e c0                	mov    %eax,%es
 330036b:	8e d8                	mov    %eax,%ds
 330036d:	8e e0                	mov    %eax,%fs
 330036f:	8e e8                	mov    %eax,%gs
 3300371:	bf 02 86 66 31       	mov    $0x31668602,%edi
 3300376:	db 31                	(bad)  (%rcx)
 3300378:	ed                   	in     (%dx),%eax
 3300379:	66 ba 50 41          	mov    $0x4150,%dx
 330037d:	4d 53                	rex.WRB push %r11
 330037f:	66 b8 20 e8          	mov    $0xe820,%ax
 3300383:	00 00                	add    %al,(%rax)
 3300385:	26 66 c7 45 14 01 00 	movw   $0x1,%es:0x14(%rbp)
 330038c:	00 00                	add    %al,(%rax)
 330038e:	66 b9 18 00          	mov    $0x18,%cx
 3300392:	00 00                	add    %al,(%rax)
 3300394:	cd 15                	int    $0x15
 3300396:	72 5e                	jb     33003f6 <GetMemoryMap.failure>
 3300398:	66 ba 50 41          	mov    $0x4150,%dx
 330039c:	4d 53                	rex.WRB push %r11
 330039e:	66 39 d0             	cmp    %dx,%ax
 33003a1:	75 53                	jne    33003f6 <GetMemoryMap.failure>
 33003a3:	66 85 db             	test   %bx,%bx
 33003a6:	74 4e                	je     33003f6 <GetMemoryMap.failure>
 33003a8:	eb 1f                	jmp    33003c9 <GetMemoryMap.jmpin>

00000000033003aa <GetMemoryMap.e820lp>:
 33003aa:	66 b8 20 e8          	mov    $0xe820,%ax
 33003ae:	00 00                	add    %al,(%rax)
 33003b0:	26 66 c7 45 14 01 00 	movw   $0x1,%es:0x14(%rbp)
 33003b7:	00 00                	add    %al,(%rax)
 33003b9:	66 b9 18 00          	mov    $0x18,%cx
 33003bd:	00 00                	add    %al,(%rax)
 33003bf:	cd 15                	int    $0x15
 33003c1:	72 29                	jb     33003ec <GetMemoryMap.e820f>
 33003c3:	66 ba 50 41          	mov    $0x4150,%dx
 33003c7:	4d 53                	rex.WRB push %r11

00000000033003c9 <GetMemoryMap.jmpin>:
 33003c9:	e3 1c                	jrcxz  33003e7 <GetMemoryMap.skipent>
 33003cb:	80 f9 14             	cmp    $0x14,%cl
 33003ce:	76 07                	jbe    33003d7 <GetMemoryMap.notext>
 33003d0:	26 f6 45 14 01       	testb  $0x1,%es:0x14(%rbp)
 33003d5:	74 10                	je     33003e7 <GetMemoryMap.skipent>

00000000033003d7 <GetMemoryMap.notext>:
 33003d7:	26 66 8b 4d 08       	mov    %es:0x8(%rbp),%cx
 33003dc:	26 66 0b 4d 0c       	or     %es:0xc(%rbp),%cx
 33003e1:	74 04                	je     33003e7 <GetMemoryMap.skipent>
 33003e3:	45 83 c7 18          	rex.RB add $0x18,%r15d

00000000033003e7 <GetMemoryMap.skipent>:
 33003e7:	66 85 db             	test   %bx,%bx
 33003ea:	75 be                	jne    33003aa <GetMemoryMap.e820lp>

00000000033003ec <GetMemoryMap.e820f>:
 33003ec:	89 2e                	mov    %ebp,(%rsi)
 33003ee:	00 86 f8 ea 5f 42    	add    %al,0x425feaf8(%rsi)
	...

00000000033003f6 <GetMemoryMap.failure>:
 33003f6:	66 b8 00 86          	mov    $0x8600,%ax
 33003fa:	00 00                	add    %al,(%rax)
 33003fc:	67 c6 00 00          	movb   $0x0,(%eax)
 3300400:	f9                   	stc    
 3300401:	ea                   	(bad)  
 3300402:	5f                   	pop    %rdi
 3300403:	42 00 00             	rex.X add %al,(%rax)

0000000003300406 <GetMemoryMapEnd>:
 3300406:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 330040b:	8e c0                	mov    %eax,%es
 330040d:	8e d8                	mov    %eax,%ds
 330040f:	8e e0                	mov    %eax,%fs
 3300411:	8e e8                	mov    %eax,%gs
 3300413:	b0 00                	mov    $0x0,%al
 3300415:	b4 86                	mov    $0x86,%ah
 3300417:	8b 0e                	mov    (%rsi),%ecx
 3300419:	00 40 8b             	add    %al,-0x75(%rax)
 330041c:	16                   	(bad)  
 330041d:	02 40 cd             	add    -0x33(%rax),%al
 3300420:	15 ea 5f 42 00       	adc    $0x425fea,%eax
	...

0000000003300426 <SleepAsmEnd>:
 3300426:	66 2e 0f 1f 84 00 00 	nopw   %cs:0x0(%rax,%rax,1)
 330042d:	00 00 00 

0000000003300430 <ApicStart>:
 3300430:	fa                   	cli    
 3300431:	0f 01 16             	lgdt   (%rsi)
 3300434:	00 10                	add    %dl,(%rax)
 3300436:	b8 00 00 8e d0       	mov    $0xd08e0000,%eax
 330043b:	8e d8                	mov    %eax,%ds
 330043d:	8e c0                	mov    %eax,%es
 330043f:	8e e0                	mov    %eax,%fs
 3300441:	8e e8                	mov    %eax,%gs
 3300443:	0f 20 c0             	mov    %cr0,%rax
 3300446:	66 83 c8 01          	or     $0x1,%ax
 330044a:	0f 22 c0             	mov    %rax,%cr0
 330044d:	ea                   	(bad)  
 330044e:	22                   	.byte 0x22
 330044f:	80 18 00             	sbbb   $0x0,(%rax)

0000000003300452 <ApicEnableLongMode>:
 3300452:	66 b8 10 00          	mov    $0x10,%ax
 3300456:	8e d0                	mov    %eax,%ss
 3300458:	8e d8                	mov    %eax,%ds
 330045a:	8e c0                	mov    %eax,%es
 330045c:	8e e8                	mov    %eax,%gs
 330045e:	8e e0                	mov    %eax,%fs
 3300460:	0f 20 c0             	mov    %cr0,%rax
 3300463:	25 ff ff ff 7f       	and    $0x7fffffff,%eax
 3300468:	0f 22 c0             	mov    %rax,%cr0
 330046b:	0f 20 e0             	mov    %cr4,%rax
 330046e:	83 c8 20             	or     $0x20,%eax
 3300471:	0f 22 e0             	mov    %rax,%cr4
 3300474:	b8 00 70 01 00       	mov    $0x17000,%eax
 3300479:	0f 22 d8             	mov    %rax,%cr3
 330047c:	b9 80 00 00 c0       	mov    $0xc0000080,%ecx
 3300481:	0f 32                	rdmsr  
 3300483:	0d 00 01 00 00       	or     $0x100,%eax
 3300488:	0f 30                	wrmsr  
 330048a:	0f 20 c0             	mov    %cr0,%rax
 330048d:	0d 00 00 00 80       	or     $0x80000000,%eax
 3300492:	0f 22 c0             	mov    %rax,%cr0
 3300495:	ea                   	(bad)  
 3300496:	6c                   	insb   (%dx),%es:(%rdi)
 3300497:	80 00 00             	addb   $0x0,(%rax)
 330049a:	08 00                	or     %al,(%rax)

000000000330049c <ApicLongMode>:
 330049c:	bc 00 00 77 00       	mov    $0x770000,%esp
 33004a1:	48 8b 3c 25 00 40 00 	mov    0x4000,%rdi
 33004a8:	00 
 33004a9:	e8 7e 35 00 00       	callq  3303a2c <InitializeSingleHypervisor>
 33004ae:	48 31 c0             	xor    %rax,%rax
 33004b1:	48 31 db             	xor    %rbx,%rbx
 33004b4:	48 31 c9             	xor    %rcx,%rcx
 33004b7:	48 31 d2             	xor    %rdx,%rdx
 33004ba:	48 31 ff             	xor    %rdi,%rdi
 33004bd:	48 31 f6             	xor    %rsi,%rsi
 33004c0:	48 31 e4             	xor    %rsp,%rsp
 33004c3:	48 31 ed             	xor    %rbp,%rbp
 33004c6:	4d 31 c0             	xor    %r8,%r8
 33004c9:	4d 31 c9             	xor    %r9,%r9
 33004cc:	4d 31 d2             	xor    %r10,%r10
 33004cf:	4d 31 db             	xor    %r11,%r11
 33004d2:	4d 31 e4             	xor    %r12,%r12
 33004d5:	4d 31 ed             	xor    %r13,%r13
 33004d8:	4d 31 f6             	xor    %r14,%r14
 33004db:	4d 31 ff             	xor    %r15,%r15
 33004de:	f4                   	hlt    

00000000033004df <ApicEnd>:
 33004df:	90                   	nop

00000000033004e0 <UpdateInstructionPointer>:
 33004e0:	48 01 3c 24          	add    %rdi,(%rsp)
 33004e4:	48 8b 04 24          	mov    (%rsp),%rax
 33004e8:	c3                   	retq   

00000000033004e9 <GetNextInstructionAddress>:
 33004e9:	48 8b 04 24          	mov    (%rsp),%rax
 33004ed:	c3                   	retq   

00000000033004ee <GetGDT>:
 33004ee:	0f 01 07             	sgdt   (%rdi)
 33004f1:	c3                   	retq   

00000000033004f2 <GetIDT>:
 33004f2:	0f 01 0f             	sidt   (%rdi)
 33004f5:	c3                   	retq   

00000000033004f6 <GetCS>:
 33004f6:	8c c8                	mov    %cs,%eax
 33004f8:	c3                   	retq   

00000000033004f9 <GetDS>:
 33004f9:	8c d8                	mov    %ds,%eax
 33004fb:	c3                   	retq   

00000000033004fc <GetSS>:
 33004fc:	8c d0                	mov    %ss,%eax
 33004fe:	c3                   	retq   

00000000033004ff <GetES>:
 33004ff:	8c c0                	mov    %es,%eax
 3300501:	c3                   	retq   

0000000003300502 <GetFS>:
 3300502:	8c e0                	mov    %fs,%eax
 3300504:	c3                   	retq   

0000000003300505 <GetGS>:
 3300505:	8c e8                	mov    %gs,%eax
 3300507:	c3                   	retq   
 3300508:	0f 1f 84 00 00 00 00 	nopl   0x0(%rax,%rax,1)
 330050f:	00 

0000000003300510 <SetupCompleteBackToGuestState>:
 3300510:	b8 1c 68 00 00       	mov    $0x681c,%eax
 3300515:	0f 79 c4             	vmwrite %rsp,%rax
 3300518:	0f 01 c2             	vmlaunch 
 330051b:	b8 08 00 00 00       	mov    $0x8,%eax
 3300520:	c3                   	retq   

0000000003300521 <VmmToVm>:
 3300521:	b8 00 00 00 00       	mov    $0x0,%eax
 3300526:	c3                   	retq   

0000000003300527 <HandleVmExit>:
 3300527:	64 48 89 04 25 00 00 	mov    %rax,%fs:0x0
 330052e:	00 00 
 3300530:	64 48 89 1c 25 08 00 	mov    %rbx,%fs:0x8
 3300537:	00 00 
 3300539:	64 48 89 0c 25 10 00 	mov    %rcx,%fs:0x10
 3300540:	00 00 
 3300542:	64 48 89 14 25 18 00 	mov    %rdx,%fs:0x18
 3300549:	00 00 
 330054b:	64 48 89 34 25 20 00 	mov    %rsi,%fs:0x20
 3300552:	00 00 
 3300554:	64 48 89 3c 25 28 00 	mov    %rdi,%fs:0x28
 330055b:	00 00 
 330055d:	64 48 89 2c 25 30 00 	mov    %rbp,%fs:0x30
 3300564:	00 00 
 3300566:	64 4c 89 04 25 38 00 	mov    %r8,%fs:0x38
 330056d:	00 00 
 330056f:	64 4c 89 0c 25 40 00 	mov    %r9,%fs:0x40
 3300576:	00 00 
 3300578:	64 4c 89 14 25 48 00 	mov    %r10,%fs:0x48
 330057f:	00 00 
 3300581:	64 4c 89 1c 25 50 00 	mov    %r11,%fs:0x50
 3300588:	00 00 
 330058a:	64 4c 89 24 25 58 00 	mov    %r12,%fs:0x58
 3300591:	00 00 
 3300593:	64 4c 89 2c 25 60 00 	mov    %r13,%fs:0x60
 330059a:	00 00 
 330059c:	64 4c 89 34 25 68 00 	mov    %r14,%fs:0x68
 33005a3:	00 00 
 33005a5:	64 4c 89 3c 25 70 00 	mov    %r15,%fs:0x70
 33005ac:	00 00 
 33005ae:	b8 1c 68 00 00       	mov    $0x681c,%eax
 33005b3:	0f 78 c3             	vmread %rax,%rbx
 33005b6:	64 48 89 1c 25 78 00 	mov    %rbx,%fs:0x78
 33005bd:	00 00 
 33005bf:	b8 1e 68 00 00       	mov    $0x681e,%eax
 33005c4:	0f 78 c3             	vmread %rax,%rbx
 33005c7:	64 48 89 1c 25 80 00 	mov    %rbx,%fs:0x80
 33005ce:	00 00 
 33005d0:	e8 cf 4b 00 00       	callq  33051a4 <HandleVmExitEx>
 33005d5:	64 48 8b 0c 25 10 00 	mov    %fs:0x10,%rcx
 33005dc:	00 00 
 33005de:	64 48 8b 14 25 18 00 	mov    %fs:0x18,%rdx
 33005e5:	00 00 
 33005e7:	64 48 8b 34 25 20 00 	mov    %fs:0x20,%rsi
 33005ee:	00 00 
 33005f0:	64 48 8b 3c 25 28 00 	mov    %fs:0x28,%rdi
 33005f7:	00 00 
 33005f9:	64 48 8b 2c 25 30 00 	mov    %fs:0x30,%rbp
 3300600:	00 00 
 3300602:	64 4c 8b 04 25 38 00 	mov    %fs:0x38,%r8
 3300609:	00 00 
 330060b:	64 4c 8b 0c 25 40 00 	mov    %fs:0x40,%r9
 3300612:	00 00 
 3300614:	64 4c 8b 14 25 48 00 	mov    %fs:0x48,%r10
 330061b:	00 00 
 330061d:	64 4c 8b 1c 25 50 00 	mov    %fs:0x50,%r11
 3300624:	00 00 
 3300626:	64 4c 8b 24 25 58 00 	mov    %fs:0x58,%r12
 330062d:	00 00 
 330062f:	64 4c 8b 2c 25 60 00 	mov    %fs:0x60,%r13
 3300636:	00 00 
 3300638:	64 4c 8b 34 25 68 00 	mov    %fs:0x68,%r14
 330063f:	00 00 
 3300641:	64 4c 8b 3c 25 70 00 	mov    %fs:0x70,%r15
 3300648:	00 00 
 330064a:	b8 1c 68 00 00       	mov    $0x681c,%eax
 330064f:	64 48 8b 1c 25 78 00 	mov    %fs:0x78,%rbx
 3300656:	00 00 
 3300658:	0f 79 c3             	vmwrite %rbx,%rax
 330065b:	b8 1e 68 00 00       	mov    $0x681e,%eax
 3300660:	64 48 8b 1c 25 80 00 	mov    %fs:0x80,%rbx
 3300667:	00 00 
 3300669:	0f 79 c3             	vmwrite %rbx,%rax
 330066c:	64 48 8b 04 25 00 00 	mov    %fs:0x0,%rax
 3300673:	00 00 
 3300675:	64 48 8b 1c 25 08 00 	mov    %fs:0x8,%rbx
 330067c:	00 00 
 330067e:	0f 01 c3             	vmresume 

0000000003300681 <HandleVmExit.assertHandleVmExit>:
 3300681:	66 ba e8 03          	mov    $0x3e8,%dx
 3300685:	b0 46                	mov    $0x46,%al
 3300687:	ee                   	out    %al,(%dx)
 3300688:	eb f7                	jmp    3300681 <HandleVmExit.assertHandleVmExit>

000000000330068a <GetCoresData>:
 330068a:	f3 0f 1e fa          	endbr64 
 330068e:	55                   	push   %rbp
 330068f:	48 89 e5             	mov    %rsp,%rbp
 3300692:	48 83 ec 28          	sub    $0x28,%rsp
 3300696:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 330069a:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 330069e:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 33006a2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33006a6:	48 83 c0 04          	add    $0x4,%rax
 33006aa:	8b 00                	mov    (%rax),%eax
 33006ac:	89 c0                	mov    %eax,%eax
 33006ae:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33006b2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33006b6:	c6 00 00             	movb   $0x0,(%rax)
 33006b9:	48 c7 45 f8 2c 00 00 	movq   $0x2c,-0x8(%rbp)
 33006c0:	00 
 33006c1:	eb 5e                	jmp    3300721 <GetCoresData+0x97>
 33006c3:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33006c7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33006cb:	48 01 d0             	add    %rdx,%rax
 33006ce:	0f b6 00             	movzbl (%rax),%eax
 33006d1:	0f b6 c0             	movzbl %al,%eax
 33006d4:	85 c0                	test   %eax,%eax
 33006d6:	75 30                	jne    3300708 <GetCoresData+0x7e>
 33006d8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33006dc:	48 8d 50 02          	lea    0x2(%rax),%rdx
 33006e0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33006e4:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 33006e8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33006ec:	0f b6 00             	movzbl (%rax),%eax
 33006ef:	8d 48 01             	lea    0x1(%rax),%ecx
 33006f2:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33006f6:	88 0a                	mov    %cl,(%rdx)
 33006f8:	0f b6 d0             	movzbl %al,%edx
 33006fb:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33006ff:	48 01 c2             	add    %rax,%rdx
 3300702:	0f b6 06             	movzbl (%rsi),%eax
 3300705:	88 02                	mov    %al,(%rdx)
 3300707:	90                   	nop
 3300708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330070c:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3300710:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300714:	48 01 d0             	add    %rdx,%rax
 3300717:	0f b6 00             	movzbl (%rax),%eax
 330071a:	0f b6 c0             	movzbl %al,%eax
 330071d:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3300721:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300725:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
 3300729:	72 98                	jb     33006c3 <GetCoresData+0x39>
 330072b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330072f:	0f b6 00             	movzbl (%rax),%eax
 3300732:	84 c0                	test   %al,%al
 3300734:	75 07                	jne    330073d <GetCoresData+0xb3>
 3300736:	b8 07 00 00 00       	mov    $0x7,%eax
 330073b:	eb 05                	jmp    3300742 <GetCoresData+0xb8>
 330073d:	b8 00 00 00 00       	mov    $0x0,%eax
 3300742:	c9                   	leaveq 
 3300743:	c3                   	retq   

0000000003300744 <DetectX2APICAvailability>:
 3300744:	f3 0f 1e fa          	endbr64 
 3300748:	55                   	push   %rbp
 3300749:	48 89 e5             	mov    %rsp,%rbp
 330074c:	53                   	push   %rbx
 330074d:	48 83 ec 40          	sub    $0x40,%rsp
 3300751:	48 c7 45 f0 01 00 00 	movq   $0x1,-0x10(%rbp)
 3300758:	00 
 3300759:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300760:	00 
 3300761:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 3300765:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3300769:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 330076d:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300771:	48 8d 45 b8          	lea    -0x48(%rbp),%rax
 3300775:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300779:	48 8d 45 c0          	lea    -0x40(%rbp),%rax
 330077d:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3300781:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300785:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3300789:	48 89 d1             	mov    %rdx,%rcx
 330078c:	0f a2                	cpuid  
 330078e:	48 89 de             	mov    %rbx,%rsi
 3300791:	48 89 c7             	mov    %rax,%rdi
 3300794:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300798:	48 89 38             	mov    %rdi,(%rax)
 330079b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330079f:	48 89 30             	mov    %rsi,(%rax)
 33007a2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33007a6:	48 89 08             	mov    %rcx,(%rax)
 33007a9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33007ad:	48 89 10             	mov    %rdx,(%rax)
 33007b0:	90                   	nop
 33007b1:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 33007b5:	25 00 00 20 00       	and    $0x200000,%eax
 33007ba:	48 85 c0             	test   %rax,%rax
 33007bd:	74 07                	je     33007c6 <DetectX2APICAvailability+0x82>
 33007bf:	b8 00 00 00 00       	mov    $0x0,%eax
 33007c4:	eb 05                	jmp    33007cb <DetectX2APICAvailability+0x87>
 33007c6:	b8 1a 00 00 00       	mov    $0x1a,%eax
 33007cb:	48 83 c4 40          	add    $0x40,%rsp
 33007cf:	5b                   	pop    %rbx
 33007d0:	5d                   	pop    %rbp
 33007d1:	c3                   	retq   

00000000033007d2 <EnableX2APIC>:
 33007d2:	f3 0f 1e fa          	endbr64 
 33007d6:	55                   	push   %rbp
 33007d7:	48 89 e5             	mov    %rsp,%rbp
 33007da:	48 83 ec 30          	sub    $0x30,%rsp
 33007de:	b8 00 00 00 00       	mov    $0x0,%eax
 33007e3:	e8 5c ff ff ff       	callq  3300744 <DetectX2APICAvailability>
 33007e8:	48 85 c0             	test   %rax,%rax
 33007eb:	74 13                	je     3300800 <EnableX2APIC+0x2e>
 33007ed:	48 8d 3d 5c 54 00 00 	lea    0x545c(%rip),%rdi        # 3305c50 <CopyMemoryToGuest+0xf9>
 33007f4:	b8 00 00 00 00       	mov    $0x0,%eax
 33007f9:	e8 97 19 00 00       	callq  3302195 <Print>
 33007fe:	eb fe                	jmp    33007fe <EnableX2APIC+0x2c>
 3300800:	48 c7 45 e8 1b 00 00 	movq   $0x1b,-0x18(%rbp)
 3300807:	00 
 3300808:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 330080f:	00 
 3300810:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 3300817:	00 
 3300818:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330081c:	48 89 c1             	mov    %rax,%rcx
 330081f:	0f 32                	rdmsr  
 3300821:	48 89 55 e0          	mov    %rdx,-0x20(%rbp)
 3300825:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300829:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330082d:	48 c1 e0 20          	shl    $0x20,%rax
 3300831:	48 0b 45 d8          	or     -0x28(%rbp),%rax
 3300835:	80 cc 0c             	or     $0xc,%ah
 3300838:	48 c7 45 f8 1b 00 00 	movq   $0x1b,-0x8(%rbp)
 330083f:	00 
 3300840:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3300844:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300848:	48 c1 e8 20          	shr    $0x20,%rax
 330084c:	48 89 c2             	mov    %rax,%rdx
 330084f:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300853:	89 c0                	mov    %eax,%eax
 3300855:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 3300859:	0f 30                	wrmsr  
 330085b:	90                   	nop
 330085c:	90                   	nop
 330085d:	c9                   	leaveq 
 330085e:	c3                   	retq   

000000000330085f <IssueIPI>:
 330085f:	f3 0f 1e fa          	endbr64 
 3300863:	55                   	push   %rbp
 3300864:	48 89 e5             	mov    %rsp,%rbp
 3300867:	48 83 ec 40          	sub    $0x40,%rsp
 330086b:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 330086f:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3300873:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3300877:	48 89 4d c0          	mov    %rcx,-0x40(%rbp)
 330087b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330087f:	48 c1 e0 20          	shl    $0x20,%rax
 3300883:	48 0b 45 c8          	or     -0x38(%rbp),%rax
 3300887:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 330088b:	48 0b 45 c0          	or     -0x40(%rbp),%rax
 330088f:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300893:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300897:	48 89 c6             	mov    %rax,%rsi
 330089a:	48 8d 3d 28 54 00 00 	lea    0x5428(%rip),%rdi        # 3305cc9 <CopyMemoryToGuest+0x172>
 33008a1:	b8 00 00 00 00       	mov    $0x0,%eax
 33008a6:	e8 ea 18 00 00       	callq  3302195 <Print>
 33008ab:	48 c7 45 f0 30 08 00 	movq   $0x830,-0x10(%rbp)
 33008b2:	00 
 33008b3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33008b7:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33008bb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33008bf:	48 c1 e8 20          	shr    $0x20,%rax
 33008c3:	48 89 c2             	mov    %rax,%rdx
 33008c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33008ca:	89 c0                	mov    %eax,%eax
 33008cc:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 33008d0:	0f 30                	wrmsr  
 33008d2:	90                   	nop
 33008d3:	90                   	nop
 33008d4:	c9                   	leaveq 
 33008d5:	c3                   	retq   

00000000033008d6 <ActivateHypervisorOnProcessor>:
 33008d6:	f3 0f 1e fa          	endbr64 
 33008da:	55                   	push   %rbp
 33008db:	48 89 e5             	mov    %rsp,%rbp
 33008de:	48 83 ec 30          	sub    $0x30,%rsp
 33008e2:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33008e6:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33008ea:	48 c7 c0 df 04 30 03 	mov    $0x33004df,%rax
 33008f1:	48 89 c2             	mov    %rax,%rdx
 33008f4:	48 c7 c0 30 04 30 03 	mov    $0x3300430,%rax
 33008fb:	48 29 c2             	sub    %rax,%rdx
 33008fe:	48 89 d0             	mov    %rdx,%rax
 3300901:	48 89 c2             	mov    %rax,%rdx
 3300904:	48 c7 c0 30 04 30 03 	mov    $0x3300430,%rax
 330090b:	48 89 c6             	mov    %rax,%rsi
 330090e:	bf 00 80 00 00       	mov    $0x8000,%edi
 3300913:	e8 89 1a 00 00       	callq  33023a1 <CopyMemory>
 3300918:	b8 00 00 00 00       	mov    $0x0,%eax
 330091d:	e8 b0 fe ff ff       	callq  33007d2 <EnableX2APIC>
 3300922:	48 c7 45 f8 02 08 00 	movq   $0x802,-0x8(%rbp)
 3300929:	00 
 330092a:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300931:	00 
 3300932:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300939:	00 
 330093a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330093e:	48 89 c1             	mov    %rax,%rcx
 3300941:	0f 32                	rdmsr  
 3300943:	48 89 55 f0          	mov    %rdx,-0x10(%rbp)
 3300947:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 330094b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330094f:	48 c1 e0 20          	shl    $0x20,%rax
 3300953:	48 0b 45 e8          	or     -0x18(%rbp),%rax
 3300957:	48 89 c6             	mov    %rax,%rsi
 330095a:	48 8d 3d 72 53 00 00 	lea    0x5372(%rip),%rdi        # 3305cd3 <CopyMemoryToGuest+0x17c>
 3300961:	b8 00 00 00 00       	mov    $0x0,%eax
 3300966:	e8 2a 18 00 00       	callq  3302195 <Print>
 330096b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330096f:	b9 00 00 00 00       	mov    $0x0,%ecx
 3300974:	ba 00 05 00 00       	mov    $0x500,%edx
 3300979:	be 00 00 00 00       	mov    $0x0,%esi
 330097e:	48 89 c7             	mov    %rax,%rdi
 3300981:	e8 d9 fe ff ff       	callq  330085f <IssueIPI>
 3300986:	bf e8 03 00 00       	mov    $0x3e8,%edi
 330098b:	e8 59 02 00 00       	callq  3300be9 <Sleep>
 3300990:	ba 00 40 00 00       	mov    $0x4000,%edx
 3300995:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3300999:	48 89 02             	mov    %rax,(%rdx)
 330099c:	ba 08 40 00 00       	mov    $0x4008,%edx
 33009a1:	48 c7 c0 2c 3a 30 03 	mov    $0x3303a2c,%rax
 33009a8:	48 89 02             	mov    %rax,(%rdx)
 33009ab:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33009af:	b9 00 40 00 00       	mov    $0x4000,%ecx
 33009b4:	ba 00 06 00 00       	mov    $0x600,%edx
 33009b9:	be 08 00 00 00       	mov    $0x8,%esi
 33009be:	48 89 c7             	mov    %rax,%rdi
 33009c1:	e8 99 fe ff ff       	callq  330085f <IssueIPI>
 33009c6:	bf e8 03 00 00       	mov    $0x3e8,%edi
 33009cb:	e8 19 02 00 00       	callq  3300be9 <Sleep>
 33009d0:	48 8d 3d 09 53 00 00 	lea    0x5309(%rip),%rdi        # 3305ce0 <CopyMemoryToGuest+0x189>
 33009d7:	b8 00 00 00 00       	mov    $0x0,%eax
 33009dc:	e8 b4 17 00 00       	callq  3302195 <Print>
 33009e1:	48 8d 3d 00 53 00 00 	lea    0x5300(%rip),%rdi        # 3305ce8 <CopyMemoryToGuest+0x191>
 33009e8:	b8 00 00 00 00       	mov    $0x0,%eax
 33009ed:	e8 a3 17 00 00       	callq  3302195 <Print>
 33009f2:	eb fe                	jmp    33009f2 <ActivateHypervisorOnProcessor+0x11c>

00000000033009f4 <EnterRealModeRunFunction>:
 33009f4:	f3 0f 1e fa          	endbr64 
 33009f8:	55                   	push   %rbp
 33009f9:	48 89 e5             	mov    %rsp,%rbp
 33009fc:	48 83 ec 30          	sub    $0x30,%rsp
 3300a00:	89 f8                	mov    %edi,%eax
 3300a02:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3300a06:	88 45 dc             	mov    %al,-0x24(%rbp)
 3300a09:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 3300a0d:	48 c7 c0 b0 6e 30 03 	mov    $0x3306eb0,%rax
 3300a14:	48 63 d2             	movslq %edx,%rdx
 3300a17:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3300a1b:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300a1f:	0f b6 55 dc          	movzbl -0x24(%rbp),%edx
 3300a23:	48 c7 c0 d0 6e 30 03 	mov    $0x3306ed0,%rax
 3300a2a:	48 63 d2             	movslq %edx,%rdx
 3300a2d:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3300a31:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3300a35:	48 c7 c0 42 03 30 03 	mov    $0x3300342,%rax
 3300a3c:	48 89 c2             	mov    %rax,%rdx
 3300a3f:	48 c7 c0 76 02 30 03 	mov    $0x3300276,%rax
 3300a46:	48 29 c2             	sub    %rax,%rdx
 3300a49:	48 89 d0             	mov    %rdx,%rax
 3300a4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3300a50:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300a54:	48 2b 45 f8          	sub    -0x8(%rbp),%rax
 3300a58:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3300a5c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300a60:	48 89 c2             	mov    %rax,%rdx
 3300a63:	48 c7 c0 76 02 30 03 	mov    $0x3300276,%rax
 3300a6a:	48 89 c6             	mov    %rax,%rsi
 3300a6d:	bf 00 42 00 00       	mov    $0x4200,%edi
 3300a72:	e8 2a 19 00 00       	callq  33023a1 <CopyMemory>
 3300a77:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300a7b:	48 8d 88 00 42 00 00 	lea    0x4200(%rax),%rcx
 3300a82:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3300a86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300a8a:	48 89 c6             	mov    %rax,%rsi
 3300a8d:	48 89 cf             	mov    %rcx,%rdi
 3300a90:	e8 0c 19 00 00       	callq  33023a1 <CopyMemory>
 3300a95:	b8 00 00 00 00       	mov    $0x0,%eax
 3300a9a:	e8 a1 f7 ff ff       	callq  3300240 <AsmEnterRealModeRunFunction>
 3300a9f:	48 83 7d d0 00       	cmpq   $0x0,-0x30(%rbp)
 3300aa4:	74 08                	je     3300aae <EnterRealModeRunFunction+0xba>
 3300aa6:	48 c7 45 d0 00 22 00 	movq   $0x2200,-0x30(%rbp)
 3300aad:	00 
 3300aae:	90                   	nop
 3300aaf:	c9                   	leaveq 
 3300ab0:	c3                   	retq   

0000000003300ab1 <ReadFirstSectorToRam>:
 3300ab1:	f3 0f 1e fa          	endbr64 
 3300ab5:	55                   	push   %rbp
 3300ab6:	48 89 e5             	mov    %rsp,%rbp
 3300ab9:	48 83 ec 20          	sub    $0x20,%rsp
 3300abd:	89 f8                	mov    %edi,%eax
 3300abf:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3300ac3:	88 45 ec             	mov    %al,-0x14(%rbp)
 3300ac6:	48 c7 45 f8 00 40 00 	movq   $0x4000,-0x8(%rbp)
 3300acd:	00 
 3300ace:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300ad2:	c6 00 10             	movb   $0x10,(%rax)
 3300ad5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300ad9:	c6 40 01 00          	movb   $0x0,0x1(%rax)
 3300add:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300ae1:	66 c7 40 02 01 00    	movw   $0x1,0x2(%rax)
 3300ae7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300aeb:	66 c7 40 04 00 30    	movw   $0x3000,0x4(%rax)
 3300af1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300af5:	66 c7 40 06 00 00    	movw   $0x0,0x6(%rax)
 3300afb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300aff:	c7 40 08 00 00 00 00 	movl   $0x0,0x8(%rax)
 3300b06:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300b0a:	c7 40 0c 00 00 00 00 	movl   $0x0,0xc(%rax)
 3300b11:	ba 10 40 00 00       	mov    $0x4010,%edx
 3300b16:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
 3300b1a:	88 02                	mov    %al,(%rdx)
 3300b1c:	be 00 00 00 00       	mov    $0x0,%esi
 3300b21:	bf 00 00 00 00       	mov    $0x0,%edi
 3300b26:	e8 c9 fe ff ff       	callq  33009f4 <EnterRealModeRunFunction>
 3300b2b:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 3300b30:	75 24                	jne    3300b56 <ReadFirstSectorToRam+0xa5>
 3300b32:	48 8d 3d 0f 52 00 00 	lea    0x520f(%rip),%rdi        # 3305d48 <CopyMemoryToGuest+0x1f1>
 3300b39:	b8 00 00 00 00       	mov    $0x0,%eax
 3300b3e:	e8 52 16 00 00       	callq  3302195 <Print>
 3300b43:	48 8d 3d 3e 52 00 00 	lea    0x523e(%rip),%rdi        # 3305d88 <CopyMemoryToGuest+0x231>
 3300b4a:	b8 00 00 00 00       	mov    $0x0,%eax
 3300b4f:	e8 41 16 00 00       	callq  3302195 <Print>
 3300b54:	eb fe                	jmp    3300b54 <ReadFirstSectorToRam+0xa3>
 3300b56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300b5a:	48 c7 00 00 30 00 00 	movq   $0x3000,(%rax)
 3300b61:	90                   	nop
 3300b62:	c9                   	leaveq 
 3300b63:	c3                   	retq   

0000000003300b64 <LoadMBRToEntryPoint>:
 3300b64:	f3 0f 1e fa          	endbr64 
 3300b68:	55                   	push   %rbp
 3300b69:	48 89 e5             	mov    %rsp,%rbp
 3300b6c:	48 83 ec 10          	sub    $0x10,%rsp
 3300b70:	c6 45 ff 80          	movb   $0x80,-0x1(%rbp)
 3300b74:	eb 69                	jmp    3300bdf <LoadMBRToEntryPoint+0x7b>
 3300b76:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300b7a:	48 8d 55 f0          	lea    -0x10(%rbp),%rdx
 3300b7e:	48 89 d6             	mov    %rdx,%rsi
 3300b81:	89 c7                	mov    %eax,%edi
 3300b83:	e8 29 ff ff ff       	callq  3300ab1 <ReadFirstSectorToRam>
 3300b88:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300b8c:	48 05 fe 01 00 00    	add    $0x1fe,%rax
 3300b92:	0f b7 00             	movzwl (%rax),%eax
 3300b95:	66 3d 55 aa          	cmp    $0xaa55,%ax
 3300b99:	75 3a                	jne    3300bd5 <LoadMBRToEntryPoint+0x71>
 3300b9b:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300b9f:	89 c6                	mov    %eax,%esi
 3300ba1:	48 8d 3d 48 52 00 00 	lea    0x5248(%rip),%rdi        # 3305df0 <CopyMemoryToGuest+0x299>
 3300ba8:	b8 00 00 00 00       	mov    $0x0,%eax
 3300bad:	e8 e3 15 00 00       	callq  3302195 <Print>
 3300bb2:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300bb6:	ba 00 02 00 00       	mov    $0x200,%edx
 3300bbb:	48 89 c6             	mov    %rax,%rsi
 3300bbe:	bf 00 7c 00 00       	mov    $0x7c00,%edi
 3300bc3:	e8 d9 17 00 00       	callq  33023a1 <CopyMemory>
 3300bc8:	ba 10 60 00 00       	mov    $0x6010,%edx
 3300bcd:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300bd1:	88 02                	mov    %al,(%rdx)
 3300bd3:	eb 11                	jmp    3300be6 <LoadMBRToEntryPoint+0x82>
 3300bd5:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 3300bd9:	83 c0 01             	add    $0x1,%eax
 3300bdc:	88 45 ff             	mov    %al,-0x1(%rbp)
 3300bdf:	80 7d ff ff          	cmpb   $0xff,-0x1(%rbp)
 3300be3:	75 91                	jne    3300b76 <LoadMBRToEntryPoint+0x12>
 3300be5:	90                   	nop
 3300be6:	90                   	nop
 3300be7:	c9                   	leaveq 
 3300be8:	c3                   	retq   

0000000003300be9 <Sleep>:
 3300be9:	f3 0f 1e fa          	endbr64 
 3300bed:	55                   	push   %rbp
 3300bee:	48 89 e5             	mov    %rsp,%rbp
 3300bf1:	48 83 ec 20          	sub    $0x20,%rsp
 3300bf5:	89 7d ec             	mov    %edi,-0x14(%rbp)
 3300bf8:	8b 45 ec             	mov    -0x14(%rbp),%eax
 3300bfb:	69 c0 e8 03 00 00    	imul   $0x3e8,%eax,%eax
 3300c01:	89 45 fc             	mov    %eax,-0x4(%rbp)
 3300c04:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3300c07:	c1 e8 10             	shr    $0x10,%eax
 3300c0a:	ba 00 40 00 00       	mov    $0x4000,%edx
 3300c0f:	66 89 02             	mov    %ax,(%rdx)
 3300c12:	ba 02 40 00 00       	mov    $0x4002,%edx
 3300c17:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3300c1a:	66 89 02             	mov    %ax,(%rdx)
 3300c1d:	be 00 00 00 00       	mov    $0x0,%esi
 3300c22:	bf 02 00 00 00       	mov    $0x2,%edi
 3300c27:	e8 c8 fd ff ff       	callq  33009f4 <EnterRealModeRunFunction>
 3300c2c:	90                   	nop
 3300c2d:	c9                   	leaveq 
 3300c2e:	c3                   	retq   

0000000003300c2f <FindRSDT>:
 3300c2f:	f3 0f 1e fa          	endbr64 
 3300c33:	55                   	push   %rbp
 3300c34:	48 89 e5             	mov    %rsp,%rbp
 3300c37:	48 83 ec 50          	sub    $0x50,%rsp
 3300c3b:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 3300c3f:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 3300c43:	48 b8 52 53 44 20 50 	movabs $0x2052545020445352,%rax
 3300c4a:	54 52 20 
 3300c4d:	48 89 45 c7          	mov    %rax,-0x39(%rbp)
 3300c51:	c6 45 cf 00          	movb   $0x0,-0x31(%rbp)
 3300c55:	b8 0e 04 00 00       	mov    $0x40e,%eax
 3300c5a:	0f b7 00             	movzwl (%rax),%eax
 3300c5d:	66 c1 e8 04          	shr    $0x4,%ax
 3300c61:	0f b7 c0             	movzwl %ax,%eax
 3300c64:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300c68:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300c6f:	00 
 3300c70:	eb 3a                	jmp    3300cac <FindRSDT+0x7d>
 3300c72:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3300c76:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300c7a:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3300c7e:	48 8d 45 c7          	lea    -0x39(%rbp),%rax
 3300c82:	ba 08 00 00 00       	mov    $0x8,%edx
 3300c87:	48 89 c6             	mov    %rax,%rsi
 3300c8a:	48 89 cf             	mov    %rcx,%rdi
 3300c8d:	e8 e1 18 00 00       	callq  3302573 <CompareMemory>
 3300c92:	85 c0                	test   %eax,%eax
 3300c94:	75 11                	jne    3300ca7 <FindRSDT+0x78>
 3300c96:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3300c9a:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300c9e:	48 01 d0             	add    %rdx,%rax
 3300ca1:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300ca5:	eb 58                	jmp    3300cff <FindRSDT+0xd0>
 3300ca7:	48 83 45 f0 10       	addq   $0x10,-0x10(%rbp)
 3300cac:	48 81 7d f0 23 10 00 	cmpq   $0x1023,-0x10(%rbp)
 3300cb3:	00 
 3300cb4:	76 bc                	jbe    3300c72 <FindRSDT+0x43>
 3300cb6:	48 c7 45 e8 00 00 0e 	movq   $0xe0000,-0x18(%rbp)
 3300cbd:	00 
 3300cbe:	eb 2b                	jmp    3300ceb <FindRSDT+0xbc>
 3300cc0:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300cc4:	48 8d 4d c7          	lea    -0x39(%rbp),%rcx
 3300cc8:	ba 08 00 00 00       	mov    $0x8,%edx
 3300ccd:	48 89 ce             	mov    %rcx,%rsi
 3300cd0:	48 89 c7             	mov    %rax,%rdi
 3300cd3:	e8 9b 18 00 00       	callq  3302573 <CompareMemory>
 3300cd8:	85 c0                	test   %eax,%eax
 3300cda:	75 0a                	jne    3300ce6 <FindRSDT+0xb7>
 3300cdc:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300ce0:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300ce4:	eb 19                	jmp    3300cff <FindRSDT+0xd0>
 3300ce6:	48 83 45 e8 10       	addq   $0x10,-0x18(%rbp)
 3300ceb:	48 81 7d e8 fe ff 0f 	cmpq   $0xffffe,-0x18(%rbp)
 3300cf2:	00 
 3300cf3:	76 cb                	jbe    3300cc0 <FindRSDT+0x91>
 3300cf5:	b8 01 00 00 00       	mov    $0x1,%eax
 3300cfa:	e9 e0 00 00 00       	jmpq   3300ddf <FindRSDT+0x1b0>
 3300cff:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3300d06:	00 
 3300d07:	c6 45 df 00          	movb   $0x0,-0x21(%rbp)
 3300d0b:	eb 1f                	jmp    3300d2c <FindRSDT+0xfd>
 3300d0d:	0f b6 55 df          	movzbl -0x21(%rbp),%edx
 3300d11:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d15:	48 01 d0             	add    %rdx,%rax
 3300d18:	0f b6 00             	movzbl (%rax),%eax
 3300d1b:	0f b6 c0             	movzbl %al,%eax
 3300d1e:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 3300d22:	0f b6 45 df          	movzbl -0x21(%rbp),%eax
 3300d26:	83 c0 01             	add    $0x1,%eax
 3300d29:	88 45 df             	mov    %al,-0x21(%rbp)
 3300d2c:	80 7d df 13          	cmpb   $0x13,-0x21(%rbp)
 3300d30:	76 db                	jbe    3300d0d <FindRSDT+0xde>
 3300d32:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300d36:	0f b6 c0             	movzbl %al,%eax
 3300d39:	48 85 c0             	test   %rax,%rax
 3300d3c:	74 0a                	je     3300d48 <FindRSDT+0x119>
 3300d3e:	b8 03 00 00 00       	mov    $0x3,%eax
 3300d43:	e9 97 00 00 00       	jmpq   3300ddf <FindRSDT+0x1b0>
 3300d48:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d4c:	48 83 c0 0f          	add    $0xf,%rax
 3300d50:	0f b6 00             	movzbl (%rax),%eax
 3300d53:	3c 01                	cmp    $0x1,%al
 3300d55:	75 21                	jne    3300d78 <FindRSDT+0x149>
 3300d57:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300d5b:	48 c7 00 01 00 00 00 	movq   $0x1,(%rax)
 3300d62:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d66:	48 8d 50 10          	lea    0x10(%rax),%rdx
 3300d6a:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300d6e:	48 89 10             	mov    %rdx,(%rax)
 3300d71:	b8 00 00 00 00       	mov    $0x0,%eax
 3300d76:	eb 67                	jmp    3300ddf <FindRSDT+0x1b0>
 3300d78:	c6 45 de 00          	movb   $0x0,-0x22(%rbp)
 3300d7c:	eb 23                	jmp    3300da1 <FindRSDT+0x172>
 3300d7e:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
 3300d82:	48 8d 50 14          	lea    0x14(%rax),%rdx
 3300d86:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300d8a:	48 01 d0             	add    %rdx,%rax
 3300d8d:	0f b6 00             	movzbl (%rax),%eax
 3300d90:	0f b6 c0             	movzbl %al,%eax
 3300d93:	48 01 45 e0          	add    %rax,-0x20(%rbp)
 3300d97:	0f b6 45 de          	movzbl -0x22(%rbp),%eax
 3300d9b:	83 c0 01             	add    $0x1,%eax
 3300d9e:	88 45 de             	mov    %al,-0x22(%rbp)
 3300da1:	80 7d de 0f          	cmpb   $0xf,-0x22(%rbp)
 3300da5:	76 d7                	jbe    3300d7e <FindRSDT+0x14f>
 3300da7:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300dab:	0f b6 c0             	movzbl %al,%eax
 3300dae:	48 85 c0             	test   %rax,%rax
 3300db1:	74 07                	je     3300dba <FindRSDT+0x18b>
 3300db3:	b8 03 00 00 00       	mov    $0x3,%eax
 3300db8:	eb 25                	jmp    3300ddf <FindRSDT+0x1b0>
 3300dba:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300dbe:	48 c7 00 02 00 00 00 	movq   $0x2,(%rax)
 3300dc5:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300dc9:	48 83 c0 18          	add    $0x18,%rax
 3300dcd:	48 8b 00             	mov    (%rax),%rax
 3300dd0:	48 89 c2             	mov    %rax,%rdx
 3300dd3:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300dd7:	48 89 10             	mov    %rdx,(%rax)
 3300dda:	b8 00 00 00 00       	mov    $0x0,%eax
 3300ddf:	c9                   	leaveq 
 3300de0:	c3                   	retq   

0000000003300de1 <LocateSystemDescriptorTable>:
 3300de1:	f3 0f 1e fa          	endbr64 
 3300de5:	55                   	push   %rbp
 3300de6:	48 89 e5             	mov    %rsp,%rbp
 3300de9:	48 83 ec 60          	sub    $0x60,%rsp
 3300ded:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 3300df1:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 3300df5:	48 89 55 a8          	mov    %rdx,-0x58(%rbp)
 3300df9:	48 89 4d a0          	mov    %rcx,-0x60(%rbp)
 3300dfd:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3300e04:	00 
 3300e05:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3300e0c:	00 
 3300e0d:	eb 1a                	jmp    3300e29 <LocateSystemDescriptorTable+0x48>
 3300e0f:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 3300e13:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3300e17:	48 01 d0             	add    %rdx,%rax
 3300e1a:	0f b6 00             	movzbl (%rax),%eax
 3300e1d:	0f b6 c0             	movzbl %al,%eax
 3300e20:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3300e24:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 3300e29:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e2d:	48 83 c0 04          	add    $0x4,%rax
 3300e31:	8b 00                	mov    (%rax),%eax
 3300e33:	89 c0                	mov    %eax,%eax
 3300e35:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3300e39:	72 d4                	jb     3300e0f <LocateSystemDescriptorTable+0x2e>
 3300e3b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300e3f:	0f b6 c0             	movzbl %al,%eax
 3300e42:	48 85 c0             	test   %rax,%rax
 3300e45:	74 0a                	je     3300e51 <LocateSystemDescriptorTable+0x70>
 3300e47:	b8 05 00 00 00       	mov    $0x5,%eax
 3300e4c:	e9 40 01 00 00       	jmpq   3300f91 <LocateSystemDescriptorTable+0x1b0>
 3300e51:	48 83 7d a8 01       	cmpq   $0x1,-0x58(%rbp)
 3300e56:	0f 85 9d 00 00 00    	jne    3300ef9 <LocateSystemDescriptorTable+0x118>
 3300e5c:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e60:	48 83 c0 04          	add    $0x4,%rax
 3300e64:	8b 00                	mov    (%rax),%eax
 3300e66:	83 e8 24             	sub    $0x24,%eax
 3300e69:	c1 e8 02             	shr    $0x2,%eax
 3300e6c:	89 c0                	mov    %eax,%eax
 3300e6e:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300e72:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300e76:	48 83 c0 24          	add    $0x24,%rax
 3300e7a:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3300e7e:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3300e85:	00 
 3300e86:	eb 62                	jmp    3300eea <LocateSystemDescriptorTable+0x109>
 3300e88:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300e8c:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3300e93:	00 
 3300e94:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3300e98:	48 01 d0             	add    %rdx,%rax
 3300e9b:	8b 00                	mov    (%rax),%eax
 3300e9d:	89 c0                	mov    %eax,%eax
 3300e9f:	48 89 c1             	mov    %rax,%rcx
 3300ea2:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3300ea6:	ba 04 00 00 00       	mov    $0x4,%edx
 3300eab:	48 89 ce             	mov    %rcx,%rsi
 3300eae:	48 89 c7             	mov    %rax,%rdi
 3300eb1:	e8 bd 16 00 00       	callq  3302573 <CompareMemory>
 3300eb6:	85 c0                	test   %eax,%eax
 3300eb8:	75 2b                	jne    3300ee5 <LocateSystemDescriptorTable+0x104>
 3300eba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300ebe:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3300ec5:	00 
 3300ec6:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3300eca:	48 01 d0             	add    %rdx,%rax
 3300ecd:	8b 00                	mov    (%rax),%eax
 3300ecf:	89 c0                	mov    %eax,%eax
 3300ed1:	48 89 c2             	mov    %rax,%rdx
 3300ed4:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300ed8:	48 89 10             	mov    %rdx,(%rax)
 3300edb:	b8 00 00 00 00       	mov    $0x0,%eax
 3300ee0:	e9 ac 00 00 00       	jmpq   3300f91 <LocateSystemDescriptorTable+0x1b0>
 3300ee5:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3300eea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3300eee:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 3300ef2:	72 94                	jb     3300e88 <LocateSystemDescriptorTable+0xa7>
 3300ef4:	e9 93 00 00 00       	jmpq   3300f8c <LocateSystemDescriptorTable+0x1ab>
 3300ef9:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300efd:	48 83 c0 04          	add    $0x4,%rax
 3300f01:	8b 00                	mov    (%rax),%eax
 3300f03:	83 e8 24             	sub    $0x24,%eax
 3300f06:	c1 e8 03             	shr    $0x3,%eax
 3300f09:	89 c0                	mov    %eax,%eax
 3300f0b:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3300f0f:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3300f13:	48 83 c0 24          	add    $0x24,%rax
 3300f17:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3300f1b:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3300f22:	00 
 3300f23:	eb 5d                	jmp    3300f82 <LocateSystemDescriptorTable+0x1a1>
 3300f25:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f29:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3300f30:	00 
 3300f31:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3300f35:	48 01 d0             	add    %rdx,%rax
 3300f38:	48 8b 00             	mov    (%rax),%rax
 3300f3b:	48 89 c1             	mov    %rax,%rcx
 3300f3e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3300f42:	ba 04 00 00 00       	mov    $0x4,%edx
 3300f47:	48 89 ce             	mov    %rcx,%rsi
 3300f4a:	48 89 c7             	mov    %rax,%rdi
 3300f4d:	e8 21 16 00 00       	callq  3302573 <CompareMemory>
 3300f52:	85 c0                	test   %eax,%eax
 3300f54:	75 27                	jne    3300f7d <LocateSystemDescriptorTable+0x19c>
 3300f56:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f5a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3300f61:	00 
 3300f62:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3300f66:	48 01 d0             	add    %rdx,%rax
 3300f69:	48 8b 00             	mov    (%rax),%rax
 3300f6c:	48 89 c2             	mov    %rax,%rdx
 3300f6f:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3300f73:	48 89 10             	mov    %rdx,(%rax)
 3300f76:	b8 00 00 00 00       	mov    $0x0,%eax
 3300f7b:	eb 14                	jmp    3300f91 <LocateSystemDescriptorTable+0x1b0>
 3300f7d:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3300f82:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3300f86:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 3300f8a:	72 99                	jb     3300f25 <LocateSystemDescriptorTable+0x144>
 3300f8c:	b8 06 00 00 00       	mov    $0x6,%eax
 3300f91:	c9                   	leaveq 
 3300f92:	c3                   	retq   

0000000003300f93 <Initialize>:
 3300f93:	f3 0f 1e fa          	endbr64 
 3300f97:	55                   	push   %rbp
 3300f98:	48 89 e5             	mov    %rsp,%rbp
 3300f9b:	48 83 ec 10          	sub    $0x10,%rsp
 3300f9f:	0f 20 d8             	mov    %cr3,%rax
 3300fa2:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3300fa6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3300faa:	48 89 c7             	mov    %rax,%rdi
 3300fad:	e8 46 17 00 00       	callq  33026f8 <SetupVirtualAddress>
 3300fb2:	be ff ff 00 00       	mov    $0xffff,%esi
 3300fb7:	bf 00 00 30 03       	mov    $0x3300000,%edi
 3300fbc:	e8 3b 00 00 00       	callq  3300ffc <InitializeHypervisorsSharedData>
 3300fc1:	b8 00 00 00 00       	mov    $0x0,%eax
 3300fc6:	e8 99 fb ff ff       	callq  3300b64 <LoadMBRToEntryPoint>
 3300fcb:	48 c7 c0 35 02 30 03 	mov    $0x3300235,%rax
 3300fd2:	48 89 c2             	mov    %rax,%rdx
 3300fd5:	48 c7 c0 bc 01 30 03 	mov    $0x33001bc,%rax
 3300fdc:	48 29 c2             	sub    %rax,%rdx
 3300fdf:	48 89 d0             	mov    %rdx,%rax
 3300fe2:	48 89 c2             	mov    %rax,%rdx
 3300fe5:	48 c7 c0 bc 01 30 03 	mov    $0x33001bc,%rax
 3300fec:	48 89 c6             	mov    %rax,%rsi
 3300fef:	bf 00 42 00 00       	mov    $0x4200,%edi
 3300ff4:	e8 a8 13 00 00       	callq  33023a1 <CopyMemory>
 3300ff9:	90                   	nop
 3300ffa:	c9                   	leaveq 
 3300ffb:	c3                   	retq   

0000000003300ffc <InitializeHypervisorsSharedData>:
 3300ffc:	f3 0f 1e fa          	endbr64 
 3301000:	55                   	push   %rbp
 3301001:	48 89 e5             	mov    %rsp,%rbp
 3301004:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 3301008:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
 330100c:	48 89 75 80          	mov    %rsi,-0x80(%rbp)
 3301010:	48 8d 55 c7          	lea    -0x39(%rbp),%rdx
 3301014:	48 8d 45 a8          	lea    -0x58(%rbp),%rax
 3301018:	48 89 d6             	mov    %rdx,%rsi
 330101b:	48 89 c7             	mov    %rax,%rdi
 330101e:	e8 0c fc ff ff       	callq  3300c2f <FindRSDT>
 3301023:	48 85 c0             	test   %rax,%rax
 3301026:	74 13                	je     330103b <InitializeHypervisorsSharedData+0x3f>
 3301028:	48 8d 3d e9 4d 00 00 	lea    0x4de9(%rip),%rdi        # 3305e18 <CopyMemoryToGuest+0x2c1>
 330102f:	b8 00 00 00 00       	mov    $0x0,%eax
 3301034:	e8 5c 11 00 00       	callq  3302195 <Print>
 3301039:	eb fe                	jmp    3301039 <InitializeHypervisorsSharedData+0x3d>
 330103b:	0f b6 45 c7          	movzbl -0x39(%rbp),%eax
 330103f:	0f b6 d0             	movzbl %al,%edx
 3301042:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3301046:	48 8d 75 b0          	lea    -0x50(%rbp),%rsi
 330104a:	48 8d 0d 4a 4e 00 00 	lea    0x4e4a(%rip),%rcx        # 3305e9b <CopyMemoryToGuest+0x344>
 3301051:	48 89 c7             	mov    %rax,%rdi
 3301054:	e8 88 fd ff ff       	callq  3300de1 <LocateSystemDescriptorTable>
 3301059:	48 85 c0             	test   %rax,%rax
 330105c:	74 13                	je     3301071 <InitializeHypervisorsSharedData+0x75>
 330105e:	48 8d 3d 3b 4e 00 00 	lea    0x4e3b(%rip),%rdi        # 3305ea0 <CopyMemoryToGuest+0x349>
 3301065:	b8 00 00 00 00       	mov    $0x0,%eax
 330106a:	e8 26 11 00 00       	callq  3302195 <Print>
 330106f:	eb fe                	jmp    330106f <InitializeHypervisorsSharedData+0x73>
 3301071:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301075:	48 8d 55 be          	lea    -0x42(%rbp),%rdx
 3301079:	48 8d 4d c6          	lea    -0x3a(%rbp),%rcx
 330107d:	48 89 ce             	mov    %rcx,%rsi
 3301080:	48 89 c7             	mov    %rax,%rdi
 3301083:	e8 02 f6 ff ff       	callq  330068a <GetCoresData>
 3301088:	48 85 c0             	test   %rax,%rax
 330108b:	74 13                	je     33010a0 <InitializeHypervisorsSharedData+0xa4>
 330108d:	48 8d 3d b4 4e 00 00 	lea    0x4eb4(%rip),%rdi        # 3305f48 <CopyMemoryToGuest+0x3f1>
 3301094:	b8 00 00 00 00       	mov    $0x0,%eax
 3301099:	e8 f7 10 00 00       	callq  3302195 <Print>
 330109e:	eb fe                	jmp    330109e <InitializeHypervisorsSharedData+0xa2>
 33010a0:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33010a4:	0f b6 c0             	movzbl %al,%eax
 33010a7:	89 c6                	mov    %eax,%esi
 33010a9:	48 8d 3d 39 4f 00 00 	lea    0x4f39(%rip),%rdi        # 3305fe9 <CopyMemoryToGuest+0x492>
 33010b0:	b8 00 00 00 00       	mov    $0x0,%eax
 33010b5:	e8 db 10 00 00       	callq  3302195 <Print>
 33010ba:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33010c1:	00 
 33010c2:	eb 29                	jmp    33010ed <InitializeHypervisorsSharedData+0xf1>
 33010c4:	48 8d 55 be          	lea    -0x42(%rbp),%rdx
 33010c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33010cc:	48 01 d0             	add    %rdx,%rax
 33010cf:	0f b6 00             	movzbl (%rax),%eax
 33010d2:	0f b6 c0             	movzbl %al,%eax
 33010d5:	89 c6                	mov    %eax,%esi
 33010d7:	48 8d 3d 10 4f 00 00 	lea    0x4f10(%rip),%rdi        # 3305fee <CopyMemoryToGuest+0x497>
 33010de:	b8 00 00 00 00       	mov    $0x0,%eax
 33010e3:	e8 ad 10 00 00       	callq  3302195 <Print>
 33010e8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33010ed:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33010f1:	0f b6 c0             	movzbl %al,%eax
 33010f4:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 33010f8:	72 ca                	jb     33010c4 <InitializeHypervisorsSharedData+0xc8>
 33010fa:	be 00 00 00 00       	mov    $0x0,%esi
 33010ff:	bf 01 00 00 00       	mov    $0x1,%edi
 3301104:	e8 cd f7 ff ff       	callq  33008d6 <ActivateHypervisorOnProcessor>
 3301109:	be 00 00 00 00       	mov    $0x0,%esi
 330110e:	bf 01 00 00 00       	mov    $0x1,%edi
 3301113:	e8 dc f8 ff ff       	callq  33009f4 <EnterRealModeRunFunction>
 3301118:	b8 00 86 00 00       	mov    $0x8600,%eax
 330111d:	0f b7 00             	movzwl (%rax),%eax
 3301120:	66 89 45 a6          	mov    %ax,-0x5a(%rbp)
 3301124:	48 c7 45 e0 02 86 00 	movq   $0x8602,-0x20(%rbp)
 330112b:	00 
 330112c:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 3301133:	00 
 3301134:	48 81 45 d8 00 90 00 	addq   $0x9000,-0x28(%rbp)
 330113b:	00 
 330113c:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301140:	0f b6 c0             	movzbl %al,%eax
 3301143:	48 69 c0 00 c0 21 02 	imul   $0x221c000,%rax,%rax
 330114a:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 330114e:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301152:	0f b6 c0             	movzbl %al,%eax
 3301155:	48 c1 e0 0c          	shl    $0xc,%rax
 3301159:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 330115d:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 3301161:	0f b7 f0             	movzwl %ax,%esi
 3301164:	48 8d 4d 98          	lea    -0x68(%rbp),%rcx
 3301168:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 330116c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301170:	48 89 c7             	mov    %rax,%rdi
 3301173:	e8 92 04 00 00       	callq  330160a <AllocateMemoryUsingMemoryMap>
 3301178:	48 85 c0             	test   %rax,%rax
 330117b:	74 2b                	je     33011a8 <InitializeHypervisorsSharedData+0x1ac>
 330117d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301181:	48 89 c6             	mov    %rax,%rsi
 3301184:	48 8d 3d 6d 4e 00 00 	lea    0x4e6d(%rip),%rdi        # 3305ff8 <CopyMemoryToGuest+0x4a1>
 330118b:	b8 00 00 00 00       	mov    $0x0,%eax
 3301190:	e8 00 10 00 00       	callq  3302195 <Print>
 3301195:	48 8d 3d 7c 4e 00 00 	lea    0x4e7c(%rip),%rdi        # 3306018 <CopyMemoryToGuest+0x4c1>
 330119c:	b8 00 00 00 00       	mov    $0x0,%eax
 33011a1:	e8 ef 0f 00 00       	callq  3302195 <Print>
 33011a6:	eb fe                	jmp    33011a6 <InitializeHypervisorsSharedData+0x1aa>
 33011a8:	48 8b 4d 80          	mov    -0x80(%rbp),%rcx
 33011ac:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33011b0:	48 8d 75 a6          	lea    -0x5a(%rbp),%rsi
 33011b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33011b8:	48 89 c7             	mov    %rax,%rdi
 33011bb:	e8 b7 06 00 00       	callq  3301877 <HideCodeBase>
 33011c0:	48 85 c0             	test   %rax,%rax
 33011c3:	74 13                	je     33011d8 <InitializeHypervisorsSharedData+0x1dc>
 33011c5:	48 8d 3d b4 4e 00 00 	lea    0x4eb4(%rip),%rdi        # 3306080 <CopyMemoryToGuest+0x529>
 33011cc:	b8 00 00 00 00       	mov    $0x0,%eax
 33011d1:	e8 bf 0f 00 00       	callq  3302195 <Print>
 33011d6:	eb fe                	jmp    33011d6 <InitializeHypervisorsSharedData+0x1da>
 33011d8:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33011dc:	48 89 c7             	mov    %rax,%rdi
 33011df:	e8 5f 15 00 00       	callq  3302743 <PhysicalToVirtual>
 33011e4:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33011e8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33011ec:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 33011f0:	be 00 00 00 00       	mov    $0x0,%esi
 33011f5:	48 89 c7             	mov    %rax,%rdi
 33011f8:	e8 fe 13 00 00       	callq  33025fb <SetMemory>
 33011fd:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301201:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3301205:	0f b6 55 c6          	movzbl -0x3a(%rbp),%edx
 3301209:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330120d:	88 90 22 86 00 00    	mov    %dl,0x8622(%rax)
 3301213:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301217:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 330121b:	48 89 90 28 86 00 00 	mov    %rdx,0x8628(%rax)
 3301222:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301226:	48 89 c2             	mov    %rax,%rdx
 3301229:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330122d:	48 89 90 30 86 00 00 	mov    %rdx,0x8630(%rax)
 3301234:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301238:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
 330123e:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
 3301244:	48 89 c2             	mov    %rax,%rdx
 3301247:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330124b:	48 89 90 38 86 00 00 	mov    %rdx,0x8638(%rax)
 3301252:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3301256:	48 89 c7             	mov    %rax,%rdi
 3301259:	e8 e5 14 00 00       	callq  3302743 <PhysicalToVirtual>
 330125e:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3301262:	48 89 82 40 86 00 00 	mov    %rax,0x8640(%rdx)
 3301269:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330126d:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301271:	48 89 90 48 86 00 00 	mov    %rdx,0x8648(%rax)
 3301278:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 330127c:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3301282:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301288:	48 89 c2             	mov    %rax,%rdx
 330128b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330128f:	48 89 90 50 86 00 00 	mov    %rdx,0x8650(%rax)
 3301296:	c6 45 f7 00          	movb   $0x0,-0x9(%rbp)
 330129a:	e9 f6 00 00 00       	jmpq   3301395 <InitializeHypervisorsSharedData+0x399>
 330129f:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 33012a3:	48 69 d0 00 c0 21 02 	imul   $0x221c000,%rax,%rdx
 33012aa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33012ae:	48 01 d0             	add    %rdx,%rax
 33012b1:	48 05 00 90 00 00    	add    $0x9000,%rax
 33012b7:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 33012bb:	48 89 c1             	mov    %rax,%rcx
 33012be:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33012c2:	48 63 d2             	movslq %edx,%rdx
 33012c5:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 33012cc:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 33012d0:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 33012d4:	0f b6 c0             	movzbl %al,%eax
 33012d7:	48 69 d0 00 c0 21 02 	imul   $0x221c000,%rax,%rdx
 33012de:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33012e2:	48 01 c2             	add    %rax,%rdx
 33012e5:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 33012e9:	48 c1 e0 0c          	shl    $0xc,%rax
 33012ed:	48 01 d0             	add    %rdx,%rax
 33012f0:	48 05 00 90 00 00    	add    $0x9000,%rax
 33012f6:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 33012fa:	48 89 c1             	mov    %rax,%rcx
 33012fd:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301301:	48 63 d2             	movslq %edx,%rdx
 3301304:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 330130b:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 330130f:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
 3301313:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301317:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330131b:	48 63 d2             	movslq %edx,%rdx
 330131e:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 3301325:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3301329:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330132d:	48 63 c9             	movslq %ecx,%rcx
 3301330:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3301337:	48 8b 14 ca          	mov    (%rdx,%rcx,8),%rdx
 330133b:	48 89 90 88 00 00 00 	mov    %rdx,0x88(%rax)
 3301342:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301346:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330134a:	48 63 d2             	movslq %edx,%rdx
 330134d:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 3301354:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3301358:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330135c:	48 89 90 88 bb 21 02 	mov    %rdx,0x221bb88(%rax)
 3301363:	0f b6 55 f7          	movzbl -0x9(%rbp),%edx
 3301367:	0f b6 4d f7          	movzbl -0x9(%rbp),%ecx
 330136b:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330136f:	48 63 c9             	movslq %ecx,%rcx
 3301372:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3301379:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 330137d:	48 63 d2             	movslq %edx,%rdx
 3301380:	0f b6 54 15 be       	movzbl -0x42(%rbp,%rdx,1),%edx
 3301385:	88 90 00 b0 21 02    	mov    %dl,0x221b000(%rax)
 330138b:	0f b6 45 f7          	movzbl -0x9(%rbp),%eax
 330138f:	83 c0 01             	add    $0x1,%eax
 3301392:	88 45 f7             	mov    %al,-0x9(%rbp)
 3301395:	0f b6 45 c6          	movzbl -0x3a(%rbp),%eax
 3301399:	38 45 f7             	cmp    %al,-0x9(%rbp)
 330139c:	0f 82 fd fe ff ff    	jb     330129f <InitializeHypervisorsSharedData+0x2a3>
 33013a2:	c7 45 f0 00 00 00 00 	movl   $0x0,-0x10(%rbp)
 33013a9:	c7 45 ec 00 00 00 00 	movl   $0x0,-0x14(%rbp)
 33013b0:	e9 ff 01 00 00       	jmpq   33015b4 <InitializeHypervisorsSharedData+0x5b8>
 33013b5:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33013b8:	48 89 d0             	mov    %rdx,%rax
 33013bb:	48 01 c0             	add    %rax,%rax
 33013be:	48 01 d0             	add    %rdx,%rax
 33013c1:	48 c1 e0 03          	shl    $0x3,%rax
 33013c5:	48 89 c2             	mov    %rax,%rdx
 33013c8:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33013cc:	48 01 d0             	add    %rdx,%rax
 33013cf:	8b 40 10             	mov    0x10(%rax),%eax
 33013d2:	83 f8 01             	cmp    $0x1,%eax
 33013d5:	0f 85 de 00 00 00    	jne    33014b9 <InitializeHypervisorsSharedData+0x4bd>
 33013db:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33013de:	48 89 d0             	mov    %rdx,%rax
 33013e1:	48 01 c0             	add    %rax,%rax
 33013e4:	48 01 d0             	add    %rdx,%rax
 33013e7:	48 c1 e0 03          	shl    $0x3,%rax
 33013eb:	48 89 c2             	mov    %rax,%rdx
 33013ee:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33013f2:	48 01 d0             	add    %rdx,%rax
 33013f5:	48 8b 08             	mov    (%rax),%rcx
 33013f8:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 33013fc:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33013ff:	48 89 d0             	mov    %rdx,%rax
 3301402:	48 01 c0             	add    %rax,%rax
 3301405:	48 01 d0             	add    %rdx,%rax
 3301408:	48 c1 e0 03          	shl    $0x3,%rax
 330140c:	48 01 f0             	add    %rsi,%rax
 330140f:	48 05 80 80 00 00    	add    $0x8080,%rax
 3301415:	48 89 08             	mov    %rcx,(%rax)
 3301418:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330141b:	48 89 d0             	mov    %rdx,%rax
 330141e:	48 01 c0             	add    %rax,%rax
 3301421:	48 01 d0             	add    %rdx,%rax
 3301424:	48 c1 e0 03          	shl    $0x3,%rax
 3301428:	48 89 c2             	mov    %rax,%rdx
 330142b:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330142f:	48 01 d0             	add    %rdx,%rax
 3301432:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301436:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 330143a:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330143d:	48 89 d0             	mov    %rdx,%rax
 3301440:	48 01 c0             	add    %rax,%rax
 3301443:	48 01 d0             	add    %rdx,%rax
 3301446:	48 c1 e0 03          	shl    $0x3,%rax
 330144a:	48 01 f0             	add    %rsi,%rax
 330144d:	48 05 88 80 00 00    	add    $0x8088,%rax
 3301453:	48 89 08             	mov    %rcx,(%rax)
 3301456:	48 8b 4d c8          	mov    -0x38(%rbp),%rcx
 330145a:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330145d:	48 89 d0             	mov    %rdx,%rax
 3301460:	48 01 c0             	add    %rax,%rax
 3301463:	48 01 d0             	add    %rdx,%rax
 3301466:	48 c1 e0 03          	shl    $0x3,%rax
 330146a:	48 01 c8             	add    %rcx,%rax
 330146d:	48 05 90 80 00 00    	add    $0x8090,%rax
 3301473:	c7 00 01 00 00 00    	movl   $0x1,(%rax)
 3301479:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330147c:	48 89 d0             	mov    %rdx,%rax
 330147f:	48 01 c0             	add    %rax,%rax
 3301482:	48 01 d0             	add    %rdx,%rax
 3301485:	48 c1 e0 03          	shl    $0x3,%rax
 3301489:	48 89 c2             	mov    %rax,%rdx
 330148c:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301490:	48 01 d0             	add    %rdx,%rax
 3301493:	8b 48 14             	mov    0x14(%rax),%ecx
 3301496:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 330149a:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330149d:	48 89 d0             	mov    %rdx,%rax
 33014a0:	48 01 c0             	add    %rax,%rax
 33014a3:	48 01 d0             	add    %rdx,%rax
 33014a6:	48 c1 e0 03          	shl    $0x3,%rax
 33014aa:	48 01 f0             	add    %rsi,%rax
 33014ad:	48 05 94 80 00 00    	add    $0x8094,%rax
 33014b3:	89 08                	mov    %ecx,(%rax)
 33014b5:	83 45 f0 01          	addl   $0x1,-0x10(%rbp)
 33014b9:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014bc:	48 89 d0             	mov    %rdx,%rax
 33014bf:	48 01 c0             	add    %rax,%rax
 33014c2:	48 01 d0             	add    %rdx,%rax
 33014c5:	48 c1 e0 03          	shl    $0x3,%rax
 33014c9:	48 89 c2             	mov    %rax,%rdx
 33014cc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33014d0:	48 01 d0             	add    %rdx,%rax
 33014d3:	48 8b 08             	mov    (%rax),%rcx
 33014d6:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 33014da:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014dd:	48 89 d0             	mov    %rdx,%rax
 33014e0:	48 01 c0             	add    %rax,%rax
 33014e3:	48 01 d0             	add    %rdx,%rax
 33014e6:	48 c1 e0 03          	shl    $0x3,%rax
 33014ea:	48 01 f0             	add    %rsi,%rax
 33014ed:	48 05 50 83 00 00    	add    $0x8350,%rax
 33014f3:	48 89 48 01          	mov    %rcx,0x1(%rax)
 33014f7:	8b 55 ec             	mov    -0x14(%rbp),%edx
 33014fa:	48 89 d0             	mov    %rdx,%rax
 33014fd:	48 01 c0             	add    %rax,%rax
 3301500:	48 01 d0             	add    %rdx,%rax
 3301503:	48 c1 e0 03          	shl    $0x3,%rax
 3301507:	48 89 c2             	mov    %rax,%rdx
 330150a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330150e:	48 01 d0             	add    %rdx,%rax
 3301511:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301515:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 3301519:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330151c:	48 89 d0             	mov    %rdx,%rax
 330151f:	48 01 c0             	add    %rax,%rax
 3301522:	48 01 d0             	add    %rdx,%rax
 3301525:	48 c1 e0 03          	shl    $0x3,%rax
 3301529:	48 01 f0             	add    %rsi,%rax
 330152c:	48 05 50 83 00 00    	add    $0x8350,%rax
 3301532:	48 89 48 09          	mov    %rcx,0x9(%rax)
 3301536:	8b 55 ec             	mov    -0x14(%rbp),%edx
 3301539:	48 89 d0             	mov    %rdx,%rax
 330153c:	48 01 c0             	add    %rax,%rax
 330153f:	48 01 d0             	add    %rdx,%rax
 3301542:	48 c1 e0 03          	shl    $0x3,%rax
 3301546:	48 89 c2             	mov    %rax,%rdx
 3301549:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330154d:	48 01 d0             	add    %rdx,%rax
 3301550:	8b 48 10             	mov    0x10(%rax),%ecx
 3301553:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 3301557:	8b 55 ec             	mov    -0x14(%rbp),%edx
 330155a:	48 89 d0             	mov    %rdx,%rax
 330155d:	48 01 c0             	add    %rax,%rax
 3301560:	48 01 d0             	add    %rdx,%rax
 3301563:	48 c1 e0 03          	shl    $0x3,%rax
 3301567:	48 01 f0             	add    %rsi,%rax
 330156a:	48 05 60 83 00 00    	add    $0x8360,%rax
 3301570:	89 48 01             	mov    %ecx,0x1(%rax)
 3301573:	8b 55 ec             	mov    -0x14(%rbp),%edx
 3301576:	48 89 d0             	mov    %rdx,%rax
 3301579:	48 01 c0             	add    %rax,%rax
 330157c:	48 01 d0             	add    %rdx,%rax
 330157f:	48 c1 e0 03          	shl    $0x3,%rax
 3301583:	48 89 c2             	mov    %rax,%rdx
 3301586:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330158a:	48 01 d0             	add    %rdx,%rax
 330158d:	8b 48 14             	mov    0x14(%rax),%ecx
 3301590:	48 8b 75 c8          	mov    -0x38(%rbp),%rsi
 3301594:	8b 55 ec             	mov    -0x14(%rbp),%edx
 3301597:	48 89 d0             	mov    %rdx,%rax
 330159a:	48 01 c0             	add    %rax,%rax
 330159d:	48 01 d0             	add    %rdx,%rax
 33015a0:	48 c1 e0 03          	shl    $0x3,%rax
 33015a4:	48 01 f0             	add    %rsi,%rax
 33015a7:	48 05 60 83 00 00    	add    $0x8360,%rax
 33015ad:	89 48 05             	mov    %ecx,0x5(%rax)
 33015b0:	83 45 ec 01          	addl   $0x1,-0x14(%rbp)
 33015b4:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 33015b8:	0f b7 c0             	movzwl %ax,%eax
 33015bb:	39 45 ec             	cmp    %eax,-0x14(%rbp)
 33015be:	0f 82 f1 fd ff ff    	jb     33013b5 <InitializeHypervisorsSharedData+0x3b9>
 33015c4:	0f b7 45 a6          	movzwl -0x5a(%rbp),%eax
 33015c8:	89 c2                	mov    %eax,%edx
 33015ca:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015ce:	88 90 21 86 00 00    	mov    %dl,0x8621(%rax)
 33015d4:	8b 45 f0             	mov    -0x10(%rbp),%eax
 33015d7:	89 c2                	mov    %eax,%edx
 33015d9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015dd:	88 90 50 83 00 00    	mov    %dl,0x8350(%rax)
 33015e3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33015e7:	48 89 c7             	mov    %rax,%rdi
 33015ea:	e8 fd 3f 00 00       	callq  33055ec <SetupE820Hook>
 33015ef:	48 85 c0             	test   %rax,%rax
 33015f2:	74 13                	je     3301607 <InitializeHypervisorsSharedData+0x60b>
 33015f4:	48 8d 3d 2d 4b 00 00 	lea    0x4b2d(%rip),%rdi        # 3306128 <CopyMemoryToGuest+0x5d1>
 33015fb:	b8 00 00 00 00       	mov    $0x0,%eax
 3301600:	e8 90 0b 00 00       	callq  3302195 <Print>
 3301605:	eb fe                	jmp    3301605 <InitializeHypervisorsSharedData+0x609>
 3301607:	90                   	nop
 3301608:	c9                   	leaveq 
 3301609:	c3                   	retq   

000000000330160a <AllocateMemoryUsingMemoryMap>:
 330160a:	f3 0f 1e fa          	endbr64 
 330160e:	55                   	push   %rbp
 330160f:	48 89 e5             	mov    %rsp,%rbp
 3301612:	48 83 ec 50          	sub    $0x50,%rsp
 3301616:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330161a:	89 75 c4             	mov    %esi,-0x3c(%rbp)
 330161d:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 3301621:	48 89 4d b0          	mov    %rcx,-0x50(%rbp)
 3301625:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3301629:	48 05 ff ff 1f 00    	add    $0x1fffff,%rax
 330162f:	48 25 00 00 e0 ff    	and    $0xffffffffffe00000,%rax
 3301635:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3301639:	c7 45 fc 01 00 ff ff 	movl   $0xffff0001,-0x4(%rbp)
 3301640:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3301647:	00 
 3301648:	eb 63                	jmp    33016ad <AllocateMemoryUsingMemoryMap+0xa3>
 330164a:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 330164e:	48 89 d0             	mov    %rdx,%rax
 3301651:	48 01 c0             	add    %rax,%rax
 3301654:	48 01 d0             	add    %rdx,%rax
 3301657:	48 c1 e0 03          	shl    $0x3,%rax
 330165b:	48 89 c2             	mov    %rax,%rdx
 330165e:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301662:	48 01 d0             	add    %rdx,%rax
 3301665:	8b 40 10             	mov    0x10(%rax),%eax
 3301668:	83 f8 01             	cmp    $0x1,%eax
 330166b:	75 37                	jne    33016a4 <AllocateMemoryUsingMemoryMap+0x9a>
 330166d:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301671:	48 89 d0             	mov    %rdx,%rax
 3301674:	48 01 c0             	add    %rax,%rax
 3301677:	48 01 d0             	add    %rdx,%rax
 330167a:	48 c1 e0 03          	shl    $0x3,%rax
 330167e:	48 89 c2             	mov    %rax,%rdx
 3301681:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301685:	48 01 d0             	add    %rdx,%rax
 3301688:	48 8b 40 08          	mov    0x8(%rax),%rax
 330168c:	48 39 45 b8          	cmp    %rax,-0x48(%rbp)
 3301690:	73 15                	jae    33016a7 <AllocateMemoryUsingMemoryMap+0x9d>
 3301692:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3301696:	39 45 fc             	cmp    %eax,-0x4(%rbp)
 3301699:	7d 0d                	jge    33016a8 <AllocateMemoryUsingMemoryMap+0x9e>
 330169b:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330169f:	89 45 fc             	mov    %eax,-0x4(%rbp)
 33016a2:	eb 04                	jmp    33016a8 <AllocateMemoryUsingMemoryMap+0x9e>
 33016a4:	90                   	nop
 33016a5:	eb 01                	jmp    33016a8 <AllocateMemoryUsingMemoryMap+0x9e>
 33016a7:	90                   	nop
 33016a8:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 33016ad:	8b 45 c4             	mov    -0x3c(%rbp),%eax
 33016b0:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 33016b4:	72 94                	jb     330164a <AllocateMemoryUsingMemoryMap+0x40>
 33016b6:	81 7d fc 01 00 ff ff 	cmpl   $0xffff0001,-0x4(%rbp)
 33016bd:	75 0a                	jne    33016c9 <AllocateMemoryUsingMemoryMap+0xbf>
 33016bf:	b8 04 00 00 00       	mov    $0x4,%eax
 33016c4:	e9 01 01 00 00       	jmpq   33017ca <AllocateMemoryUsingMemoryMap+0x1c0>
 33016c9:	8b 45 fc             	mov    -0x4(%rbp),%eax
 33016cc:	48 63 d0             	movslq %eax,%rdx
 33016cf:	48 89 d0             	mov    %rdx,%rax
 33016d2:	48 01 c0             	add    %rax,%rax
 33016d5:	48 01 d0             	add    %rdx,%rax
 33016d8:	48 c1 e0 03          	shl    $0x3,%rax
 33016dc:	48 89 c2             	mov    %rax,%rdx
 33016df:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33016e3:	48 01 d0             	add    %rdx,%rax
 33016e6:	48 8b 00             	mov    (%rax),%rax
 33016e9:	25 ff 0f 00 00       	and    $0xfff,%eax
 33016ee:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33016f2:	8b 45 fc             	mov    -0x4(%rbp),%eax
 33016f5:	48 63 d0             	movslq %eax,%rdx
 33016f8:	48 89 d0             	mov    %rdx,%rax
 33016fb:	48 01 c0             	add    %rax,%rax
 33016fe:	48 01 d0             	add    %rdx,%rax
 3301701:	48 c1 e0 03          	shl    $0x3,%rax
 3301705:	48 89 c2             	mov    %rax,%rdx
 3301708:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330170c:	48 01 d0             	add    %rdx,%rax
 330170f:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301713:	25 ff 0f 00 00       	and    $0xfff,%eax
 3301718:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 330171c:	8b 45 fc             	mov    -0x4(%rbp),%eax
 330171f:	48 63 d0             	movslq %eax,%rdx
 3301722:	48 89 d0             	mov    %rdx,%rax
 3301725:	48 01 c0             	add    %rax,%rax
 3301728:	48 01 d0             	add    %rdx,%rax
 330172b:	48 c1 e0 03          	shl    $0x3,%rax
 330172f:	48 89 c2             	mov    %rax,%rdx
 3301732:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301736:	48 01 d0             	add    %rdx,%rax
 3301739:	48 8b 48 08          	mov    0x8(%rax),%rcx
 330173d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301741:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301745:	48 01 c2             	add    %rax,%rdx
 3301748:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330174c:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301750:	8b 45 fc             	mov    -0x4(%rbp),%eax
 3301753:	48 63 d0             	movslq %eax,%rdx
 3301756:	48 89 d0             	mov    %rdx,%rax
 3301759:	48 01 c0             	add    %rax,%rax
 330175c:	48 01 d0             	add    %rdx,%rax
 330175f:	48 c1 e0 03          	shl    $0x3,%rax
 3301763:	48 89 c2             	mov    %rax,%rdx
 3301766:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330176a:	48 01 d0             	add    %rdx,%rax
 330176d:	48 29 f1             	sub    %rsi,%rcx
 3301770:	48 89 ca             	mov    %rcx,%rdx
 3301773:	48 89 50 08          	mov    %rdx,0x8(%rax)
 3301777:	8b 45 fc             	mov    -0x4(%rbp),%eax
 330177a:	48 63 d0             	movslq %eax,%rdx
 330177d:	48 89 d0             	mov    %rdx,%rax
 3301780:	48 01 c0             	add    %rax,%rax
 3301783:	48 01 d0             	add    %rdx,%rax
 3301786:	48 c1 e0 03          	shl    $0x3,%rax
 330178a:	48 89 c2             	mov    %rax,%rdx
 330178d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301791:	48 01 d0             	add    %rdx,%rax
 3301794:	48 8b 08             	mov    (%rax),%rcx
 3301797:	8b 45 fc             	mov    -0x4(%rbp),%eax
 330179a:	48 63 d0             	movslq %eax,%rdx
 330179d:	48 89 d0             	mov    %rdx,%rax
 33017a0:	48 01 c0             	add    %rax,%rax
 33017a3:	48 01 d0             	add    %rdx,%rax
 33017a6:	48 c1 e0 03          	shl    $0x3,%rax
 33017aa:	48 89 c2             	mov    %rax,%rdx
 33017ad:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33017b1:	48 01 d0             	add    %rdx,%rax
 33017b4:	48 8b 40 08          	mov    0x8(%rax),%rax
 33017b8:	48 01 c8             	add    %rcx,%rax
 33017bb:	48 89 c2             	mov    %rax,%rdx
 33017be:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 33017c2:	48 89 10             	mov    %rdx,(%rax)
 33017c5:	b8 00 00 00 00       	mov    $0x0,%eax
 33017ca:	c9                   	leaveq 
 33017cb:	c3                   	retq   

00000000033017cc <PrintMemoryRanges>:
 33017cc:	f3 0f 1e fa          	endbr64 
 33017d0:	55                   	push   %rbp
 33017d1:	48 89 e5             	mov    %rsp,%rbp
 33017d4:	48 83 ec 20          	sub    $0x20,%rsp
 33017d8:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 33017dc:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 33017e0:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33017e7:	00 
 33017e8:	eb 7b                	jmp    3301865 <PrintMemoryRanges+0x99>
 33017ea:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33017ee:	48 89 d0             	mov    %rdx,%rax
 33017f1:	48 01 c0             	add    %rax,%rax
 33017f4:	48 01 d0             	add    %rdx,%rax
 33017f7:	48 c1 e0 03          	shl    $0x3,%rax
 33017fb:	48 89 c2             	mov    %rax,%rdx
 33017fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301802:	48 01 d0             	add    %rdx,%rax
 3301805:	8b 70 10             	mov    0x10(%rax),%esi
 3301808:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330180c:	48 89 d0             	mov    %rdx,%rax
 330180f:	48 01 c0             	add    %rax,%rax
 3301812:	48 01 d0             	add    %rdx,%rax
 3301815:	48 c1 e0 03          	shl    $0x3,%rax
 3301819:	48 89 c2             	mov    %rax,%rdx
 330181c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301820:	48 01 d0             	add    %rdx,%rax
 3301823:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301827:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330182b:	48 89 d0             	mov    %rdx,%rax
 330182e:	48 01 c0             	add    %rax,%rax
 3301831:	48 01 d0             	add    %rdx,%rax
 3301834:	48 c1 e0 03          	shl    $0x3,%rax
 3301838:	48 89 c2             	mov    %rax,%rdx
 330183b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330183f:	48 01 d0             	add    %rdx,%rax
 3301842:	48 8b 10             	mov    (%rax),%rdx
 3301845:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301849:	41 89 f0             	mov    %esi,%r8d
 330184c:	48 89 c6             	mov    %rax,%rsi
 330184f:	48 8d 3d 52 49 00 00 	lea    0x4952(%rip),%rdi        # 33061a8 <CopyMemoryToGuest+0x651>
 3301856:	b8 00 00 00 00       	mov    $0x0,%eax
 330185b:	e8 35 09 00 00       	callq  3302195 <Print>
 3301860:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3301865:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301869:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 330186d:	0f 82 77 ff ff ff    	jb     33017ea <PrintMemoryRanges+0x1e>
 3301873:	90                   	nop
 3301874:	90                   	nop
 3301875:	c9                   	leaveq 
 3301876:	c3                   	retq   

0000000003301877 <HideCodeBase>:
 3301877:	f3 0f 1e fa          	endbr64 
 330187b:	55                   	push   %rbp
 330187c:	48 89 e5             	mov    %rsp,%rbp
 330187f:	48 83 c4 80          	add    $0xffffffffffffff80,%rsp
 3301883:	48 89 7d 98          	mov    %rdi,-0x68(%rbp)
 3301887:	48 89 75 90          	mov    %rsi,-0x70(%rbp)
 330188b:	48 89 55 88          	mov    %rdx,-0x78(%rbp)
 330188f:	48 89 4d 80          	mov    %rcx,-0x80(%rbp)
 3301893:	48 c7 45 f8 01 00 ff 	movq   $0xffffffffffff0001,-0x8(%rbp)
 330189a:	ff 
 330189b:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 330189f:	0f b7 00             	movzwl (%rax),%eax
 33018a2:	0f b7 c0             	movzwl %ax,%eax
 33018a5:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33018a9:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 33018b0:	00 
 33018b1:	e9 16 01 00 00       	jmpq   33019cc <HideCodeBase+0x155>
 33018b6:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33018ba:	48 89 d0             	mov    %rdx,%rax
 33018bd:	48 01 c0             	add    %rax,%rax
 33018c0:	48 01 d0             	add    %rdx,%rax
 33018c3:	48 c1 e0 03          	shl    $0x3,%rax
 33018c7:	48 89 c2             	mov    %rax,%rdx
 33018ca:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33018ce:	48 01 d0             	add    %rdx,%rax
 33018d1:	8b 40 10             	mov    0x10(%rax),%eax
 33018d4:	83 f8 01             	cmp    $0x1,%eax
 33018d7:	0f 85 ea 00 00 00    	jne    33019c7 <HideCodeBase+0x150>
 33018dd:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33018e1:	48 89 d0             	mov    %rdx,%rax
 33018e4:	48 01 c0             	add    %rax,%rax
 33018e7:	48 01 d0             	add    %rdx,%rax
 33018ea:	48 c1 e0 03          	shl    $0x3,%rax
 33018ee:	48 89 c2             	mov    %rax,%rdx
 33018f1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33018f5:	48 01 d0             	add    %rdx,%rax
 33018f8:	48 8b 00             	mov    (%rax),%rax
 33018fb:	48 39 45 88          	cmp    %rax,-0x78(%rbp)
 33018ff:	0f 86 c2 00 00 00    	jbe    33019c7 <HideCodeBase+0x150>
 3301905:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301909:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 330190d:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301911:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301915:	48 89 d0             	mov    %rdx,%rax
 3301918:	48 01 c0             	add    %rax,%rax
 330191b:	48 01 d0             	add    %rdx,%rax
 330191e:	48 c1 e0 03          	shl    $0x3,%rax
 3301922:	48 89 c2             	mov    %rax,%rdx
 3301925:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301929:	48 01 d0             	add    %rdx,%rax
 330192c:	48 8b 08             	mov    (%rax),%rcx
 330192f:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301933:	48 89 d0             	mov    %rdx,%rax
 3301936:	48 01 c0             	add    %rax,%rax
 3301939:	48 01 d0             	add    %rdx,%rax
 330193c:	48 c1 e0 03          	shl    $0x3,%rax
 3301940:	48 89 c2             	mov    %rax,%rdx
 3301943:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301947:	48 01 d0             	add    %rdx,%rax
 330194a:	48 8b 40 08          	mov    0x8(%rax),%rax
 330194e:	48 01 c8             	add    %rcx,%rax
 3301951:	48 39 c6             	cmp    %rax,%rsi
 3301954:	73 71                	jae    33019c7 <HideCodeBase+0x150>
 3301956:	48 81 7d f8 01 00 ff 	cmpq   $0xffffffffffff0001,-0x8(%rbp)
 330195d:	ff 
 330195e:	75 0a                	jne    330196a <HideCodeBase+0xf3>
 3301960:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3301964:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3301968:	eb 5d                	jmp    33019c7 <HideCodeBase+0x150>
 330196a:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330196e:	48 89 d0             	mov    %rdx,%rax
 3301971:	48 01 c0             	add    %rax,%rax
 3301974:	48 01 d0             	add    %rdx,%rax
 3301977:	48 c1 e0 03          	shl    $0x3,%rax
 330197b:	48 89 c2             	mov    %rax,%rdx
 330197e:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301982:	48 01 d0             	add    %rdx,%rax
 3301985:	48 8b 00             	mov    (%rax),%rax
 3301988:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 330198c:	48 89 d1             	mov    %rdx,%rcx
 330198f:	48 29 c1             	sub    %rax,%rcx
 3301992:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 3301996:	48 89 d0             	mov    %rdx,%rax
 3301999:	48 01 c0             	add    %rax,%rax
 330199c:	48 01 d0             	add    %rdx,%rax
 330199f:	48 c1 e0 03          	shl    $0x3,%rax
 33019a3:	48 89 c2             	mov    %rax,%rdx
 33019a6:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 33019aa:	48 01 d0             	add    %rdx,%rax
 33019ad:	48 8b 00             	mov    (%rax),%rax
 33019b0:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33019b4:	48 29 c2             	sub    %rax,%rdx
 33019b7:	48 89 d0             	mov    %rdx,%rax
 33019ba:	48 39 c1             	cmp    %rax,%rcx
 33019bd:	76 08                	jbe    33019c7 <HideCodeBase+0x150>
 33019bf:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33019c3:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33019c7:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 33019cc:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33019d0:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 33019d4:	0f 82 dc fe ff ff    	jb     33018b6 <HideCodeBase+0x3f>
 33019da:	48 81 7d f8 01 00 ff 	cmpq   $0xffffffffffff0001,-0x8(%rbp)
 33019e1:	ff 
 33019e2:	75 0a                	jne    33019ee <HideCodeBase+0x177>
 33019e4:	b8 19 00 00 00       	mov    $0x19,%eax
 33019e9:	e9 96 02 00 00       	jmpq   3301c84 <HideCodeBase+0x40d>
 33019ee:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33019f2:	48 89 d0             	mov    %rdx,%rax
 33019f5:	48 01 c0             	add    %rax,%rax
 33019f8:	48 01 d0             	add    %rdx,%rax
 33019fb:	48 c1 e0 03          	shl    $0x3,%rax
 33019ff:	48 89 c2             	mov    %rax,%rdx
 3301a02:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a06:	48 01 d0             	add    %rdx,%rax
 3301a09:	48 8b 48 08          	mov    0x8(%rax),%rcx
 3301a0d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a11:	48 89 d0             	mov    %rdx,%rax
 3301a14:	48 01 c0             	add    %rax,%rax
 3301a17:	48 01 d0             	add    %rdx,%rax
 3301a1a:	48 c1 e0 03          	shl    $0x3,%rax
 3301a1e:	48 89 c2             	mov    %rax,%rdx
 3301a21:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a25:	48 01 d0             	add    %rdx,%rax
 3301a28:	48 8b 00             	mov    (%rax),%rax
 3301a2b:	48 89 ca             	mov    %rcx,%rdx
 3301a2e:	48 89 c6             	mov    %rax,%rsi
 3301a31:	48 8d 3d a8 47 00 00 	lea    0x47a8(%rip),%rdi        # 33061e0 <CopyMemoryToGuest+0x689>
 3301a38:	b8 00 00 00 00       	mov    $0x0,%eax
 3301a3d:	e8 f9 07 00 00       	callq  330223b <PrintDebugLevelDebug>
 3301a42:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301a46:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3301a4a:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301a4e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a52:	48 89 d0             	mov    %rdx,%rax
 3301a55:	48 01 c0             	add    %rax,%rax
 3301a58:	48 01 d0             	add    %rdx,%rax
 3301a5b:	48 c1 e0 03          	shl    $0x3,%rax
 3301a5f:	48 89 c2             	mov    %rax,%rdx
 3301a62:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a66:	48 01 d0             	add    %rdx,%rax
 3301a69:	48 8b 08             	mov    (%rax),%rcx
 3301a6c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301a70:	48 89 d0             	mov    %rdx,%rax
 3301a73:	48 01 c0             	add    %rax,%rax
 3301a76:	48 01 d0             	add    %rdx,%rax
 3301a79:	48 c1 e0 03          	shl    $0x3,%rax
 3301a7d:	48 89 c2             	mov    %rax,%rdx
 3301a80:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301a84:	48 01 d0             	add    %rdx,%rax
 3301a87:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301a8b:	48 01 c8             	add    %rcx,%rax
 3301a8e:	48 39 c6             	cmp    %rax,%rsi
 3301a91:	76 0a                	jbe    3301a9d <HideCodeBase+0x226>
 3301a93:	b8 17 00 00 00       	mov    $0x17,%eax
 3301a98:	e9 e7 01 00 00       	jmpq   3301c84 <HideCodeBase+0x40d>
 3301a9d:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301aa1:	48 89 d0             	mov    %rdx,%rax
 3301aa4:	48 01 c0             	add    %rax,%rax
 3301aa7:	48 01 d0             	add    %rdx,%rax
 3301aaa:	48 c1 e0 03          	shl    $0x3,%rax
 3301aae:	48 89 c2             	mov    %rax,%rdx
 3301ab1:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301ab5:	48 01 d0             	add    %rdx,%rax
 3301ab8:	48 8b 00             	mov    (%rax),%rax
 3301abb:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3301abf:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301ac3:	48 89 d0             	mov    %rdx,%rax
 3301ac6:	48 01 c0             	add    %rax,%rax
 3301ac9:	48 01 d0             	add    %rdx,%rax
 3301acc:	48 c1 e0 03          	shl    $0x3,%rax
 3301ad0:	48 89 c2             	mov    %rax,%rdx
 3301ad3:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301ad7:	48 01 d0             	add    %rdx,%rax
 3301ada:	48 8b 00             	mov    (%rax),%rax
 3301add:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 3301ae1:	48 29 c2             	sub    %rax,%rdx
 3301ae4:	48 89 d0             	mov    %rdx,%rax
 3301ae7:	48 2d 00 10 00 00    	sub    $0x1000,%rax
 3301aed:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3301af1:	c7 45 d0 01 00 00 00 	movl   $0x1,-0x30(%rbp)
 3301af8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301afc:	48 89 d0             	mov    %rdx,%rax
 3301aff:	48 01 c0             	add    %rax,%rax
 3301b02:	48 01 d0             	add    %rdx,%rax
 3301b05:	48 c1 e0 03          	shl    $0x3,%rax
 3301b09:	48 89 c2             	mov    %rax,%rdx
 3301b0c:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301b10:	48 01 d0             	add    %rdx,%rax
 3301b13:	8b 40 14             	mov    0x14(%rax),%eax
 3301b16:	89 45 d4             	mov    %eax,-0x2c(%rbp)
 3301b19:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3301b1d:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3301b23:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301b29:	48 89 c2             	mov    %rax,%rdx
 3301b2c:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3301b30:	48 01 d0             	add    %rdx,%rax
 3301b33:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3301b37:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301b3b:	48 89 d0             	mov    %rdx,%rax
 3301b3e:	48 01 c0             	add    %rax,%rax
 3301b41:	48 01 d0             	add    %rdx,%rax
 3301b44:	48 c1 e0 03          	shl    $0x3,%rax
 3301b48:	48 89 c2             	mov    %rax,%rdx
 3301b4b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301b4f:	48 01 d0             	add    %rdx,%rax
 3301b52:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301b56:	48 2b 45 80          	sub    -0x80(%rbp),%rax
 3301b5a:	48 89 c2             	mov    %rax,%rdx
 3301b5d:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3301b61:	48 29 c2             	sub    %rax,%rdx
 3301b64:	48 89 d0             	mov    %rdx,%rax
 3301b67:	48 2d 00 10 00 00    	sub    $0x1000,%rax
 3301b6d:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3301b73:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3301b77:	c7 45 b0 01 00 00 00 	movl   $0x1,-0x50(%rbp)
 3301b7e:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301b82:	48 89 d0             	mov    %rdx,%rax
 3301b85:	48 01 c0             	add    %rax,%rax
 3301b88:	48 01 d0             	add    %rdx,%rax
 3301b8b:	48 c1 e0 03          	shl    $0x3,%rax
 3301b8f:	48 89 c2             	mov    %rax,%rdx
 3301b92:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301b96:	48 01 d0             	add    %rdx,%rax
 3301b99:	8b 40 14             	mov    0x14(%rax),%eax
 3301b9c:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 3301b9f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301ba3:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3301ba7:	eb 54                	jmp    3301bfd <HideCodeBase+0x386>
 3301ba9:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301bad:	48 89 d0             	mov    %rdx,%rax
 3301bb0:	48 01 c0             	add    %rax,%rax
 3301bb3:	48 01 d0             	add    %rdx,%rax
 3301bb6:	48 c1 e0 03          	shl    $0x3,%rax
 3301bba:	48 8d 50 e8          	lea    -0x18(%rax),%rdx
 3301bbe:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301bc2:	48 8d 34 02          	lea    (%rdx,%rax,1),%rsi
 3301bc6:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301bca:	48 89 d0             	mov    %rdx,%rax
 3301bcd:	48 01 c0             	add    %rax,%rax
 3301bd0:	48 01 d0             	add    %rdx,%rax
 3301bd3:	48 c1 e0 03          	shl    $0x3,%rax
 3301bd7:	48 89 c2             	mov    %rax,%rdx
 3301bda:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301bde:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301be2:	48 8b 06             	mov    (%rsi),%rax
 3301be5:	48 8b 56 08          	mov    0x8(%rsi),%rdx
 3301be9:	48 89 01             	mov    %rax,(%rcx)
 3301bec:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301bf0:	48 8b 46 10          	mov    0x10(%rsi),%rax
 3301bf4:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301bf8:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
 3301bfd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301c01:	48 3b 45 f8          	cmp    -0x8(%rbp),%rax
 3301c05:	77 a2                	ja     3301ba9 <HideCodeBase+0x332>
 3301c07:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3301c0b:	48 89 d0             	mov    %rdx,%rax
 3301c0e:	48 01 c0             	add    %rax,%rax
 3301c11:	48 01 d0             	add    %rdx,%rax
 3301c14:	48 c1 e0 03          	shl    $0x3,%rax
 3301c18:	48 89 c2             	mov    %rax,%rdx
 3301c1b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301c1f:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301c23:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3301c27:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3301c2b:	48 89 01             	mov    %rax,(%rcx)
 3301c2e:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301c32:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301c36:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301c3a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301c3e:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301c42:	48 89 d0             	mov    %rdx,%rax
 3301c45:	48 01 c0             	add    %rax,%rax
 3301c48:	48 01 d0             	add    %rdx,%rax
 3301c4b:	48 c1 e0 03          	shl    $0x3,%rax
 3301c4f:	48 89 c2             	mov    %rax,%rdx
 3301c52:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3301c56:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 3301c5a:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3301c5e:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 3301c62:	48 89 01             	mov    %rax,(%rcx)
 3301c65:	48 89 51 08          	mov    %rdx,0x8(%rcx)
 3301c69:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301c6d:	48 89 41 10          	mov    %rax,0x10(%rcx)
 3301c71:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301c75:	8d 50 01             	lea    0x1(%rax),%edx
 3301c78:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3301c7c:	66 89 10             	mov    %dx,(%rax)
 3301c7f:	b8 00 00 00 00       	mov    $0x0,%eax
 3301c84:	c9                   	leaveq 
 3301c85:	c3                   	retq   

0000000003301c86 <PrintBuffer>:
 3301c86:	f3 0f 1e fa          	endbr64 
 3301c8a:	55                   	push   %rbp
 3301c8b:	48 89 e5             	mov    %rsp,%rbp
 3301c8e:	48 83 ec 20          	sub    $0x20,%rsp
 3301c92:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3301c96:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3301c9a:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3301ca1:	00 
 3301ca2:	eb 29                	jmp    3301ccd <PrintBuffer+0x47>
 3301ca4:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3301ca8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301cac:	48 01 d0             	add    %rdx,%rax
 3301caf:	0f b6 00             	movzbl (%rax),%eax
 3301cb2:	0f b6 c0             	movzbl %al,%eax
 3301cb5:	c7 45 f4 e8 03 00 00 	movl   $0x3e8,-0xc(%rbp)
 3301cbc:	88 45 f3             	mov    %al,-0xd(%rbp)
 3301cbf:	8b 55 f4             	mov    -0xc(%rbp),%edx
 3301cc2:	0f b6 45 f3          	movzbl -0xd(%rbp),%eax
 3301cc6:	ee                   	out    %al,(%dx)
 3301cc7:	90                   	nop
 3301cc8:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3301ccd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3301cd1:	48 3b 45 e0          	cmp    -0x20(%rbp),%rax
 3301cd5:	72 cd                	jb     3301ca4 <PrintBuffer+0x1e>
 3301cd7:	90                   	nop
 3301cd8:	90                   	nop
 3301cd9:	c9                   	leaveq 
 3301cda:	c3                   	retq   

0000000003301cdb <PrintNullTerminatedBuffer>:
 3301cdb:	f3 0f 1e fa          	endbr64 
 3301cdf:	55                   	push   %rbp
 3301ce0:	48 89 e5             	mov    %rsp,%rbp
 3301ce3:	48 83 ec 18          	sub    $0x18,%rsp
 3301ce7:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3301ceb:	eb 22                	jmp    3301d0f <PrintNullTerminatedBuffer+0x34>
 3301ced:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301cf1:	0f b6 00             	movzbl (%rax),%eax
 3301cf4:	0f b6 c0             	movzbl %al,%eax
 3301cf7:	c7 45 fc e8 03 00 00 	movl   $0x3e8,-0x4(%rbp)
 3301cfe:	88 45 fb             	mov    %al,-0x5(%rbp)
 3301d01:	8b 55 fc             	mov    -0x4(%rbp),%edx
 3301d04:	0f b6 45 fb          	movzbl -0x5(%rbp),%eax
 3301d08:	ee                   	out    %al,(%dx)
 3301d09:	90                   	nop
 3301d0a:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3301d0f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301d13:	0f b6 00             	movzbl (%rax),%eax
 3301d16:	84 c0                	test   %al,%al
 3301d18:	75 d3                	jne    3301ced <PrintNullTerminatedBuffer+0x12>
 3301d1a:	90                   	nop
 3301d1b:	90                   	nop
 3301d1c:	c9                   	leaveq 
 3301d1d:	c3                   	retq   

0000000003301d1e <PrintVaArg>:
 3301d1e:	f3 0f 1e fa          	endbr64 
 3301d22:	55                   	push   %rbp
 3301d23:	48 89 e5             	mov    %rsp,%rbp
 3301d26:	53                   	push   %rbx
 3301d27:	48 81 ec 88 07 00 00 	sub    $0x788,%rsp
 3301d2e:	48 89 bd 78 f8 ff ff 	mov    %rdi,-0x788(%rbp)
 3301d35:	48 89 b5 70 f8 ff ff 	mov    %rsi,-0x790(%rbp)
 3301d3c:	48 c7 85 80 f8 ff ff 	movq   $0x0,-0x780(%rbp)
 3301d43:	00 00 00 00 
 3301d47:	48 c7 85 88 f8 ff ff 	movq   $0x0,-0x778(%rbp)
 3301d4e:	00 00 00 00 
 3301d52:	48 8d 95 90 f8 ff ff 	lea    -0x770(%rbp),%rdx
 3301d59:	b8 00 00 00 00       	mov    $0x0,%eax
 3301d5e:	b9 de 00 00 00       	mov    $0xde,%ecx
 3301d63:	48 89 d7             	mov    %rdx,%rdi
 3301d66:	f3 48 ab             	rep stos %rax,%es:(%rdi)
 3301d69:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3301d70:	00 
 3301d71:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301d78:	48 89 c7             	mov    %rax,%rdi
 3301d7b:	e8 bb 07 00 00       	callq  330253b <StringLength>
 3301d80:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 3301d84:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3301d8b:	00 
 3301d8c:	e9 d5 03 00 00       	jmpq   3302166 <PrintVaArg+0x448>
 3301d91:	48 8b 95 78 f8 ff ff 	mov    -0x788(%rbp),%rdx
 3301d98:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301d9c:	48 01 d0             	add    %rdx,%rax
 3301d9f:	0f b6 00             	movzbl (%rax),%eax
 3301da2:	3c 25                	cmp    $0x25,%al
 3301da4:	0f 85 92 03 00 00    	jne    330213c <PrintVaArg+0x41e>
 3301daa:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301dae:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301db2:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301db9:	48 01 d0             	add    %rdx,%rax
 3301dbc:	0f b6 00             	movzbl (%rax),%eax
 3301dbf:	0f be c0             	movsbl %al,%eax
 3301dc2:	83 f8 2e             	cmp    $0x2e,%eax
 3301dc5:	0f 84 11 01 00 00    	je     3301edc <PrintVaArg+0x1be>
 3301dcb:	83 f8 64             	cmp    $0x64,%eax
 3301dce:	0f 85 75 02 00 00    	jne    3302049 <PrintVaArg+0x32b>
 3301dd4:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301ddb:	8b 00                	mov    (%rax),%eax
 3301ddd:	83 f8 2f             	cmp    $0x2f,%eax
 3301de0:	77 30                	ja     3301e12 <PrintVaArg+0xf4>
 3301de2:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301de9:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301ded:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301df4:	8b 00                	mov    (%rax),%eax
 3301df6:	89 c0                	mov    %eax,%eax
 3301df8:	48 01 d0             	add    %rdx,%rax
 3301dfb:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e02:	8b 12                	mov    (%rdx),%edx
 3301e04:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301e07:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e0e:	89 0a                	mov    %ecx,(%rdx)
 3301e10:	eb 1a                	jmp    3301e2c <PrintVaArg+0x10e>
 3301e12:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301e19:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301e1d:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301e21:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301e28:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301e2c:	48 8b 00             	mov    (%rax),%rax
 3301e2f:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3301e33:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301e37:	48 89 c7             	mov    %rax,%rdi
 3301e3a:	e8 b6 06 00 00       	callq  33024f5 <NumberOfDigits>
 3301e3f:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3301e43:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3301e47:	48 83 e8 01          	sub    $0x1,%rax
 3301e4b:	48 89 c6             	mov    %rax,%rsi
 3301e4e:	bf 0a 00 00 00       	mov    $0xa,%edi
 3301e53:	e8 60 06 00 00       	callq  33024b8 <pow>
 3301e58:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3301e5c:	eb 6d                	jmp    3301ecb <PrintVaArg+0x1ad>
 3301e5e:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3301e62:	ba 00 00 00 00       	mov    $0x0,%edx
 3301e67:	48 f7 75 d8          	divq   -0x28(%rbp)
 3301e6b:	48 89 c1             	mov    %rax,%rcx
 3301e6e:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3301e75:	cc cc cc 
 3301e78:	48 89 c8             	mov    %rcx,%rax
 3301e7b:	48 f7 e2             	mul    %rdx
 3301e7e:	48 c1 ea 03          	shr    $0x3,%rdx
 3301e82:	48 89 d0             	mov    %rdx,%rax
 3301e85:	48 c1 e0 02          	shl    $0x2,%rax
 3301e89:	48 01 d0             	add    %rdx,%rax
 3301e8c:	48 01 c0             	add    %rax,%rax
 3301e8f:	48 29 c1             	sub    %rax,%rcx
 3301e92:	48 89 ca             	mov    %rcx,%rdx
 3301e95:	89 d0                	mov    %edx,%eax
 3301e97:	8d 48 30             	lea    0x30(%rax),%ecx
 3301e9a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3301e9e:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3301ea2:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3301ea6:	89 ca                	mov    %ecx,%edx
 3301ea8:	88 94 05 80 f8 ff ff 	mov    %dl,-0x780(%rbp,%rax,1)
 3301eaf:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3301eb3:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3301eba:	cc cc cc 
 3301ebd:	48 f7 e2             	mul    %rdx
 3301ec0:	48 89 d0             	mov    %rdx,%rax
 3301ec3:	48 c1 e8 03          	shr    $0x3,%rax
 3301ec7:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3301ecb:	48 83 7d d8 00       	cmpq   $0x0,-0x28(%rbp)
 3301ed0:	75 8c                	jne    3301e5e <PrintVaArg+0x140>
 3301ed2:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3301ed7:	e9 85 02 00 00       	jmpq   3302161 <PrintVaArg+0x443>
 3301edc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3301ee0:	48 8d 50 02          	lea    0x2(%rax),%rdx
 3301ee4:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3301eeb:	48 01 d0             	add    %rdx,%rax
 3301eee:	0f b6 00             	movzbl (%rax),%eax
 3301ef1:	0f be c0             	movsbl %al,%eax
 3301ef4:	83 f8 62             	cmp    $0x62,%eax
 3301ef7:	0f 85 42 01 00 00    	jne    330203f <PrintVaArg+0x321>
 3301efd:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f04:	8b 00                	mov    (%rax),%eax
 3301f06:	83 f8 2f             	cmp    $0x2f,%eax
 3301f09:	77 30                	ja     3301f3b <PrintVaArg+0x21d>
 3301f0b:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f12:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301f16:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f1d:	8b 00                	mov    (%rax),%eax
 3301f1f:	89 c0                	mov    %eax,%eax
 3301f21:	48 01 d0             	add    %rdx,%rax
 3301f24:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f2b:	8b 12                	mov    (%rdx),%edx
 3301f2d:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301f30:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f37:	89 0a                	mov    %ecx,(%rdx)
 3301f39:	eb 1a                	jmp    3301f55 <PrintVaArg+0x237>
 3301f3b:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f42:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301f46:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301f4a:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f51:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301f55:	48 8b 00             	mov    (%rax),%rax
 3301f58:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3301f5c:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f63:	8b 00                	mov    (%rax),%eax
 3301f65:	83 f8 2f             	cmp    $0x2f,%eax
 3301f68:	77 30                	ja     3301f9a <PrintVaArg+0x27c>
 3301f6a:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f71:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3301f75:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301f7c:	8b 00                	mov    (%rax),%eax
 3301f7e:	89 c0                	mov    %eax,%eax
 3301f80:	48 01 d0             	add    %rdx,%rax
 3301f83:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f8a:	8b 12                	mov    (%rdx),%edx
 3301f8c:	8d 4a 08             	lea    0x8(%rdx),%ecx
 3301f8f:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301f96:	89 0a                	mov    %ecx,(%rdx)
 3301f98:	eb 1a                	jmp    3301fb4 <PrintVaArg+0x296>
 3301f9a:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3301fa1:	48 8b 40 08          	mov    0x8(%rax),%rax
 3301fa5:	48 8d 48 08          	lea    0x8(%rax),%rcx
 3301fa9:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 3301fb0:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 3301fb4:	48 8b 00             	mov    (%rax),%rax
 3301fb7:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 3301fbb:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 3301fc2:	00 
 3301fc3:	eb 6f                	jmp    3302034 <PrintVaArg+0x316>
 3301fc5:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 3301fc9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3301fcd:	48 01 d0             	add    %rdx,%rax
 3301fd0:	0f b6 00             	movzbl (%rax),%eax
 3301fd3:	88 45 97             	mov    %al,-0x69(%rbp)
 3301fd6:	0f b6 45 97          	movzbl -0x69(%rbp),%eax
 3301fda:	c0 e8 04             	shr    $0x4,%al
 3301fdd:	0f b6 c0             	movzbl %al,%eax
 3301fe0:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 3301fe4:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 3301fe8:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3301fec:	89 c7                	mov    %eax,%edi
 3301fee:	e8 0b 04 00 00       	callq  33023fe <ConvertHalfByteToHexChar>
 3301ff3:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 3301ffa:	0f b6 45 97          	movzbl -0x69(%rbp),%eax
 3301ffe:	83 e0 0f             	and    $0xf,%eax
 3302001:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 3302005:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 3302009:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 330200d:	89 c7                	mov    %eax,%edi
 330200f:	e8 ea 03 00 00       	callq  33023fe <ConvertHalfByteToHexChar>
 3302014:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 330201b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330201f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302023:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302027:	c6 84 05 80 f8 ff ff 	movb   $0x20,-0x780(%rbp,%rax,1)
 330202e:	20 
 330202f:	48 83 45 d0 01       	addq   $0x1,-0x30(%rbp)
 3302034:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3302038:	48 3b 45 a0          	cmp    -0x60(%rbp),%rax
 330203c:	72 87                	jb     3301fc5 <PrintVaArg+0x2a7>
 330203e:	90                   	nop
 330203f:	48 83 45 e0 02       	addq   $0x2,-0x20(%rbp)
 3302044:	e9 18 01 00 00       	jmpq   3302161 <PrintVaArg+0x443>
 3302049:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330204d:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302051:	48 8b 85 78 f8 ff ff 	mov    -0x788(%rbp),%rax
 3302058:	48 01 d0             	add    %rdx,%rax
 330205b:	0f b6 00             	movzbl (%rax),%eax
 330205e:	83 e8 30             	sub    $0x30,%eax
 3302061:	88 45 96             	mov    %al,-0x6a(%rbp)
 3302064:	0f b6 45 96          	movzbl -0x6a(%rbp),%eax
 3302068:	01 c0                	add    %eax,%eax
 330206a:	83 e8 01             	sub    $0x1,%eax
 330206d:	88 45 cf             	mov    %al,-0x31(%rbp)
 3302070:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3302077:	8b 00                	mov    (%rax),%eax
 3302079:	83 f8 2f             	cmp    $0x2f,%eax
 330207c:	77 30                	ja     33020ae <PrintVaArg+0x390>
 330207e:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3302085:	48 8b 50 10          	mov    0x10(%rax),%rdx
 3302089:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 3302090:	8b 00                	mov    (%rax),%eax
 3302092:	89 c0                	mov    %eax,%eax
 3302094:	48 01 d0             	add    %rdx,%rax
 3302097:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 330209e:	8b 12                	mov    (%rdx),%edx
 33020a0:	8d 4a 08             	lea    0x8(%rdx),%ecx
 33020a3:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 33020aa:	89 0a                	mov    %ecx,(%rdx)
 33020ac:	eb 1a                	jmp    33020c8 <PrintVaArg+0x3aa>
 33020ae:	48 8b 85 70 f8 ff ff 	mov    -0x790(%rbp),%rax
 33020b5:	48 8b 40 08          	mov    0x8(%rax),%rax
 33020b9:	48 8d 48 08          	lea    0x8(%rax),%rcx
 33020bd:	48 8b 95 70 f8 ff ff 	mov    -0x790(%rbp),%rdx
 33020c4:	48 89 4a 08          	mov    %rcx,0x8(%rdx)
 33020c8:	48 8b 00             	mov    (%rax),%rax
 33020cb:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 33020cf:	0f be 45 cf          	movsbl -0x31(%rbp),%eax
 33020d3:	c1 e0 02             	shl    $0x2,%eax
 33020d6:	ba 0f 00 00 00       	mov    $0xf,%edx
 33020db:	89 c1                	mov    %eax,%ecx
 33020dd:	d3 e2                	shl    %cl,%edx
 33020df:	89 d0                	mov    %edx,%eax
 33020e1:	48 98                	cltq   
 33020e3:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 33020e7:	eb 46                	jmp    330212f <PrintVaArg+0x411>
 33020e9:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33020ed:	48 23 45 c0          	and    -0x40(%rbp),%rax
 33020f1:	48 89 c2             	mov    %rax,%rdx
 33020f4:	0f be 45 cf          	movsbl -0x31(%rbp),%eax
 33020f8:	c1 e0 02             	shl    $0x2,%eax
 33020fb:	89 c1                	mov    %eax,%ecx
 33020fd:	48 d3 ea             	shr    %cl,%rdx
 3302100:	48 89 d0             	mov    %rdx,%rax
 3302103:	0f b6 c0             	movzbl %al,%eax
 3302106:	48 8b 5d e8          	mov    -0x18(%rbp),%rbx
 330210a:	48 8d 53 01          	lea    0x1(%rbx),%rdx
 330210e:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302112:	89 c7                	mov    %eax,%edi
 3302114:	e8 e5 02 00 00       	callq  33023fe <ConvertHalfByteToHexChar>
 3302119:	88 84 1d 80 f8 ff ff 	mov    %al,-0x780(%rbp,%rbx,1)
 3302120:	0f b6 45 cf          	movzbl -0x31(%rbp),%eax
 3302124:	83 e8 01             	sub    $0x1,%eax
 3302127:	88 45 cf             	mov    %al,-0x31(%rbp)
 330212a:	48 c1 6d c0 04       	shrq   $0x4,-0x40(%rbp)
 330212f:	80 7d cf 00          	cmpb   $0x0,-0x31(%rbp)
 3302133:	79 b4                	jns    33020e9 <PrintVaArg+0x3cb>
 3302135:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 330213a:	eb 25                	jmp    3302161 <PrintVaArg+0x443>
 330213c:	48 8b 95 78 f8 ff ff 	mov    -0x788(%rbp),%rdx
 3302143:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3302147:	48 8d 0c 02          	lea    (%rdx,%rax,1),%rcx
 330214b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330214f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302153:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302157:	0f b6 11             	movzbl (%rcx),%edx
 330215a:	88 94 05 80 f8 ff ff 	mov    %dl,-0x780(%rbp,%rax,1)
 3302161:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 3302166:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330216a:	48 3b 45 b8          	cmp    -0x48(%rbp),%rax
 330216e:	0f 82 1d fc ff ff    	jb     3301d91 <PrintVaArg+0x73>
 3302174:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3302178:	48 8d 85 80 f8 ff ff 	lea    -0x780(%rbp),%rax
 330217f:	48 89 d6             	mov    %rdx,%rsi
 3302182:	48 89 c7             	mov    %rax,%rdi
 3302185:	e8 fc fa ff ff       	callq  3301c86 <PrintBuffer>
 330218a:	90                   	nop
 330218b:	48 81 c4 88 07 00 00 	add    $0x788,%rsp
 3302192:	5b                   	pop    %rbx
 3302193:	5d                   	pop    %rbp
 3302194:	c3                   	retq   

0000000003302195 <Print>:
 3302195:	f3 0f 1e fa          	endbr64 
 3302199:	55                   	push   %rbp
 330219a:	48 89 e5             	mov    %rsp,%rbp
 330219d:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
 33021a4:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
 33021ab:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 33021b2:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 33021b9:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 33021c0:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 33021c7:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 33021ce:	84 c0                	test   %al,%al
 33021d0:	74 20                	je     33021f2 <Print+0x5d>
 33021d2:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 33021d6:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 33021da:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 33021de:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 33021e2:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 33021e6:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 33021ea:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 33021ee:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 33021f2:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
 33021f9:	00 00 00 
 33021fc:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
 3302203:	00 00 00 
 3302206:	48 8d 45 10          	lea    0x10(%rbp),%rax
 330220a:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3302211:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 3302218:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 330221f:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
 3302226:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 330222d:	48 89 d6             	mov    %rdx,%rsi
 3302230:	48 89 c7             	mov    %rax,%rdi
 3302233:	e8 e6 fa ff ff       	callq  3301d1e <PrintVaArg>
 3302238:	90                   	nop
 3302239:	c9                   	leaveq 
 330223a:	c3                   	retq   

000000000330223b <PrintDebugLevelDebug>:
 330223b:	f3 0f 1e fa          	endbr64 
 330223f:	55                   	push   %rbp
 3302240:	48 89 e5             	mov    %rsp,%rbp
 3302243:	48 81 ec e0 00 00 00 	sub    $0xe0,%rsp
 330224a:	48 89 bd 28 ff ff ff 	mov    %rdi,-0xd8(%rbp)
 3302251:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 3302258:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 330225f:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 3302266:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 330226d:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 3302274:	84 c0                	test   %al,%al
 3302276:	74 20                	je     3302298 <PrintDebugLevelDebug+0x5d>
 3302278:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 330227c:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302280:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 3302284:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 3302288:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 330228c:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 3302290:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 3302294:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 3302298:	c7 85 38 ff ff ff 08 	movl   $0x8,-0xc8(%rbp)
 330229f:	00 00 00 
 33022a2:	c7 85 3c ff ff ff 30 	movl   $0x30,-0xc4(%rbp)
 33022a9:	00 00 00 
 33022ac:	48 8d 45 10          	lea    0x10(%rbp),%rax
 33022b0:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 33022b7:	48 8d 85 50 ff ff ff 	lea    -0xb0(%rbp),%rax
 33022be:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 33022c5:	48 8d 95 38 ff ff ff 	lea    -0xc8(%rbp),%rdx
 33022cc:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 33022d3:	48 89 d6             	mov    %rdx,%rsi
 33022d6:	48 89 c7             	mov    %rax,%rdi
 33022d9:	e8 40 fa ff ff       	callq  3301d1e <PrintVaArg>
 33022de:	90                   	nop
 33022df:	c9                   	leaveq 
 33022e0:	c3                   	retq   

00000000033022e1 <PrintDebugLevelWarning>:
 33022e1:	f3 0f 1e fa          	endbr64 
 33022e5:	55                   	push   %rbp
 33022e6:	48 89 e5             	mov    %rsp,%rbp
 33022e9:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 33022f0:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
 33022f7:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 33022fe:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 3302305:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 330230c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 3302313:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 330231a:	84 c0                	test   %al,%al
 330231c:	74 20                	je     330233e <PrintDebugLevelWarning+0x5d>
 330231e:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 3302322:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302326:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 330232a:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 330232e:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 3302332:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 3302336:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 330233a:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 330233e:	90                   	nop
 330233f:	c9                   	leaveq 
 3302340:	c3                   	retq   

0000000003302341 <PrintDebugLevelInfo>:
 3302341:	f3 0f 1e fa          	endbr64 
 3302345:	55                   	push   %rbp
 3302346:	48 89 e5             	mov    %rsp,%rbp
 3302349:	48 81 ec c0 00 00 00 	sub    $0xc0,%rsp
 3302350:	48 89 bd 48 ff ff ff 	mov    %rdi,-0xb8(%rbp)
 3302357:	48 89 b5 58 ff ff ff 	mov    %rsi,-0xa8(%rbp)
 330235e:	48 89 95 60 ff ff ff 	mov    %rdx,-0xa0(%rbp)
 3302365:	48 89 8d 68 ff ff ff 	mov    %rcx,-0x98(%rbp)
 330236c:	4c 89 85 70 ff ff ff 	mov    %r8,-0x90(%rbp)
 3302373:	4c 89 8d 78 ff ff ff 	mov    %r9,-0x88(%rbp)
 330237a:	84 c0                	test   %al,%al
 330237c:	74 20                	je     330239e <PrintDebugLevelInfo+0x5d>
 330237e:	0f 29 45 80          	movaps %xmm0,-0x80(%rbp)
 3302382:	0f 29 4d 90          	movaps %xmm1,-0x70(%rbp)
 3302386:	0f 29 55 a0          	movaps %xmm2,-0x60(%rbp)
 330238a:	0f 29 5d b0          	movaps %xmm3,-0x50(%rbp)
 330238e:	0f 29 65 c0          	movaps %xmm4,-0x40(%rbp)
 3302392:	0f 29 6d d0          	movaps %xmm5,-0x30(%rbp)
 3302396:	0f 29 75 e0          	movaps %xmm6,-0x20(%rbp)
 330239a:	0f 29 7d f0          	movaps %xmm7,-0x10(%rbp)
 330239e:	90                   	nop
 330239f:	c9                   	leaveq 
 33023a0:	c3                   	retq   

00000000033023a1 <CopyMemory>:
 33023a1:	f3 0f 1e fa          	endbr64 
 33023a5:	55                   	push   %rbp
 33023a6:	48 89 e5             	mov    %rsp,%rbp
 33023a9:	48 83 ec 38          	sub    $0x38,%rsp
 33023ad:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33023b1:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33023b5:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 33023b9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33023bd:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33023c1:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33023c5:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33023c9:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33023cd:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33023d1:	48 8b 4d f0          	mov    -0x10(%rbp),%rcx
 33023d5:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33023d9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33023dd:	48 89 ce             	mov    %rcx,%rsi
 33023e0:	48 89 d7             	mov    %rdx,%rdi
 33023e3:	48 89 c1             	mov    %rax,%rcx
 33023e6:	f3 a4                	rep movsb %ds:(%rsi),%es:(%rdi)
 33023e8:	48 89 c8             	mov    %rcx,%rax
 33023eb:	48 89 fa             	mov    %rdi,%rdx
 33023ee:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 33023f2:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 33023f6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33023fa:	90                   	nop
 33023fb:	90                   	nop
 33023fc:	c9                   	leaveq 
 33023fd:	c3                   	retq   

00000000033023fe <ConvertHalfByteToHexChar>:
 33023fe:	f3 0f 1e fa          	endbr64 
 3302402:	55                   	push   %rbp
 3302403:	48 89 e5             	mov    %rsp,%rbp
 3302406:	48 83 ec 20          	sub    $0x20,%rsp
 330240a:	89 f8                	mov    %edi,%eax
 330240c:	88 45 ec             	mov    %al,-0x14(%rbp)
 330240f:	0f b6 45 ec          	movzbl -0x14(%rbp),%eax
 3302413:	83 f8 0f             	cmp    $0xf,%eax
 3302416:	0f 87 83 00 00 00    	ja     330249f <ConvertHalfByteToHexChar+0xa1>
 330241c:	89 c0                	mov    %eax,%eax
 330241e:	48 8d 14 85 00 00 00 	lea    0x0(,%rax,4),%rdx
 3302425:	00 
 3302426:	48 8d 05 5b 3e 00 00 	lea    0x3e5b(%rip),%rax        # 3306288 <CopyMemoryToGuest+0x731>
 330242d:	8b 04 02             	mov    (%rdx,%rax,1),%eax
 3302430:	48 98                	cltq   
 3302432:	48 8d 15 4f 3e 00 00 	lea    0x3e4f(%rip),%rdx        # 3306288 <CopyMemoryToGuest+0x731>
 3302439:	48 01 d0             	add    %rdx,%rax
 330243c:	3e ff e0             	notrack jmpq *%rax
 330243f:	c6 45 ff 30          	movb   $0x30,-0x1(%rbp)
 3302443:	eb 6d                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302445:	c6 45 ff 31          	movb   $0x31,-0x1(%rbp)
 3302449:	eb 67                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330244b:	c6 45 ff 32          	movb   $0x32,-0x1(%rbp)
 330244f:	eb 61                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302451:	c6 45 ff 33          	movb   $0x33,-0x1(%rbp)
 3302455:	eb 5b                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302457:	c6 45 ff 34          	movb   $0x34,-0x1(%rbp)
 330245b:	eb 55                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330245d:	c6 45 ff 35          	movb   $0x35,-0x1(%rbp)
 3302461:	eb 4f                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302463:	c6 45 ff 36          	movb   $0x36,-0x1(%rbp)
 3302467:	eb 49                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302469:	c6 45 ff 37          	movb   $0x37,-0x1(%rbp)
 330246d:	eb 43                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330246f:	c6 45 ff 38          	movb   $0x38,-0x1(%rbp)
 3302473:	eb 3d                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302475:	c6 45 ff 39          	movb   $0x39,-0x1(%rbp)
 3302479:	eb 37                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330247b:	c6 45 ff 41          	movb   $0x41,-0x1(%rbp)
 330247f:	eb 31                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302481:	c6 45 ff 42          	movb   $0x42,-0x1(%rbp)
 3302485:	eb 2b                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302487:	c6 45 ff 43          	movb   $0x43,-0x1(%rbp)
 330248b:	eb 25                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330248d:	c6 45 ff 44          	movb   $0x44,-0x1(%rbp)
 3302491:	eb 1f                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302493:	c6 45 ff 45          	movb   $0x45,-0x1(%rbp)
 3302497:	eb 19                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 3302499:	c6 45 ff 46          	movb   $0x46,-0x1(%rbp)
 330249d:	eb 13                	jmp    33024b2 <ConvertHalfByteToHexChar+0xb4>
 330249f:	48 8d 3d 82 3d 00 00 	lea    0x3d82(%rip),%rdi        # 3306228 <CopyMemoryToGuest+0x6d1>
 33024a6:	b8 00 00 00 00       	mov    $0x0,%eax
 33024ab:	e8 e5 fc ff ff       	callq  3302195 <Print>
 33024b0:	eb fe                	jmp    33024b0 <ConvertHalfByteToHexChar+0xb2>
 33024b2:	0f b6 45 ff          	movzbl -0x1(%rbp),%eax
 33024b6:	c9                   	leaveq 
 33024b7:	c3                   	retq   

00000000033024b8 <pow>:
 33024b8:	f3 0f 1e fa          	endbr64 
 33024bc:	55                   	push   %rbp
 33024bd:	48 89 e5             	mov    %rsp,%rbp
 33024c0:	48 83 ec 20          	sub    $0x20,%rsp
 33024c4:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 33024c8:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 33024cc:	48 c7 45 f8 01 00 00 	movq   $0x1,-0x8(%rbp)
 33024d3:	00 
 33024d4:	eb 12                	jmp    33024e8 <pow+0x30>
 33024d6:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33024da:	48 0f af 45 e8       	imul   -0x18(%rbp),%rax
 33024df:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33024e3:	48 83 6d e0 01       	subq   $0x1,-0x20(%rbp)
 33024e8:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 33024ed:	75 e7                	jne    33024d6 <pow+0x1e>
 33024ef:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33024f3:	c9                   	leaveq 
 33024f4:	c3                   	retq   

00000000033024f5 <NumberOfDigits>:
 33024f5:	f3 0f 1e fa          	endbr64 
 33024f9:	55                   	push   %rbp
 33024fa:	48 89 e5             	mov    %rsp,%rbp
 33024fd:	48 83 ec 18          	sub    $0x18,%rsp
 3302501:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302505:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330250c:	00 
 330250d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302511:	48 ba cd cc cc cc cc 	movabs $0xcccccccccccccccd,%rdx
 3302518:	cc cc cc 
 330251b:	48 f7 e2             	mul    %rdx
 330251e:	48 89 d0             	mov    %rdx,%rax
 3302521:	48 c1 e8 03          	shr    $0x3,%rax
 3302525:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3302529:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330252e:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 3302533:	75 d8                	jne    330250d <NumberOfDigits+0x18>
 3302535:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302539:	c9                   	leaveq 
 330253a:	c3                   	retq   

000000000330253b <StringLength>:
 330253b:	f3 0f 1e fa          	endbr64 
 330253f:	55                   	push   %rbp
 3302540:	48 89 e5             	mov    %rsp,%rbp
 3302543:	48 83 ec 18          	sub    $0x18,%rsp
 3302547:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 330254b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3302552:	00 
 3302553:	eb 05                	jmp    330255a <StringLength+0x1f>
 3302555:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330255a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330255e:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302562:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302566:	0f b6 00             	movzbl (%rax),%eax
 3302569:	84 c0                	test   %al,%al
 330256b:	75 e8                	jne    3302555 <StringLength+0x1a>
 330256d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302571:	c9                   	leaveq 
 3302572:	c3                   	retq   

0000000003302573 <CompareMemory>:
 3302573:	f3 0f 1e fa          	endbr64 
 3302577:	55                   	push   %rbp
 3302578:	48 89 e5             	mov    %rsp,%rbp
 330257b:	48 83 ec 28          	sub    $0x28,%rsp
 330257f:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302583:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3302587:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 330258b:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3302592:	00 
 3302593:	eb 55                	jmp    33025ea <CompareMemory+0x77>
 3302595:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3302599:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330259d:	48 01 d0             	add    %rdx,%rax
 33025a0:	0f b6 10             	movzbl (%rax),%edx
 33025a3:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 33025a7:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025ab:	48 01 c8             	add    %rcx,%rax
 33025ae:	0f b6 00             	movzbl (%rax),%eax
 33025b1:	38 c2                	cmp    %al,%dl
 33025b3:	75 07                	jne    33025bc <CompareMemory+0x49>
 33025b5:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33025ba:	eb 2e                	jmp    33025ea <CompareMemory+0x77>
 33025bc:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33025c0:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025c4:	48 01 d0             	add    %rdx,%rax
 33025c7:	0f b6 10             	movzbl (%rax),%edx
 33025ca:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 33025ce:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025d2:	48 01 c8             	add    %rcx,%rax
 33025d5:	0f b6 00             	movzbl (%rax),%eax
 33025d8:	38 c2                	cmp    %al,%dl
 33025da:	73 07                	jae    33025e3 <CompareMemory+0x70>
 33025dc:	b8 ff ff ff ff       	mov    $0xffffffff,%eax
 33025e1:	eb 16                	jmp    33025f9 <CompareMemory+0x86>
 33025e3:	b8 01 00 00 00       	mov    $0x1,%eax
 33025e8:	eb 0f                	jmp    33025f9 <CompareMemory+0x86>
 33025ea:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33025ee:	48 3b 45 d8          	cmp    -0x28(%rbp),%rax
 33025f2:	72 a1                	jb     3302595 <CompareMemory+0x22>
 33025f4:	b8 00 00 00 00       	mov    $0x0,%eax
 33025f9:	c9                   	leaveq 
 33025fa:	c3                   	retq   

00000000033025fb <SetMemory>:
 33025fb:	f3 0f 1e fa          	endbr64 
 33025ff:	55                   	push   %rbp
 3302600:	48 89 e5             	mov    %rsp,%rbp
 3302603:	48 83 ec 18          	sub    $0x18,%rsp
 3302607:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 330260b:	89 f0                	mov    %esi,%eax
 330260d:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3302611:	88 45 f4             	mov    %al,-0xc(%rbp)
 3302614:	eb 17                	jmp    330262d <SetMemory+0x32>
 3302616:	48 83 6d e8 01       	subq   $0x1,-0x18(%rbp)
 330261b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330261f:	48 8d 50 01          	lea    0x1(%rax),%rdx
 3302623:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 3302627:	0f b6 55 f4          	movzbl -0xc(%rbp),%edx
 330262b:	88 10                	mov    %dl,(%rax)
 330262d:	48 83 7d e8 00       	cmpq   $0x0,-0x18(%rbp)
 3302632:	75 e2                	jne    3302616 <SetMemory+0x1b>
 3302634:	90                   	nop
 3302635:	90                   	nop
 3302636:	c9                   	leaveq 
 3302637:	c3                   	retq   

0000000003302638 <DumpHostStack>:
 3302638:	f3 0f 1e fa          	endbr64 
 330263c:	55                   	push   %rbp
 330263d:	48 89 e5             	mov    %rsp,%rbp
 3302640:	48 83 ec 20          	sub    $0x20,%rsp
 3302644:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3302648:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330264f:	00 
 3302650:	eb 53                	jmp    33026a5 <DumpHostStack+0x6d>
 3302652:	48 83 7d f8 00       	cmpq   $0x0,-0x8(%rbp)
 3302657:	74 1d                	je     3302676 <DumpHostStack+0x3e>
 3302659:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330265d:	83 e0 07             	and    $0x7,%eax
 3302660:	48 85 c0             	test   %rax,%rax
 3302663:	75 11                	jne    3302676 <DumpHostStack+0x3e>
 3302665:	48 8d 3d 5c 3c 00 00 	lea    0x3c5c(%rip),%rdi        # 33062c8 <CopyMemoryToGuest+0x771>
 330266c:	b8 00 00 00 00       	mov    $0x0,%eax
 3302671:	e8 1f fb ff ff       	callq  3302195 <Print>
 3302676:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330267a:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 3302681:	00 
 3302682:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302686:	48 01 d0             	add    %rdx,%rax
 3302689:	48 8b 00             	mov    (%rax),%rax
 330268c:	48 89 c6             	mov    %rax,%rsi
 330268f:	48 8d 3d 34 3c 00 00 	lea    0x3c34(%rip),%rdi        # 33062ca <CopyMemoryToGuest+0x773>
 3302696:	b8 00 00 00 00       	mov    $0x0,%eax
 330269b:	e8 f5 fa ff ff       	callq  3302195 <Print>
 33026a0:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33026a5:	48 81 7d f8 c7 00 00 	cmpq   $0xc7,-0x8(%rbp)
 33026ac:	00 
 33026ad:	76 a3                	jbe    3302652 <DumpHostStack+0x1a>
 33026af:	48 8d 3d 12 3c 00 00 	lea    0x3c12(%rip),%rdi        # 33062c8 <CopyMemoryToGuest+0x771>
 33026b6:	b8 00 00 00 00       	mov    $0x0,%eax
 33026bb:	e8 d5 fa ff ff       	callq  3302195 <Print>
 33026c0:	90                   	nop
 33026c1:	c9                   	leaveq 
 33026c2:	c3                   	retq   

00000000033026c3 <vmread>:
 33026c3:	f3 0f 1e fa          	endbr64 
 33026c7:	55                   	push   %rbp
 33026c8:	48 89 e5             	mov    %rsp,%rbp
 33026cb:	48 83 ec 28          	sub    $0x28,%rsp
 33026cf:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33026d3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33026d7:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33026db:	48 8d 45 e8          	lea    -0x18(%rbp),%rax
 33026df:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33026e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33026e7:	0f 78 c2             	vmread %rax,%rdx
 33026ea:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33026ee:	48 89 10             	mov    %rdx,(%rax)
 33026f1:	90                   	nop
 33026f2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33026f6:	c9                   	leaveq 
 33026f7:	c3                   	retq   

00000000033026f8 <SetupVirtualAddress>:
 33026f8:	f3 0f 1e fa          	endbr64 
 33026fc:	55                   	push   %rbp
 33026fd:	48 89 e5             	mov    %rsp,%rbp
 3302700:	48 83 ec 08          	sub    $0x8,%rsp
 3302704:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302708:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330270c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3302710:	48 81 c2 40 06 00 00 	add    $0x640,%rdx
 3302717:	48 8b 00             	mov    (%rax),%rax
 330271a:	48 89 02             	mov    %rax,(%rdx)
 330271d:	90                   	nop
 330271e:	c9                   	leaveq 
 330271f:	c3                   	retq   

0000000003302720 <VirtualToPhysical>:
 3302720:	f3 0f 1e fa          	endbr64 
 3302724:	55                   	push   %rbp
 3302725:	48 89 e5             	mov    %rsp,%rbp
 3302728:	48 83 ec 08          	sub    $0x8,%rsp
 330272c:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302730:	48 ba 00 00 00 00 00 	movabs $0xffff9c0000000000,%rdx
 3302737:	9c ff ff 
 330273a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330273e:	48 01 d0             	add    %rdx,%rax
 3302741:	c9                   	leaveq 
 3302742:	c3                   	retq   

0000000003302743 <PhysicalToVirtual>:
 3302743:	f3 0f 1e fa          	endbr64 
 3302747:	55                   	push   %rbp
 3302748:	48 89 e5             	mov    %rsp,%rbp
 330274b:	48 83 ec 08          	sub    $0x8,%rsp
 330274f:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3302753:	48 ba 00 00 00 00 00 	movabs $0x640000000000,%rdx
 330275a:	64 00 00 
 330275d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302761:	48 01 d0             	add    %rdx,%rax
 3302764:	c9                   	leaveq 
 3302765:	c3                   	retq   

0000000003302766 <InitializeHypervisorPaging>:
 3302766:	f3 0f 1e fa          	endbr64 
 330276a:	55                   	push   %rbp
 330276b:	48 89 e5             	mov    %rsp,%rbp
 330276e:	48 83 ec 30          	sub    $0x30,%rsp
 3302772:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3302776:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330277a:	48 05 00 80 00 00    	add    $0x8000,%rax
 3302780:	48 89 c7             	mov    %rax,%rdi
 3302783:	e8 98 ff ff ff       	callq  3302720 <VirtualToPhysical>
 3302788:	48 83 c8 03          	or     $0x3,%rax
 330278c:	48 89 c2             	mov    %rax,%rdx
 330278f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302793:	48 89 90 00 70 00 00 	mov    %rdx,0x7000(%rax)
 330279a:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330279e:	48 05 00 80 00 00    	add    $0x8000,%rax
 33027a4:	48 89 c7             	mov    %rax,%rdi
 33027a7:	e8 74 ff ff ff       	callq  3302720 <VirtualToPhysical>
 33027ac:	48 83 c8 03          	or     $0x3,%rax
 33027b0:	48 89 c2             	mov    %rax,%rdx
 33027b3:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027b7:	48 89 90 40 76 00 00 	mov    %rdx,0x7640(%rax)
 33027be:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33027c5:	00 
 33027c6:	eb 44                	jmp    330280c <InitializeHypervisorPaging+0xa6>
 33027c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33027cc:	48 c1 e0 09          	shl    $0x9,%rax
 33027d0:	48 05 00 12 00 00    	add    $0x1200,%rax
 33027d6:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 33027dd:	00 
 33027de:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027e2:	48 01 d0             	add    %rdx,%rax
 33027e5:	48 89 c7             	mov    %rax,%rdi
 33027e8:	e8 33 ff ff ff       	callq  3302720 <VirtualToPhysical>
 33027ed:	48 83 c8 03          	or     $0x3,%rax
 33027f1:	48 89 c1             	mov    %rax,%rcx
 33027f4:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33027f8:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33027fc:	48 81 c2 00 10 00 00 	add    $0x1000,%rdx
 3302803:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302807:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 330280c:	48 83 7d f8 0f       	cmpq   $0xf,-0x8(%rbp)
 3302811:	76 b5                	jbe    33027c8 <InitializeHypervisorPaging+0x62>
 3302813:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 330281a:	00 
 330281b:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3302822:	00 
 3302823:	eb 29                	jmp    330284e <InitializeHypervisorPaging+0xe8>
 3302825:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3302829:	0c 83                	or     $0x83,%al
 330282b:	48 89 c1             	mov    %rax,%rcx
 330282e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302832:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3302836:	48 81 c2 00 12 00 00 	add    $0x1200,%rdx
 330283d:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302841:	48 83 45 e8 01       	addq   $0x1,-0x18(%rbp)
 3302846:	48 81 45 f0 00 00 20 	addq   $0x200000,-0x10(%rbp)
 330284d:	00 
 330284e:	48 81 7d e8 ff 1f 00 	cmpq   $0x1fff,-0x18(%rbp)
 3302855:	00 
 3302856:	76 cd                	jbe    3302825 <InitializeHypervisorPaging+0xbf>
 3302858:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330285c:	48 05 00 70 00 00    	add    $0x7000,%rax
 3302862:	48 89 c7             	mov    %rax,%rdi
 3302865:	e8 b6 fe ff ff       	callq  3302720 <VirtualToPhysical>
 330286a:	c9                   	leaveq 
 330286b:	c3                   	retq   

000000000330286c <InitializeExtendedPageTable>:
 330286c:	f3 0f 1e fa          	endbr64 
 3302870:	55                   	push   %rbp
 3302871:	48 89 e5             	mov    %rsp,%rbp
 3302874:	48 83 ec 40          	sub    $0x40,%rsp
 3302878:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330287c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302880:	48 05 00 90 20 00    	add    $0x209000,%rax
 3302886:	48 89 c7             	mov    %rax,%rdi
 3302889:	e8 92 fe ff ff       	callq  3302720 <VirtualToPhysical>
 330288e:	48 83 c8 1e          	or     $0x1e,%rax
 3302892:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3302896:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330289a:	48 05 00 a0 20 00    	add    $0x20a000,%rax
 33028a0:	48 89 c7             	mov    %rax,%rdi
 33028a3:	e8 78 fe ff ff       	callq  3302720 <VirtualToPhysical>
 33028a8:	48 83 c8 07          	or     $0x7,%rax
 33028ac:	48 89 c2             	mov    %rax,%rdx
 33028af:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028b3:	48 89 90 00 90 20 00 	mov    %rdx,0x209000(%rax)
 33028ba:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 33028c1:	00 
 33028c2:	eb 44                	jmp    3302908 <InitializeExtendedPageTable+0x9c>
 33028c4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33028c8:	48 c1 e0 09          	shl    $0x9,%rax
 33028cc:	48 05 00 16 04 00    	add    $0x41600,%rax
 33028d2:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 33028d9:	00 
 33028da:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028de:	48 01 d0             	add    %rdx,%rax
 33028e1:	48 89 c7             	mov    %rax,%rdi
 33028e4:	e8 37 fe ff ff       	callq  3302720 <VirtualToPhysical>
 33028e9:	48 83 c8 07          	or     $0x7,%rax
 33028ed:	48 89 c1             	mov    %rax,%rcx
 33028f0:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33028f4:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33028f8:	48 81 c2 00 14 04 00 	add    $0x41400,%rdx
 33028ff:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302903:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3302908:	48 83 7d f8 0f       	cmpq   $0xf,-0x8(%rbp)
 330290d:	76 b5                	jbe    33028c4 <InitializeExtendedPageTable+0x58>
 330290f:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3302916:	00 
 3302917:	eb 44                	jmp    330295d <InitializeExtendedPageTable+0xf1>
 3302919:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330291d:	48 c1 e0 09          	shl    $0x9,%rax
 3302921:	48 05 00 36 04 00    	add    $0x43600,%rax
 3302927:	48 8d 14 c5 00 00 00 	lea    0x0(,%rax,8),%rdx
 330292e:	00 
 330292f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302933:	48 01 d0             	add    %rdx,%rax
 3302936:	48 89 c7             	mov    %rax,%rdi
 3302939:	e8 e2 fd ff ff       	callq  3302720 <VirtualToPhysical>
 330293e:	48 83 c8 07          	or     $0x7,%rax
 3302942:	48 89 c1             	mov    %rax,%rcx
 3302945:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302949:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 330294d:	48 81 c2 00 16 04 00 	add    $0x41600,%rdx
 3302954:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302958:	48 83 45 f0 01       	addq   $0x1,-0x10(%rbp)
 330295d:	48 81 7d f0 ff 1f 00 	cmpq   $0x1fff,-0x10(%rbp)
 3302964:	00 
 3302965:	76 b2                	jbe    3302919 <InitializeExtendedPageTable+0xad>
 3302967:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 330296e:	00 
 330296f:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 3302976:	00 
 3302977:	eb 2b                	jmp    33029a4 <InitializeExtendedPageTable+0x138>
 3302979:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330297d:	48 83 c8 37          	or     $0x37,%rax
 3302981:	48 89 c1             	mov    %rax,%rcx
 3302984:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302988:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330298c:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 3302993:	48 89 0c d0          	mov    %rcx,(%rax,%rdx,8)
 3302997:	48 83 45 e0 01       	addq   $0x1,-0x20(%rbp)
 330299c:	48 81 45 e8 00 10 00 	addq   $0x1000,-0x18(%rbp)
 33029a3:	00 
 33029a4:	48 81 7d e0 ff ff 3f 	cmpq   $0x3fffff,-0x20(%rbp)
 33029ab:	00 
 33029ac:	76 cb                	jbe    3302979 <InitializeExtendedPageTable+0x10d>
 33029ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33029b2:	c9                   	leaveq 
 33029b3:	c3                   	retq   

00000000033029b4 <CreateEPTEntry>:
 33029b4:	f3 0f 1e fa          	endbr64 
 33029b8:	55                   	push   %rbp
 33029b9:	48 89 e5             	mov    %rsp,%rbp
 33029bc:	48 83 ec 10          	sub    $0x10,%rsp
 33029c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33029c4:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 33029c8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33029cc:	48 0b 45 f0          	or     -0x10(%rbp),%rax
 33029d0:	48 83 c8 30          	or     $0x30,%rax
 33029d4:	c9                   	leaveq 
 33029d5:	c3                   	retq   

00000000033029d6 <HandleCrAccess>:
 33029d6:	f3 0f 1e fa          	endbr64 
 33029da:	55                   	push   %rbp
 33029db:	48 89 e5             	mov    %rsp,%rbp
 33029de:	48 81 ec 40 01 00 00 	sub    $0x140,%rsp
 33029e5:	48 89 bd c8 fe ff ff 	mov    %rdi,-0x138(%rbp)
 33029ec:	bf 02 40 00 00       	mov    $0x4002,%edi
 33029f1:	e8 cd fc ff ff       	callq  33026c3 <vmread>
 33029f6:	48 25 ff 7f fe ff    	and    $0xfffffffffffe7fff,%rax
 33029fc:	48 c7 45 d8 02 40 00 	movq   $0x4002,-0x28(%rbp)
 3302a03:	00 
 3302a04:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 3302a08:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3302a0c:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3302a10:	0f 79 c2             	vmwrite %rdx,%rax
 3302a13:	90                   	nop
 3302a14:	bf 00 64 00 00       	mov    $0x6400,%edi
 3302a19:	e8 a5 fc ff ff       	callq  33026c3 <vmread>
 3302a1e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3302a22:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302a26:	83 e0 30             	and    $0x30,%eax
 3302a29:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3302a2d:	48 8b 85 c8 fe ff ff 	mov    -0x138(%rbp),%rax
 3302a34:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3302a38:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302a3c:	83 e0 0f             	and    $0xf,%eax
 3302a3f:	48 85 c0             	test   %rax,%rax
 3302a42:	74 0b                	je     3302a4f <HandleCrAccess+0x79>
 3302a44:	48 83 f8 03          	cmp    $0x3,%rax
 3302a48:	74 5d                	je     3302aa7 <HandleCrAccess+0xd1>
 3302a4a:	e9 44 07 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302a4f:	48 83 7d f0 30       	cmpq   $0x30,-0x10(%rbp)
 3302a54:	75 13                	jne    3302a69 <HandleCrAccess+0x93>
 3302a56:	48 8d 3d 73 38 00 00 	lea    0x3873(%rip),%rdi        # 33062d0 <CopyMemoryToGuest+0x779>
 3302a5d:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a62:	e8 d4 f7 ff ff       	callq  330223b <PrintDebugLevelDebug>
 3302a67:	eb 2b                	jmp    3302a94 <HandleCrAccess+0xbe>
 3302a69:	48 83 7d f0 20       	cmpq   $0x20,-0x10(%rbp)
 3302a6e:	75 13                	jne    3302a83 <HandleCrAccess+0xad>
 3302a70:	48 8d 3d 81 38 00 00 	lea    0x3881(%rip),%rdi        # 33062f8 <CopyMemoryToGuest+0x7a1>
 3302a77:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a7c:	e8 ba f7 ff ff       	callq  330223b <PrintDebugLevelDebug>
 3302a81:	eb 11                	jmp    3302a94 <HandleCrAccess+0xbe>
 3302a83:	48 8d 3d 96 38 00 00 	lea    0x3896(%rip),%rdi        # 3306320 <CopyMemoryToGuest+0x7c9>
 3302a8a:	b8 00 00 00 00       	mov    $0x0,%eax
 3302a8f:	e8 01 f7 ff ff       	callq  3302195 <Print>
 3302a94:	48 8d 3d c5 38 00 00 	lea    0x38c5(%rip),%rdi        # 3306360 <CopyMemoryToGuest+0x809>
 3302a9b:	b8 00 00 00 00       	mov    $0x0,%eax
 3302aa0:	e8 f0 f6 ff ff       	callq  3302195 <Print>
 3302aa5:	eb fe                	jmp    3302aa5 <HandleCrAccess+0xcf>
 3302aa7:	48 83 7d f0 00       	cmpq   $0x0,-0x10(%rbp)
 3302aac:	0f 85 55 04 00 00    	jne    3302f07 <HandleCrAccess+0x531>
 3302ab2:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302ab6:	25 00 0f 00 00       	and    $0xf00,%eax
 3302abb:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302ac1:	0f 84 f4 03 00 00    	je     3302ebb <HandleCrAccess+0x4e5>
 3302ac7:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302acd:	0f 87 19 04 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302ad3:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302ad9:	0f 84 ab 03 00 00    	je     3302e8a <HandleCrAccess+0x4b4>
 3302adf:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302ae5:	0f 87 01 04 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302aeb:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302af1:	0f 84 62 03 00 00    	je     3302e59 <HandleCrAccess+0x483>
 3302af7:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302afd:	0f 87 e9 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b03:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302b09:	0f 84 19 03 00 00    	je     3302e28 <HandleCrAccess+0x452>
 3302b0f:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302b15:	0f 87 d1 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b1b:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302b21:	0f 84 d0 02 00 00    	je     3302df7 <HandleCrAccess+0x421>
 3302b27:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302b2d:	0f 87 b9 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b33:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302b39:	0f 84 87 02 00 00    	je     3302dc6 <HandleCrAccess+0x3f0>
 3302b3f:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302b45:	0f 87 a1 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b4b:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302b51:	0f 84 3e 02 00 00    	je     3302d95 <HandleCrAccess+0x3bf>
 3302b57:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302b5d:	0f 87 89 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b63:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302b69:	0f 84 f5 01 00 00    	je     3302d64 <HandleCrAccess+0x38e>
 3302b6f:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302b75:	0f 87 71 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b7b:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302b81:	0f 84 ac 01 00 00    	je     3302d33 <HandleCrAccess+0x35d>
 3302b87:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302b8d:	0f 87 59 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302b93:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3302b99:	0f 84 63 01 00 00    	je     3302d02 <HandleCrAccess+0x32c>
 3302b9f:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3302ba5:	0f 87 41 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302bab:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 3302bb1:	0f 84 1a 01 00 00    	je     3302cd1 <HandleCrAccess+0x2fb>
 3302bb7:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 3302bbd:	0f 87 29 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302bc3:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3302bc9:	0f 84 dd 00 00 00    	je     3302cac <HandleCrAccess+0x2d6>
 3302bcf:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3302bd5:	0f 87 11 03 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302bdb:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3302be1:	74 5a                	je     3302c3d <HandleCrAccess+0x267>
 3302be3:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3302be9:	0f 87 fd 02 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302bef:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3302bf5:	0f 84 8c 00 00 00    	je     3302c87 <HandleCrAccess+0x2b1>
 3302bfb:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3302c01:	0f 87 e5 02 00 00    	ja     3302eec <HandleCrAccess+0x516>
 3302c07:	48 85 c0             	test   %rax,%rax
 3302c0a:	74 0d                	je     3302c19 <HandleCrAccess+0x243>
 3302c0c:	48 3d 00 01 00 00    	cmp    $0x100,%rax
 3302c12:	74 4e                	je     3302c62 <HandleCrAccess+0x28c>
 3302c14:	e9 d3 02 00 00       	jmpq   3302eec <HandleCrAccess+0x516>
 3302c19:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c1d:	48 8b 00             	mov    (%rax),%rax
 3302c20:	48 c7 45 c8 02 68 00 	movq   $0x6802,-0x38(%rbp)
 3302c27:	00 
 3302c28:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3302c2c:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3302c30:	48 8b 55 c0          	mov    -0x40(%rbp),%rdx
 3302c34:	0f 79 c2             	vmwrite %rdx,%rax
 3302c37:	90                   	nop
 3302c38:	e9 56 05 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302c3d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c41:	48 8b 40 08          	mov    0x8(%rax),%rax
 3302c45:	48 c7 45 b8 02 68 00 	movq   $0x6802,-0x48(%rbp)
 3302c4c:	00 
 3302c4d:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3302c51:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3302c55:	48 8b 55 b0          	mov    -0x50(%rbp),%rdx
 3302c59:	0f 79 c2             	vmwrite %rdx,%rax
 3302c5c:	90                   	nop
 3302c5d:	e9 31 05 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302c62:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c66:	48 8b 40 10          	mov    0x10(%rax),%rax
 3302c6a:	48 c7 45 a8 02 68 00 	movq   $0x6802,-0x58(%rbp)
 3302c71:	00 
 3302c72:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3302c76:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 3302c7a:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
 3302c7e:	0f 79 c2             	vmwrite %rdx,%rax
 3302c81:	90                   	nop
 3302c82:	e9 0c 05 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302c87:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302c8b:	48 8b 40 18          	mov    0x18(%rax),%rax
 3302c8f:	48 c7 45 98 02 68 00 	movq   $0x6802,-0x68(%rbp)
 3302c96:	00 
 3302c97:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 3302c9b:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3302c9f:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
 3302ca3:	0f 79 c2             	vmwrite %rdx,%rax
 3302ca6:	90                   	nop
 3302ca7:	e9 e7 04 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302cac:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302cb0:	48 8b 40 78          	mov    0x78(%rax),%rax
 3302cb4:	48 c7 45 88 02 68 00 	movq   $0x6802,-0x78(%rbp)
 3302cbb:	00 
 3302cbc:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 3302cc0:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3302cc4:	48 8b 55 80          	mov    -0x80(%rbp),%rdx
 3302cc8:	0f 79 c2             	vmwrite %rdx,%rax
 3302ccb:	90                   	nop
 3302ccc:	e9 c2 04 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302cd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302cd5:	48 8b 40 30          	mov    0x30(%rax),%rax
 3302cd9:	48 c7 85 78 ff ff ff 	movq   $0x6802,-0x88(%rbp)
 3302ce0:	02 68 00 00 
 3302ce4:	48 89 85 70 ff ff ff 	mov    %rax,-0x90(%rbp)
 3302ceb:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 3302cf2:	48 8b 95 70 ff ff ff 	mov    -0x90(%rbp),%rdx
 3302cf9:	0f 79 c2             	vmwrite %rdx,%rax
 3302cfc:	90                   	nop
 3302cfd:	e9 91 04 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302d02:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d06:	48 8b 40 20          	mov    0x20(%rax),%rax
 3302d0a:	48 c7 85 68 ff ff ff 	movq   $0x6802,-0x98(%rbp)
 3302d11:	02 68 00 00 
 3302d15:	48 89 85 60 ff ff ff 	mov    %rax,-0xa0(%rbp)
 3302d1c:	48 8b 85 68 ff ff ff 	mov    -0x98(%rbp),%rax
 3302d23:	48 8b 95 60 ff ff ff 	mov    -0xa0(%rbp),%rdx
 3302d2a:	0f 79 c2             	vmwrite %rdx,%rax
 3302d2d:	90                   	nop
 3302d2e:	e9 60 04 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302d33:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d37:	48 8b 40 28          	mov    0x28(%rax),%rax
 3302d3b:	48 c7 85 58 ff ff ff 	movq   $0x6802,-0xa8(%rbp)
 3302d42:	02 68 00 00 
 3302d46:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 3302d4d:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 3302d54:	48 8b 95 50 ff ff ff 	mov    -0xb0(%rbp),%rdx
 3302d5b:	0f 79 c2             	vmwrite %rdx,%rax
 3302d5e:	90                   	nop
 3302d5f:	e9 2f 04 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302d64:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d68:	48 8b 40 38          	mov    0x38(%rax),%rax
 3302d6c:	48 c7 85 48 ff ff ff 	movq   $0x6802,-0xb8(%rbp)
 3302d73:	02 68 00 00 
 3302d77:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3302d7e:	48 8b 85 48 ff ff ff 	mov    -0xb8(%rbp),%rax
 3302d85:	48 8b 95 40 ff ff ff 	mov    -0xc0(%rbp),%rdx
 3302d8c:	0f 79 c2             	vmwrite %rdx,%rax
 3302d8f:	90                   	nop
 3302d90:	e9 fe 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302d95:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302d99:	48 8b 40 40          	mov    0x40(%rax),%rax
 3302d9d:	48 c7 85 38 ff ff ff 	movq   $0x6802,-0xc8(%rbp)
 3302da4:	02 68 00 00 
 3302da8:	48 89 85 30 ff ff ff 	mov    %rax,-0xd0(%rbp)
 3302daf:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 3302db6:	48 8b 95 30 ff ff ff 	mov    -0xd0(%rbp),%rdx
 3302dbd:	0f 79 c2             	vmwrite %rdx,%rax
 3302dc0:	90                   	nop
 3302dc1:	e9 cd 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302dc6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302dca:	48 8b 40 48          	mov    0x48(%rax),%rax
 3302dce:	48 c7 85 28 ff ff ff 	movq   $0x6802,-0xd8(%rbp)
 3302dd5:	02 68 00 00 
 3302dd9:	48 89 85 20 ff ff ff 	mov    %rax,-0xe0(%rbp)
 3302de0:	48 8b 85 28 ff ff ff 	mov    -0xd8(%rbp),%rax
 3302de7:	48 8b 95 20 ff ff ff 	mov    -0xe0(%rbp),%rdx
 3302dee:	0f 79 c2             	vmwrite %rdx,%rax
 3302df1:	90                   	nop
 3302df2:	e9 9c 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302df7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302dfb:	48 8b 40 50          	mov    0x50(%rax),%rax
 3302dff:	48 c7 85 18 ff ff ff 	movq   $0x6802,-0xe8(%rbp)
 3302e06:	02 68 00 00 
 3302e0a:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 3302e11:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3302e18:	48 8b 95 10 ff ff ff 	mov    -0xf0(%rbp),%rdx
 3302e1f:	0f 79 c2             	vmwrite %rdx,%rax
 3302e22:	90                   	nop
 3302e23:	e9 6b 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302e28:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e2c:	48 8b 40 58          	mov    0x58(%rax),%rax
 3302e30:	48 c7 85 08 ff ff ff 	movq   $0x6802,-0xf8(%rbp)
 3302e37:	02 68 00 00 
 3302e3b:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 3302e42:	48 8b 85 08 ff ff ff 	mov    -0xf8(%rbp),%rax
 3302e49:	48 8b 95 00 ff ff ff 	mov    -0x100(%rbp),%rdx
 3302e50:	0f 79 c2             	vmwrite %rdx,%rax
 3302e53:	90                   	nop
 3302e54:	e9 3a 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302e59:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e5d:	48 8b 40 60          	mov    0x60(%rax),%rax
 3302e61:	48 c7 85 f8 fe ff ff 	movq   $0x6802,-0x108(%rbp)
 3302e68:	02 68 00 00 
 3302e6c:	48 89 85 f0 fe ff ff 	mov    %rax,-0x110(%rbp)
 3302e73:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3302e7a:	48 8b 95 f0 fe ff ff 	mov    -0x110(%rbp),%rdx
 3302e81:	0f 79 c2             	vmwrite %rdx,%rax
 3302e84:	90                   	nop
 3302e85:	e9 09 03 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302e8a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302e8e:	48 8b 40 68          	mov    0x68(%rax),%rax
 3302e92:	48 c7 85 e8 fe ff ff 	movq   $0x6802,-0x118(%rbp)
 3302e99:	02 68 00 00 
 3302e9d:	48 89 85 e0 fe ff ff 	mov    %rax,-0x120(%rbp)
 3302ea4:	48 8b 85 e8 fe ff ff 	mov    -0x118(%rbp),%rax
 3302eab:	48 8b 95 e0 fe ff ff 	mov    -0x120(%rbp),%rdx
 3302eb2:	0f 79 c2             	vmwrite %rdx,%rax
 3302eb5:	90                   	nop
 3302eb6:	e9 d8 02 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302ebb:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3302ebf:	48 8b 40 70          	mov    0x70(%rax),%rax
 3302ec3:	48 c7 85 d8 fe ff ff 	movq   $0x6802,-0x128(%rbp)
 3302eca:	02 68 00 00 
 3302ece:	48 89 85 d0 fe ff ff 	mov    %rax,-0x130(%rbp)
 3302ed5:	48 8b 85 d8 fe ff ff 	mov    -0x128(%rbp),%rax
 3302edc:	48 8b 95 d0 fe ff ff 	mov    -0x130(%rbp),%rdx
 3302ee3:	0f 79 c2             	vmwrite %rdx,%rax
 3302ee6:	90                   	nop
 3302ee7:	e9 a7 02 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3302eec:	48 8d 3d d5 34 00 00 	lea    0x34d5(%rip),%rdi        # 33063c8 <CopyMemoryToGuest+0x871>
 3302ef3:	b8 00 00 00 00       	mov    $0x0,%eax
 3302ef8:	e8 98 f2 ff ff       	callq  3302195 <Print>
 3302efd:	b8 10 00 00 00       	mov    $0x10,%eax
 3302f02:	e9 b4 02 00 00       	jmpq   33031bb <HandleCrAccess+0x7e5>
 3302f07:	48 83 7d f0 10       	cmpq   $0x10,-0x10(%rbp)
 3302f0c:	0f 85 80 02 00 00    	jne    3303192 <HandleCrAccess+0x7bc>
 3302f12:	bf 02 68 00 00       	mov    $0x6802,%edi
 3302f17:	e8 a7 f7 ff ff       	callq  33026c3 <vmread>
 3302f1c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3302f20:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3302f24:	25 00 0f 00 00       	and    $0xf00,%eax
 3302f29:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302f2f:	0f 84 37 02 00 00    	je     330316c <HandleCrAccess+0x796>
 3302f35:	48 3d 00 0f 00 00    	cmp    $0xf00,%rax
 3302f3b:	0f 87 39 02 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302f41:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302f47:	0f 84 11 02 00 00    	je     330315e <HandleCrAccess+0x788>
 3302f4d:	48 3d 00 0e 00 00    	cmp    $0xe00,%rax
 3302f53:	0f 87 21 02 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302f59:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302f5f:	0f 84 eb 01 00 00    	je     3303150 <HandleCrAccess+0x77a>
 3302f65:	48 3d 00 0d 00 00    	cmp    $0xd00,%rax
 3302f6b:	0f 87 09 02 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302f71:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302f77:	0f 84 c5 01 00 00    	je     3303142 <HandleCrAccess+0x76c>
 3302f7d:	48 3d 00 0c 00 00    	cmp    $0xc00,%rax
 3302f83:	0f 87 f1 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302f89:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302f8f:	0f 84 9f 01 00 00    	je     3303134 <HandleCrAccess+0x75e>
 3302f95:	48 3d 00 0b 00 00    	cmp    $0xb00,%rax
 3302f9b:	0f 87 d9 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302fa1:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302fa7:	0f 84 79 01 00 00    	je     3303126 <HandleCrAccess+0x750>
 3302fad:	48 3d 00 0a 00 00    	cmp    $0xa00,%rax
 3302fb3:	0f 87 c1 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302fb9:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302fbf:	0f 84 53 01 00 00    	je     3303118 <HandleCrAccess+0x742>
 3302fc5:	48 3d 00 09 00 00    	cmp    $0x900,%rax
 3302fcb:	0f 87 a9 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302fd1:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302fd7:	0f 84 2d 01 00 00    	je     330310a <HandleCrAccess+0x734>
 3302fdd:	48 3d 00 08 00 00    	cmp    $0x800,%rax
 3302fe3:	0f 87 91 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3302fe9:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302fef:	0f 84 04 01 00 00    	je     33030f9 <HandleCrAccess+0x723>
 3302ff5:	48 3d 00 07 00 00    	cmp    $0x700,%rax
 3302ffb:	0f 87 79 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3303001:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3303007:	0f 84 db 00 00 00    	je     33030e8 <HandleCrAccess+0x712>
 330300d:	48 3d 00 06 00 00    	cmp    $0x600,%rax
 3303013:	0f 87 61 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3303019:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 330301f:	0f 84 b2 00 00 00    	je     33030d7 <HandleCrAccess+0x701>
 3303025:	48 3d 00 05 00 00    	cmp    $0x500,%rax
 330302b:	0f 87 49 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3303031:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3303037:	0f 84 89 00 00 00    	je     33030c6 <HandleCrAccess+0x6f0>
 330303d:	48 3d 00 04 00 00    	cmp    $0x400,%rax
 3303043:	0f 87 31 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3303049:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 330304f:	74 42                	je     3303093 <HandleCrAccess+0x6bd>
 3303051:	48 3d 00 03 00 00    	cmp    $0x300,%rax
 3303057:	0f 87 1d 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 330305d:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 3303063:	74 50                	je     33030b5 <HandleCrAccess+0x6df>
 3303065:	48 3d 00 02 00 00    	cmp    $0x200,%rax
 330306b:	0f 87 09 01 00 00    	ja     330317a <HandleCrAccess+0x7a4>
 3303071:	48 85 c0             	test   %rax,%rax
 3303074:	74 0d                	je     3303083 <HandleCrAccess+0x6ad>
 3303076:	48 3d 00 01 00 00    	cmp    $0x100,%rax
 330307c:	74 26                	je     33030a4 <HandleCrAccess+0x6ce>
 330307e:	e9 f7 00 00 00       	jmpq   330317a <HandleCrAccess+0x7a4>
 3303083:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303087:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330308b:	48 89 10             	mov    %rdx,(%rax)
 330308e:	e9 00 01 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 3303093:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303097:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330309b:	48 89 50 08          	mov    %rdx,0x8(%rax)
 330309f:	e9 ef 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030a4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030a8:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030ac:	48 89 50 10          	mov    %rdx,0x10(%rax)
 33030b0:	e9 de 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030b9:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030bd:	48 89 50 18          	mov    %rdx,0x18(%rax)
 33030c1:	e9 cd 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030ca:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030ce:	48 89 50 78          	mov    %rdx,0x78(%rax)
 33030d2:	e9 bc 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030d7:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030db:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030df:	48 89 50 30          	mov    %rdx,0x30(%rax)
 33030e3:	e9 ab 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030e8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030ec:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33030f0:	48 89 50 20          	mov    %rdx,0x20(%rax)
 33030f4:	e9 9a 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 33030f9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33030fd:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303101:	48 89 50 28          	mov    %rdx,0x28(%rax)
 3303105:	e9 89 00 00 00       	jmpq   3303193 <HandleCrAccess+0x7bd>
 330310a:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330310e:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303112:	48 89 50 38          	mov    %rdx,0x38(%rax)
 3303116:	eb 7b                	jmp    3303193 <HandleCrAccess+0x7bd>
 3303118:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330311c:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303120:	48 89 50 40          	mov    %rdx,0x40(%rax)
 3303124:	eb 6d                	jmp    3303193 <HandleCrAccess+0x7bd>
 3303126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330312a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330312e:	48 89 50 48          	mov    %rdx,0x48(%rax)
 3303132:	eb 5f                	jmp    3303193 <HandleCrAccess+0x7bd>
 3303134:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303138:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330313c:	48 89 50 50          	mov    %rdx,0x50(%rax)
 3303140:	eb 51                	jmp    3303193 <HandleCrAccess+0x7bd>
 3303142:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303146:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330314a:	48 89 50 58          	mov    %rdx,0x58(%rax)
 330314e:	eb 43                	jmp    3303193 <HandleCrAccess+0x7bd>
 3303150:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303154:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303158:	48 89 50 60          	mov    %rdx,0x60(%rax)
 330315c:	eb 35                	jmp    3303193 <HandleCrAccess+0x7bd>
 330315e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303162:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303166:	48 89 50 68          	mov    %rdx,0x68(%rax)
 330316a:	eb 27                	jmp    3303193 <HandleCrAccess+0x7bd>
 330316c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303170:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303174:	48 89 50 70          	mov    %rdx,0x70(%rax)
 3303178:	eb 19                	jmp    3303193 <HandleCrAccess+0x7bd>
 330317a:	48 8d 3d 47 32 00 00 	lea    0x3247(%rip),%rdi        # 33063c8 <CopyMemoryToGuest+0x871>
 3303181:	b8 00 00 00 00       	mov    $0x0,%eax
 3303186:	e8 0a f0 ff ff       	callq  3302195 <Print>
 330318b:	b8 10 00 00 00       	mov    $0x10,%eax
 3303190:	eb 29                	jmp    33031bb <HandleCrAccess+0x7e5>
 3303192:	90                   	nop
 3303193:	bf 0c 44 00 00       	mov    $0x440c,%edi
 3303198:	e8 26 f5 ff ff       	callq  33026c3 <vmread>
 330319d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33031a1:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 33031a8:	48 01 c2             	add    %rax,%rdx
 33031ab:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33031af:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33031b6:	b8 00 00 00 00       	mov    $0x0,%eax
 33031bb:	c9                   	leaveq 
 33031bc:	c3                   	retq   

00000000033031bd <EmulateXSETBV>:
 33031bd:	f3 0f 1e fa          	endbr64 
 33031c1:	55                   	push   %rbp
 33031c2:	48 89 e5             	mov    %rsp,%rbp
 33031c5:	53                   	push   %rbx
 33031c6:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
 33031cd:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
 33031d4:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 33031db:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33031df:	48 c7 45 e0 01 00 00 	movq   $0x1,-0x20(%rbp)
 33031e6:	00 
 33031e7:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 33031ee:	00 
 33031ef:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 33031f3:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33031f7:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 33031fb:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 33031ff:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 3303203:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 3303207:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 330320b:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 330320f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303213:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3303217:	48 89 d1             	mov    %rdx,%rcx
 330321a:	0f a2                	cpuid  
 330321c:	48 89 de             	mov    %rbx,%rsi
 330321f:	48 89 c7             	mov    %rax,%rdi
 3303222:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303226:	48 89 38             	mov    %rdi,(%rax)
 3303229:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330322d:	48 89 30             	mov    %rsi,(%rax)
 3303230:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303234:	48 89 08             	mov    %rcx,(%rax)
 3303237:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 330323b:	48 89 10             	mov    %rdx,(%rax)
 330323e:	90                   	nop
 330323f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303243:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303247:	89 c0                	mov    %eax,%eax
 3303249:	48 85 c0             	test   %rax,%rax
 330324c:	75 4f                	jne    330329d <EmulateXSETBV+0xe0>
 330324e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303252:	48 8b 00             	mov    (%rax),%rax
 3303255:	83 e0 01             	and    $0x1,%eax
 3303258:	48 85 c0             	test   %rax,%rax
 330325b:	74 40                	je     330329d <EmulateXSETBV+0xe0>
 330325d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303261:	48 8b 00             	mov    (%rax),%rax
 3303264:	83 e0 04             	and    $0x4,%eax
 3303267:	48 85 c0             	test   %rax,%rax
 330326a:	74 0f                	je     330327b <EmulateXSETBV+0xbe>
 330326c:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303270:	48 8b 00             	mov    (%rax),%rax
 3303273:	83 e0 02             	and    $0x2,%eax
 3303276:	48 85 c0             	test   %rax,%rax
 3303279:	74 22                	je     330329d <EmulateXSETBV+0xe0>
 330327b:	bf 04 68 00 00       	mov    $0x6804,%edi
 3303280:	e8 3e f4 ff ff       	callq  33026c3 <vmread>
 3303285:	25 00 00 04 00       	and    $0x40000,%eax
 330328a:	48 85 c0             	test   %rax,%rax
 330328d:	74 0e                	je     330329d <EmulateXSETBV+0xe0>
 330328f:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3303293:	25 00 00 00 04       	and    $0x4000000,%eax
 3303298:	48 85 c0             	test   %rax,%rax
 330329b:	75 18                	jne    33032b5 <EmulateXSETBV+0xf8>
 330329d:	48 8d 3d 5b 31 00 00 	lea    0x315b(%rip),%rdi        # 33063ff <CopyMemoryToGuest+0x8a8>
 33032a4:	b8 00 00 00 00       	mov    $0x0,%eax
 33032a9:	e8 8d ef ff ff       	callq  330223b <PrintDebugLevelDebug>
 33032ae:	b8 00 00 00 00       	mov    $0x0,%eax
 33032b3:	eb 59                	jmp    330330e <EmulateXSETBV+0x151>
 33032b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032b9:	48 8b 40 10          	mov    0x10(%rax),%rax
 33032bd:	89 c2                	mov    %eax,%edx
 33032bf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032c3:	48 8b 00             	mov    (%rax),%rax
 33032c6:	89 c1                	mov    %eax,%ecx
 33032c8:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33032cc:	48 8b 40 18          	mov    0x18(%rax),%rax
 33032d0:	89 45 b4             	mov    %eax,-0x4c(%rbp)
 33032d3:	89 4d b0             	mov    %ecx,-0x50(%rbp)
 33032d6:	89 55 ac             	mov    %edx,-0x54(%rbp)
 33032d9:	8b 55 b4             	mov    -0x4c(%rbp),%edx
 33032dc:	8b 45 b0             	mov    -0x50(%rbp),%eax
 33032df:	8b 4d ac             	mov    -0x54(%rbp),%ecx
 33032e2:	0f 01 d1             	xsetbv 
 33032e5:	90                   	nop
 33032e6:	bf 0c 44 00 00       	mov    $0x440c,%edi
 33032eb:	e8 d3 f3 ff ff       	callq  33026c3 <vmread>
 33032f0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33032f4:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 33032fb:	48 01 c2             	add    %rax,%rdx
 33032fe:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303302:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 3303309:	b8 00 00 00 00       	mov    $0x0,%eax
 330330e:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
 3303315:	5b                   	pop    %rbx
 3303316:	5d                   	pop    %rbp
 3303317:	c3                   	retq   

0000000003303318 <HandleVmCall>:
 3303318:	f3 0f 1e fa          	endbr64 
 330331c:	55                   	push   %rbp
 330331d:	48 89 e5             	mov    %rsp,%rbp
 3303320:	53                   	push   %rbx
 3303321:	48 83 ec 78          	sub    $0x78,%rsp
 3303325:	48 89 7d 88          	mov    %rdi,-0x78(%rbp)
 3303329:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330332d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303331:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303335:	48 8b 00             	mov    (%rax),%rax
 3303338:	48 3d 44 33 22 11    	cmp    $0x11223344,%rax
 330333e:	0f 85 80 00 00 00    	jne    33033c4 <HandleVmCall+0xac>
 3303344:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303348:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 330334f:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303356:	48 8b 90 50 86 00 00 	mov    0x8650(%rax),%rdx
 330335d:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303361:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303368:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330336f:	48 8b 88 48 86 00 00 	mov    0x8648(%rax),%rcx
 3303376:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330337a:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303381:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303388:	48 89 ce             	mov    %rcx,%rsi
 330338b:	48 89 c7             	mov    %rax,%rdi
 330338e:	e8 35 1f 00 00       	callq  33052c8 <SetupHypervisorCodeProtection>
 3303393:	48 85 c0             	test   %rax,%rax
 3303396:	74 13                	je     33033ab <HandleVmCall+0x93>
 3303398:	48 8d 3d 81 30 00 00 	lea    0x3081(%rip),%rdi        # 3306420 <CopyMemoryToGuest+0x8c9>
 330339f:	b8 00 00 00 00       	mov    $0x0,%eax
 33033a4:	e8 ec ed ff ff       	callq  3302195 <Print>
 33033a9:	eb fe                	jmp    33033a9 <HandleVmCall+0x91>
 33033ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033af:	48 c7 80 80 00 00 00 	movq   $0x7c00,0x80(%rax)
 33033b6:	00 7c 00 00 
 33033ba:	b8 00 00 00 00       	mov    $0x0,%eax
 33033bf:	e9 8f 02 00 00       	jmpq   3303653 <HandleVmCall+0x33b>
 33033c4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033c8:	48 8b 80 80 00 00 00 	mov    0x80(%rax),%rax
 33033cf:	48 3d fc ff 00 00    	cmp    $0xfffc,%rax
 33033d5:	0f 85 73 02 00 00    	jne    330364e <HandleVmCall+0x336>
 33033db:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033df:	48 8b 00             	mov    (%rax),%rax
 33033e2:	48 3d 20 e8 00 00    	cmp    $0xe820,%rax
 33033e8:	0f 85 cf 01 00 00    	jne    33035bd <HandleVmCall+0x2a5>
 33033ee:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
 33033f2:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33033f6:	48 8b 50 08          	mov    0x8(%rax),%rdx
 33033fa:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33033fe:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303405:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330340c:	0f b6 80 21 86 00 00 	movzbl 0x8621(%rax),%eax
 3303413:	0f b6 c0             	movzbl %al,%eax
 3303416:	48 39 c2             	cmp    %rax,%rdx
 3303419:	72 09                	jb     3303424 <HandleVmCall+0x10c>
 330341b:	c6 45 ef 01          	movb   $0x1,-0x11(%rbp)
 330341f:	e9 c8 00 00 00       	jmpq   33034ec <HandleVmCall+0x1d4>
 3303424:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303428:	48 c7 00 50 41 4d 53 	movq   $0x534d4150,(%rax)
 330342f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303433:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303437:	b0 00                	mov    $0x0,%al
 3303439:	48 83 c8 14          	or     $0x14,%rax
 330343d:	48 89 c2             	mov    %rax,%rdx
 3303440:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303444:	48 89 50 10          	mov    %rdx,0x10(%rax)
 3303448:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 330344c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303453:	48 8b b0 88 bb 21 02 	mov    0x221bb88(%rax),%rsi
 330345a:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330345e:	48 8b 50 08          	mov    0x8(%rax),%rdx
 3303462:	48 8d 4a 01          	lea    0x1(%rdx),%rcx
 3303466:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 330346a:	48 89 48 08          	mov    %rcx,0x8(%rax)
 330346e:	48 89 d0             	mov    %rdx,%rax
 3303471:	48 01 c0             	add    %rax,%rax
 3303474:	48 01 d0             	add    %rdx,%rax
 3303477:	48 c1 e0 03          	shl    $0x3,%rax
 330347b:	48 05 50 83 00 00    	add    $0x8350,%rax
 3303481:	48 01 f0             	add    %rsi,%rax
 3303484:	48 8d 58 01          	lea    0x1(%rax),%rbx
 3303488:	bf 06 68 00 00       	mov    $0x6806,%edi
 330348d:	e8 31 f2 ff ff       	callq  33026c3 <vmread>
 3303492:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3303496:	48 8b 52 28          	mov    0x28(%rdx),%rdx
 330349a:	0f b7 d2             	movzwl %dx,%edx
 330349d:	48 01 d0             	add    %rdx,%rax
 33034a0:	ba 18 00 00 00       	mov    $0x18,%edx
 33034a5:	48 89 de             	mov    %rbx,%rsi
 33034a8:	48 89 c7             	mov    %rax,%rdi
 33034ab:	e8 f1 ee ff ff       	callq  33023a1 <CopyMemory>
 33034b0:	c6 45 ef 00          	movb   $0x0,-0x11(%rbp)
 33034b4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33034b8:	48 8b 50 08          	mov    0x8(%rax),%rdx
 33034bc:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33034c0:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33034c7:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33034ce:	0f b6 80 21 86 00 00 	movzbl 0x8621(%rax),%eax
 33034d5:	0f b6 c0             	movzbl %al,%eax
 33034d8:	48 39 c2             	cmp    %rax,%rdx
 33034db:	75 0e                	jne    33034eb <HandleVmCall+0x1d3>
 33034dd:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33034e1:	48 c7 40 08 00 00 00 	movq   $0x0,0x8(%rax)
 33034e8:	00 
 33034e9:	eb 01                	jmp    33034ec <HandleVmCall+0x1d4>
 33034eb:	90                   	nop
 33034ec:	bf 0a 68 00 00       	mov    $0x680a,%edi
 33034f1:	e8 cd f1 ff ff       	callq  33026c3 <vmread>
 33034f6:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 33034fa:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 33034fe:	48 01 d0             	add    %rdx,%rax
 3303501:	8b 00                	mov    (%rax),%eax
 3303503:	89 c2                	mov    %eax,%edx
 3303505:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303509:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 3303510:	bf 0a 68 00 00       	mov    $0x680a,%edi
 3303515:	e8 a9 f1 ff ff       	callq  33026c3 <vmread>
 330351a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330351e:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 3303522:	48 01 d0             	add    %rdx,%rax
 3303525:	48 83 c0 02          	add    $0x2,%rax
 3303529:	0f b7 00             	movzwl (%rax),%eax
 330352c:	66 89 45 de          	mov    %ax,-0x22(%rbp)
 3303530:	bf 0a 68 00 00       	mov    $0x680a,%edi
 3303535:	e8 89 f1 ff ff       	callq  33026c3 <vmread>
 330353a:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330353e:	48 8b 52 78          	mov    0x78(%rdx),%rdx
 3303542:	48 01 d0             	add    %rdx,%rax
 3303545:	48 83 c0 04          	add    $0x4,%rax
 3303549:	0f b7 00             	movzwl (%rax),%eax
 330354c:	66 89 45 dc          	mov    %ax,-0x24(%rbp)
 3303550:	80 7d ef 00          	cmpb   $0x0,-0x11(%rbp)
 3303554:	74 07                	je     330355d <HandleVmCall+0x245>
 3303556:	66 83 4d dc 01       	orw    $0x1,-0x24(%rbp)
 330355b:	eb 05                	jmp    3303562 <HandleVmCall+0x24a>
 330355d:	66 83 65 dc fe       	andw   $0xfffe,-0x24(%rbp)
 3303562:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
 3303566:	c1 e0 04             	shl    $0x4,%eax
 3303569:	48 98                	cltq   
 330356b:	48 c7 45 c0 08 68 00 	movq   $0x6808,-0x40(%rbp)
 3303572:	00 
 3303573:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 3303577:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 330357b:	48 8b 55 b8          	mov    -0x48(%rbp),%rdx
 330357f:	0f 79 c2             	vmwrite %rdx,%rax
 3303582:	90                   	nop
 3303583:	0f b7 45 de          	movzwl -0x22(%rbp),%eax
 3303587:	48 c7 45 d0 02 08 00 	movq   $0x802,-0x30(%rbp)
 330358e:	00 
 330358f:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3303593:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303597:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 330359b:	0f 79 c2             	vmwrite %rdx,%rax
 330359e:	90                   	nop
 330359f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035a3:	48 8b 40 78          	mov    0x78(%rax),%rax
 33035a7:	48 8d 50 06          	lea    0x6(%rax),%rdx
 33035ab:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035af:	48 89 50 78          	mov    %rdx,0x78(%rax)
 33035b3:	b8 00 00 00 00       	mov    $0x0,%eax
 33035b8:	e9 96 00 00 00       	jmpq   3303653 <HandleVmCall+0x33b>
 33035bd:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33035c1:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33035c8:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33035cf:	48 8b 90 60 86 00 00 	mov    0x8660(%rax),%rdx
 33035d6:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33035da:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33035e1:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 33035e5:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33035ec:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33035f3:	48 8b 80 58 86 00 00 	mov    0x8658(%rax),%rax
 33035fa:	48 c7 45 a0 08 68 00 	movq   $0x6808,-0x60(%rbp)
 3303601:	00 
 3303602:	48 89 45 98          	mov    %rax,-0x68(%rbp)
 3303606:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 330360a:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 330360e:	0f 79 c2             	vmwrite %rdx,%rax
 3303611:	90                   	nop
 3303612:	48 8b 45 88          	mov    -0x78(%rbp),%rax
 3303616:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 330361d:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 3303624:	48 8b 80 58 86 00 00 	mov    0x8658(%rax),%rax
 330362b:	48 c1 e8 04          	shr    $0x4,%rax
 330362f:	48 c7 45 b0 02 08 00 	movq   $0x802,-0x50(%rbp)
 3303636:	00 
 3303637:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 330363b:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 330363f:	48 8b 55 a8          	mov    -0x58(%rbp),%rdx
 3303643:	0f 79 c2             	vmwrite %rdx,%rax
 3303646:	90                   	nop
 3303647:	b8 00 00 00 00       	mov    $0x0,%eax
 330364c:	eb 05                	jmp    3303653 <HandleVmCall+0x33b>
 330364e:	b8 0d 00 00 00       	mov    $0xd,%eax
 3303653:	48 83 c4 78          	add    $0x78,%rsp
 3303657:	5b                   	pop    %rbx
 3303658:	5d                   	pop    %rbp
 3303659:	c3                   	retq   

000000000330365a <HandleMsrRead>:
 330365a:	f3 0f 1e fa          	endbr64 
 330365e:	55                   	push   %rbp
 330365f:	48 89 e5             	mov    %rsp,%rbp
 3303662:	48 83 ec 40          	sub    $0x40,%rsp
 3303666:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 330366a:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 330366e:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3303672:	bf 0c 44 00 00       	mov    $0x440c,%edi
 3303677:	e8 47 f0 ff ff       	callq  33026c3 <vmread>
 330367c:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3303680:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 3303687:	48 01 c2             	add    %rax,%rdx
 330368a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330368e:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 3303695:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303699:	48 8b 40 10          	mov    0x10(%rax),%rax
 330369d:	83 e0 ff             	and    $0xffffffff,%eax
 33036a0:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33036a4:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33036a8:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33036ac:	48 c7 45 d8 00 00 00 	movq   $0x0,-0x28(%rbp)
 33036b3:	00 
 33036b4:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 33036bb:	00 
 33036bc:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33036c0:	48 89 c1             	mov    %rax,%rcx
 33036c3:	0f 32                	rdmsr  
 33036c5:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 33036c9:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33036cd:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33036d1:	48 c1 e0 20          	shl    $0x20,%rax
 33036d5:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 33036d9:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33036dd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33036e1:	89 c2                	mov    %eax,%edx
 33036e3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33036e7:	48 89 10             	mov    %rdx,(%rax)
 33036ea:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33036ee:	48 c1 e8 20          	shr    $0x20,%rax
 33036f2:	89 c2                	mov    %eax,%edx
 33036f4:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33036f8:	48 89 50 18          	mov    %rdx,0x18(%rax)
 33036fc:	b8 00 00 00 00       	mov    $0x0,%eax
 3303701:	c9                   	leaveq 
 3303702:	c3                   	retq   

0000000003303703 <HandleMsrWrite>:
 3303703:	f3 0f 1e fa          	endbr64 
 3303707:	55                   	push   %rbp
 3303708:	48 89 e5             	mov    %rsp,%rbp
 330370b:	48 83 ec 40          	sub    $0x40,%rsp
 330370f:	48 89 7d c8          	mov    %rdi,-0x38(%rbp)
 3303713:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3303717:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330371b:	bf 0c 44 00 00       	mov    $0x440c,%edi
 3303720:	e8 9e ef ff ff       	callq  33026c3 <vmread>
 3303725:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3303729:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 3303730:	48 01 c2             	add    %rax,%rdx
 3303733:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303737:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 330373e:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303742:	48 8b 40 10          	mov    0x10(%rax),%rax
 3303746:	83 e0 ff             	and    $0xffffffff,%eax
 3303749:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330374d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3303751:	48 8b 00             	mov    (%rax),%rax
 3303754:	89 c2                	mov    %eax,%edx
 3303756:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330375a:	48 8b 40 18          	mov    0x18(%rax),%rax
 330375e:	48 c1 e0 20          	shl    $0x20,%rax
 3303762:	48 09 d0             	or     %rdx,%rax
 3303765:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3303769:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 330376d:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303771:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303775:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3303779:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330377d:	48 c1 e8 20          	shr    $0x20,%rax
 3303781:	48 89 c2             	mov    %rax,%rdx
 3303784:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3303788:	89 c0                	mov    %eax,%eax
 330378a:	48 8b 4d e0          	mov    -0x20(%rbp),%rcx
 330378e:	0f 30                	wrmsr  
 3303790:	90                   	nop
 3303791:	b8 00 00 00 00       	mov    $0x0,%eax
 3303796:	c9                   	leaveq 
 3303797:	c3                   	retq   

0000000003303798 <HandleCpuId>:
 3303798:	f3 0f 1e fa          	endbr64 
 330379c:	55                   	push   %rbp
 330379d:	48 89 e5             	mov    %rsp,%rbp
 33037a0:	53                   	push   %rbx
 33037a1:	48 81 ec 88 00 00 00 	sub    $0x88,%rsp
 33037a8:	48 89 bd 78 ff ff ff 	mov    %rdi,-0x88(%rbp)
 33037af:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 33037b6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 33037ba:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33037be:	48 8b 00             	mov    (%rax),%rax
 33037c1:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33037c5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33037c9:	48 8b 40 10          	mov    0x10(%rax),%rax
 33037cd:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 33037d1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33037d5:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33037d9:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33037dd:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 33037e1:	48 8d 45 a0          	lea    -0x60(%rbp),%rax
 33037e5:	48 89 45 c0          	mov    %rax,-0x40(%rbp)
 33037e9:	48 8d 45 98          	lea    -0x68(%rbp),%rax
 33037ed:	48 89 45 b8          	mov    %rax,-0x48(%rbp)
 33037f1:	48 8d 45 90          	lea    -0x70(%rbp),%rax
 33037f5:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 33037f9:	48 8d 45 88          	lea    -0x78(%rbp),%rax
 33037fd:	48 89 45 a8          	mov    %rax,-0x58(%rbp)
 3303801:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303805:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3303809:	48 89 d1             	mov    %rdx,%rcx
 330380c:	0f a2                	cpuid  
 330380e:	48 89 de             	mov    %rbx,%rsi
 3303811:	48 89 c7             	mov    %rax,%rdi
 3303814:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303818:	48 89 38             	mov    %rdi,(%rax)
 330381b:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 330381f:	48 89 30             	mov    %rsi,(%rax)
 3303822:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 3303826:	48 89 08             	mov    %rcx,(%rax)
 3303829:	48 8b 45 a8          	mov    -0x58(%rbp),%rax
 330382d:	48 89 10             	mov    %rdx,(%rax)
 3303830:	90                   	nop
 3303831:	48 83 7d e0 01       	cmpq   $0x1,-0x20(%rbp)
 3303836:	75 28                	jne    3303860 <HandleCpuId+0xc8>
 3303838:	bf 04 68 00 00       	mov    $0x6804,%edi
 330383d:	e8 81 ee ff ff       	callq  33026c3 <vmread>
 3303842:	25 00 00 04 00       	and    $0x40000,%eax
 3303847:	48 85 c0             	test   %rax,%rax
 330384a:	74 0a                	je     3303856 <HandleCpuId+0xbe>
 330384c:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3303850:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 3303854:	eb 38                	jmp    330388e <HandleCpuId+0xf6>
 3303856:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 330385a:	48 89 45 90          	mov    %rax,-0x70(%rbp)
 330385e:	eb 2e                	jmp    330388e <HandleCpuId+0xf6>
 3303860:	48 83 7d e0 0d       	cmpq   $0xd,-0x20(%rbp)
 3303865:	75 27                	jne    330388e <HandleCpuId+0xf6>
 3303867:	48 83 7d d8 01       	cmpq   $0x1,-0x28(%rbp)
 330386c:	75 20                	jne    330388e <HandleCpuId+0xf6>
 330386e:	48 c7 45 a0 01 00 00 	movq   $0x1,-0x60(%rbp)
 3303875:	00 
 3303876:	48 c7 45 98 00 00 00 	movq   $0x0,-0x68(%rbp)
 330387d:	00 
 330387e:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
 3303885:	00 
 3303886:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
 330388d:	00 
 330388e:	48 8b 55 a0          	mov    -0x60(%rbp),%rdx
 3303892:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303896:	48 89 10             	mov    %rdx,(%rax)
 3303899:	48 8b 55 98          	mov    -0x68(%rbp),%rdx
 330389d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038a1:	48 89 50 08          	mov    %rdx,0x8(%rax)
 33038a5:	48 8b 55 90          	mov    -0x70(%rbp),%rdx
 33038a9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038ad:	48 89 50 10          	mov    %rdx,0x10(%rax)
 33038b1:	48 8b 55 88          	mov    -0x78(%rbp),%rdx
 33038b5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038b9:	48 89 50 18          	mov    %rdx,0x18(%rax)
 33038bd:	bf 0c 44 00 00       	mov    $0x440c,%edi
 33038c2:	e8 fc ed ff ff       	callq  33026c3 <vmread>
 33038c7:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33038cb:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 33038d2:	48 01 c2             	add    %rax,%rdx
 33038d5:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33038d9:	48 89 90 80 00 00 00 	mov    %rdx,0x80(%rax)
 33038e0:	b8 00 00 00 00       	mov    $0x0,%eax
 33038e5:	48 81 c4 88 00 00 00 	add    $0x88,%rsp
 33038ec:	5b                   	pop    %rbx
 33038ed:	5d                   	pop    %rbp
 33038ee:	c3                   	retq   

00000000033038ef <HandleEptViolation>:
 33038ef:	f3 0f 1e fa          	endbr64 
 33038f3:	55                   	push   %rbp
 33038f4:	48 89 e5             	mov    %rsp,%rbp
 33038f7:	53                   	push   %rbx
 33038f8:	48 83 ec 18          	sub    $0x18,%rsp
 33038fc:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3303900:	bf 00 24 00 00       	mov    $0x2400,%edi
 3303905:	e8 b9 ed ff ff       	callq  33026c3 <vmread>
 330390a:	48 89 c2             	mov    %rax,%rdx
 330390d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303911:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3303918:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 330391f:	48 89 d6             	mov    %rdx,%rsi
 3303922:	48 89 c7             	mov    %rax,%rdi
 3303925:	e8 f8 1a 00 00       	callq  3305422 <CheckAccessToHiddenBase>
 330392a:	84 c0                	test   %al,%al
 330392c:	74 18                	je     3303946 <HandleEptViolation+0x57>
 330392e:	48 8d 3d f3 2b 00 00 	lea    0x2bf3(%rip),%rdi        # 3306528 <CopyMemoryToGuest+0x9d1>
 3303935:	b8 00 00 00 00       	mov    $0x0,%eax
 330393a:	e8 56 e8 ff ff       	callq  3302195 <Print>
 330393f:	b8 0a 00 00 00       	mov    $0xa,%eax
 3303944:	eb 3f                	jmp    3303985 <HandleEptViolation+0x96>
 3303946:	bf 08 68 00 00       	mov    $0x6808,%edi
 330394b:	e8 73 ed ff ff       	callq  33026c3 <vmread>
 3303950:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3303954:	48 8b 92 80 00 00 00 	mov    0x80(%rdx),%rdx
 330395b:	48 8d 1c 10          	lea    (%rax,%rdx,1),%rbx
 330395f:	bf 00 24 00 00       	mov    $0x2400,%edi
 3303964:	e8 5a ed ff ff       	callq  33026c3 <vmread>
 3303969:	48 89 da             	mov    %rbx,%rdx
 330396c:	48 89 c6             	mov    %rax,%rsi
 330396f:	48 8d 3d e2 2b 00 00 	lea    0x2be2(%rip),%rdi        # 3306558 <CopyMemoryToGuest+0xa01>
 3303976:	b8 00 00 00 00       	mov    $0x0,%eax
 330397b:	e8 15 e8 ff ff       	callq  3302195 <Print>
 3303980:	b8 11 00 00 00       	mov    $0x11,%eax
 3303985:	48 83 c4 18          	add    $0x18,%rsp
 3303989:	5b                   	pop    %rbx
 330398a:	5d                   	pop    %rbp
 330398b:	c3                   	retq   

000000000330398c <HandleInvalidGuestState>:
 330398c:	f3 0f 1e fa          	endbr64 
 3303990:	55                   	push   %rbp
 3303991:	48 89 e5             	mov    %rsp,%rbp
 3303994:	48 83 ec 10          	sub    $0x10,%rsp
 3303998:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 330399c:	48 8d 3d e9 2b 00 00 	lea    0x2be9(%rip),%rdi        # 330658c <CopyMemoryToGuest+0xa35>
 33039a3:	b8 00 00 00 00       	mov    $0x0,%eax
 33039a8:	e8 e8 e7 ff ff       	callq  3302195 <Print>
 33039ad:	b8 12 00 00 00       	mov    $0x12,%eax
 33039b2:	c9                   	leaveq 
 33039b3:	c3                   	retq   

00000000033039b4 <HandleInvalidMsrLoading>:
 33039b4:	f3 0f 1e fa          	endbr64 
 33039b8:	55                   	push   %rbp
 33039b9:	48 89 e5             	mov    %rsp,%rbp
 33039bc:	48 83 ec 10          	sub    $0x10,%rsp
 33039c0:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33039c4:	48 8d 3d d7 2b 00 00 	lea    0x2bd7(%rip),%rdi        # 33065a2 <CopyMemoryToGuest+0xa4b>
 33039cb:	b8 00 00 00 00       	mov    $0x0,%eax
 33039d0:	e8 c0 e7 ff ff       	callq  3302195 <Print>
 33039d5:	b8 13 00 00 00       	mov    $0x13,%eax
 33039da:	c9                   	leaveq 
 33039db:	c3                   	retq   

00000000033039dc <HandleMachineCheckFailure>:
 33039dc:	f3 0f 1e fa          	endbr64 
 33039e0:	55                   	push   %rbp
 33039e1:	48 89 e5             	mov    %rsp,%rbp
 33039e4:	48 83 ec 10          	sub    $0x10,%rsp
 33039e8:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33039ec:	48 8d 3d c5 2b 00 00 	lea    0x2bc5(%rip),%rdi        # 33065b8 <CopyMemoryToGuest+0xa61>
 33039f3:	b8 00 00 00 00       	mov    $0x0,%eax
 33039f8:	e8 98 e7 ff ff       	callq  3302195 <Print>
 33039fd:	b8 14 00 00 00       	mov    $0x14,%eax
 3303a02:	c9                   	leaveq 
 3303a03:	c3                   	retq   

0000000003303a04 <HandleTripleFault>:
 3303a04:	f3 0f 1e fa          	endbr64 
 3303a08:	55                   	push   %rbp
 3303a09:	48 89 e5             	mov    %rsp,%rbp
 3303a0c:	48 83 ec 10          	sub    $0x10,%rsp
 3303a10:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3303a14:	48 8d 3d c2 2b 00 00 	lea    0x2bc2(%rip),%rdi        # 33065dd <CopyMemoryToGuest+0xa86>
 3303a1b:	b8 00 00 00 00       	mov    $0x0,%eax
 3303a20:	e8 70 e7 ff ff       	callq  3302195 <Print>
 3303a25:	b8 15 00 00 00       	mov    $0x15,%eax
 3303a2a:	c9                   	leaveq 
 3303a2b:	c3                   	retq   

0000000003303a2c <InitializeSingleHypervisor>:
 3303a2c:	f3 0f 1e fa          	endbr64 
 3303a30:	55                   	push   %rbp
 3303a31:	48 89 e5             	mov    %rsp,%rbp
 3303a34:	41 56                	push   %r14
 3303a36:	53                   	push   %rbx
 3303a37:	48 81 ec a0 07 00 00 	sub    $0x7a0,%rsp
 3303a3e:	48 89 bd 58 f8 ff ff 	mov    %rdi,-0x7a8(%rbp)
 3303a45:	48 8b 85 58 f8 ff ff 	mov    -0x7a8(%rbp),%rax
 3303a4c:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3303a50:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303a54:	0f b6 80 00 b0 21 02 	movzbl 0x221b000(%rax),%eax
 3303a5b:	0f b6 c0             	movzbl %al,%eax
 3303a5e:	89 c6                	mov    %eax,%esi
 3303a60:	48 8d 3d 91 2b 00 00 	lea    0x2b91(%rip),%rdi        # 33065f8 <CopyMemoryToGuest+0xaa1>
 3303a67:	b8 00 00 00 00       	mov    $0x0,%eax
 3303a6c:	e8 24 e7 ff ff       	callq  3302195 <Print>
 3303a71:	0f 20 c0             	mov    %cr0,%rax
 3303a74:	48 89 85 08 ff ff ff 	mov    %rax,-0xf8(%rbp)
 3303a7b:	48 8b b5 08 ff ff ff 	mov    -0xf8(%rbp),%rsi
 3303a82:	48 c7 85 20 ff ff ff 	movq   $0x486,-0xe0(%rbp)
 3303a89:	86 04 00 00 
 3303a8d:	48 c7 85 18 ff ff ff 	movq   $0x0,-0xe8(%rbp)
 3303a94:	00 00 00 00 
 3303a98:	48 c7 85 10 ff ff ff 	movq   $0x0,-0xf0(%rbp)
 3303a9f:	00 00 00 00 
 3303aa3:	48 8b 85 20 ff ff ff 	mov    -0xe0(%rbp),%rax
 3303aaa:	48 89 c1             	mov    %rax,%rcx
 3303aad:	0f 32                	rdmsr  
 3303aaf:	48 89 95 18 ff ff ff 	mov    %rdx,-0xe8(%rbp)
 3303ab6:	48 89 85 10 ff ff ff 	mov    %rax,-0xf0(%rbp)
 3303abd:	48 8b 85 18 ff ff ff 	mov    -0xe8(%rbp),%rax
 3303ac4:	48 c1 e0 20          	shl    $0x20,%rax
 3303ac8:	48 0b 85 10 ff ff ff 	or     -0xf0(%rbp),%rax
 3303acf:	48 09 f0             	or     %rsi,%rax
 3303ad2:	48 83 c8 20          	or     $0x20,%rax
 3303ad6:	48 89 c6             	mov    %rax,%rsi
 3303ad9:	48 c7 85 38 ff ff ff 	movq   $0x487,-0xc8(%rbp)
 3303ae0:	87 04 00 00 
 3303ae4:	48 c7 85 30 ff ff ff 	movq   $0x0,-0xd0(%rbp)
 3303aeb:	00 00 00 00 
 3303aef:	48 c7 85 28 ff ff ff 	movq   $0x0,-0xd8(%rbp)
 3303af6:	00 00 00 00 
 3303afa:	48 8b 85 38 ff ff ff 	mov    -0xc8(%rbp),%rax
 3303b01:	48 89 c1             	mov    %rax,%rcx
 3303b04:	0f 32                	rdmsr  
 3303b06:	48 89 95 30 ff ff ff 	mov    %rdx,-0xd0(%rbp)
 3303b0d:	48 89 85 28 ff ff ff 	mov    %rax,-0xd8(%rbp)
 3303b14:	48 8b 85 30 ff ff ff 	mov    -0xd0(%rbp),%rax
 3303b1b:	48 c1 e0 20          	shl    $0x20,%rax
 3303b1f:	48 0b 85 28 ff ff ff 	or     -0xd8(%rbp),%rax
 3303b26:	48 21 f0             	and    %rsi,%rax
 3303b29:	48 89 85 40 ff ff ff 	mov    %rax,-0xc0(%rbp)
 3303b30:	48 8b 85 40 ff ff ff 	mov    -0xc0(%rbp),%rax
 3303b37:	0f 22 c0             	mov    %rax,%cr0
 3303b3a:	90                   	nop
 3303b3b:	0f 20 e0             	mov    %cr4,%rax
 3303b3e:	48 89 85 48 ff ff ff 	mov    %rax,-0xb8(%rbp)
 3303b45:	48 8b b5 48 ff ff ff 	mov    -0xb8(%rbp),%rsi
 3303b4c:	48 c7 85 60 ff ff ff 	movq   $0x488,-0xa0(%rbp)
 3303b53:	88 04 00 00 
 3303b57:	48 c7 85 58 ff ff ff 	movq   $0x0,-0xa8(%rbp)
 3303b5e:	00 00 00 00 
 3303b62:	48 c7 85 50 ff ff ff 	movq   $0x0,-0xb0(%rbp)
 3303b69:	00 00 00 00 
 3303b6d:	48 8b 85 60 ff ff ff 	mov    -0xa0(%rbp),%rax
 3303b74:	48 89 c1             	mov    %rax,%rcx
 3303b77:	0f 32                	rdmsr  
 3303b79:	48 89 95 58 ff ff ff 	mov    %rdx,-0xa8(%rbp)
 3303b80:	48 89 85 50 ff ff ff 	mov    %rax,-0xb0(%rbp)
 3303b87:	48 8b 85 58 ff ff ff 	mov    -0xa8(%rbp),%rax
 3303b8e:	48 c1 e0 20          	shl    $0x20,%rax
 3303b92:	48 0b 85 50 ff ff ff 	or     -0xb0(%rbp),%rax
 3303b99:	48 09 f0             	or     %rsi,%rax
 3303b9c:	80 cc 20             	or     $0x20,%ah
 3303b9f:	48 89 c6             	mov    %rax,%rsi
 3303ba2:	48 c7 85 78 ff ff ff 	movq   $0x489,-0x88(%rbp)
 3303ba9:	89 04 00 00 
 3303bad:	48 c7 85 70 ff ff ff 	movq   $0x0,-0x90(%rbp)
 3303bb4:	00 00 00 00 
 3303bb8:	48 c7 85 68 ff ff ff 	movq   $0x0,-0x98(%rbp)
 3303bbf:	00 00 00 00 
 3303bc3:	48 8b 85 78 ff ff ff 	mov    -0x88(%rbp),%rax
 3303bca:	48 89 c1             	mov    %rax,%rcx
 3303bcd:	0f 32                	rdmsr  
 3303bcf:	48 89 95 70 ff ff ff 	mov    %rdx,-0x90(%rbp)
 3303bd6:	48 89 85 68 ff ff ff 	mov    %rax,-0x98(%rbp)
 3303bdd:	48 8b 85 70 ff ff ff 	mov    -0x90(%rbp),%rax
 3303be4:	48 c1 e0 20          	shl    $0x20,%rax
 3303be8:	48 0b 85 68 ff ff ff 	or     -0x98(%rbp),%rax
 3303bef:	48 21 f0             	and    %rsi,%rax
 3303bf2:	48 89 45 80          	mov    %rax,-0x80(%rbp)
 3303bf6:	48 8b 45 80          	mov    -0x80(%rbp),%rax
 3303bfa:	0f 22 e0             	mov    %rax,%cr4
 3303bfd:	90                   	nop
 3303bfe:	48 c7 45 98 3a 00 00 	movq   $0x3a,-0x68(%rbp)
 3303c05:	00 
 3303c06:	48 c7 45 90 00 00 00 	movq   $0x0,-0x70(%rbp)
 3303c0d:	00 
 3303c0e:	48 c7 45 88 00 00 00 	movq   $0x0,-0x78(%rbp)
 3303c15:	00 
 3303c16:	48 8b 45 98          	mov    -0x68(%rbp),%rax
 3303c1a:	48 89 c1             	mov    %rax,%rcx
 3303c1d:	0f 32                	rdmsr  
 3303c1f:	48 89 55 90          	mov    %rdx,-0x70(%rbp)
 3303c23:	48 89 45 88          	mov    %rax,-0x78(%rbp)
 3303c27:	48 8b 45 90          	mov    -0x70(%rbp),%rax
 3303c2b:	48 c1 e0 20          	shl    $0x20,%rax
 3303c2f:	48 0b 45 88          	or     -0x78(%rbp),%rax
 3303c33:	48 83 c8 07          	or     $0x7,%rax
 3303c37:	48 c7 45 a8 3a 00 00 	movq   $0x3a,-0x58(%rbp)
 3303c3e:	00 
 3303c3f:	48 89 45 a0          	mov    %rax,-0x60(%rbp)
 3303c43:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3303c47:	48 c1 e8 20          	shr    $0x20,%rax
 3303c4b:	48 89 c2             	mov    %rax,%rdx
 3303c4e:	48 8b 45 a0          	mov    -0x60(%rbp),%rax
 3303c52:	89 c0                	mov    %eax,%eax
 3303c54:	48 8b 4d a8          	mov    -0x58(%rbp),%rcx
 3303c58:	0f 30                	wrmsr  
 3303c5a:	90                   	nop
 3303c5b:	48 c7 45 c0 80 04 00 	movq   $0x480,-0x40(%rbp)
 3303c62:	00 
 3303c63:	48 c7 45 b8 00 00 00 	movq   $0x0,-0x48(%rbp)
 3303c6a:	00 
 3303c6b:	48 c7 45 b0 00 00 00 	movq   $0x0,-0x50(%rbp)
 3303c72:	00 
 3303c73:	48 8b 45 c0          	mov    -0x40(%rbp),%rax
 3303c77:	48 89 c1             	mov    %rax,%rcx
 3303c7a:	0f 32                	rdmsr  
 3303c7c:	48 89 55 b8          	mov    %rdx,-0x48(%rbp)
 3303c80:	48 89 45 b0          	mov    %rax,-0x50(%rbp)
 3303c84:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 3303c88:	48 c1 e0 20          	shl    $0x20,%rax
 3303c8c:	48 0b 45 b0          	or     -0x50(%rbp),%rax
 3303c90:	48 89 c2             	mov    %rax,%rdx
 3303c93:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303c97:	89 10                	mov    %edx,(%rax)
 3303c99:	48 c7 45 d8 80 04 00 	movq   $0x480,-0x28(%rbp)
 3303ca0:	00 
 3303ca1:	48 c7 45 d0 00 00 00 	movq   $0x0,-0x30(%rbp)
 3303ca8:	00 
 3303ca9:	48 c7 45 c8 00 00 00 	movq   $0x0,-0x38(%rbp)
 3303cb0:	00 
 3303cb1:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3303cb5:	48 89 c1             	mov    %rax,%rcx
 3303cb8:	0f 32                	rdmsr  
 3303cba:	48 89 55 d0          	mov    %rdx,-0x30(%rbp)
 3303cbe:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 3303cc2:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3303cc6:	48 c1 e0 20          	shl    $0x20,%rax
 3303cca:	48 0b 45 c8          	or     -0x38(%rbp),%rax
 3303cce:	48 89 c2             	mov    %rax,%rdx
 3303cd1:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303cd5:	48 05 00 10 00 00    	add    $0x1000,%rax
 3303cdb:	89 10                	mov    %edx,(%rax)
 3303cdd:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303ce1:	48 05 00 10 00 00    	add    $0x1000,%rax
 3303ce7:	48 89 c7             	mov    %rax,%rdi
 3303cea:	e8 31 ea ff ff       	callq  3302720 <VirtualToPhysical>
 3303cef:	48 89 85 60 f8 ff ff 	mov    %rax,-0x7a0(%rbp)
 3303cf6:	f3 0f c7 b5 60 f8 ff 	vmxon  -0x7a0(%rbp)
 3303cfd:	ff 
 3303cfe:	9c                   	pushfq 
 3303cff:	58                   	pop    %rax
 3303d00:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3303d04:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303d08:	83 e0 01             	and    $0x1,%eax
 3303d0b:	48 85 c0             	test   %rax,%rax
 3303d0e:	74 07                	je     3303d17 <InitializeSingleHypervisor+0x2eb>
 3303d10:	b8 01 00 00 00       	mov    $0x1,%eax
 3303d15:	eb 18                	jmp    3303d2f <InitializeSingleHypervisor+0x303>
 3303d17:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3303d1b:	83 e0 40             	and    $0x40,%eax
 3303d1e:	48 85 c0             	test   %rax,%rax
 3303d21:	74 07                	je     3303d2a <InitializeSingleHypervisor+0x2fe>
 3303d23:	b8 02 00 00 00       	mov    $0x2,%eax
 3303d28:	eb 05                	jmp    3303d2f <InitializeSingleHypervisor+0x303>
 3303d2a:	b8 00 00 00 00       	mov    $0x0,%eax
 3303d2f:	48 85 c0             	test   %rax,%rax
 3303d32:	74 13                	je     3303d47 <InitializeSingleHypervisor+0x31b>
 3303d34:	48 8d 3d e5 28 00 00 	lea    0x28e5(%rip),%rdi        # 3306620 <CopyMemoryToGuest+0xac9>
 3303d3b:	b8 00 00 00 00       	mov    $0x0,%eax
 3303d40:	e8 50 e4 ff ff       	callq  3302195 <Print>
 3303d45:	eb fe                	jmp    3303d45 <InitializeSingleHypervisor+0x319>
 3303d47:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303d4b:	48 89 c7             	mov    %rax,%rdi
 3303d4e:	e8 cd e9 ff ff       	callq  3302720 <VirtualToPhysical>
 3303d53:	48 89 85 68 f8 ff ff 	mov    %rax,-0x798(%rbp)
 3303d5a:	66 0f c7 b5 68 f8 ff 	vmclear -0x798(%rbp)
 3303d61:	ff 
 3303d62:	9c                   	pushfq 
 3303d63:	58                   	pop    %rax
 3303d64:	48 89 85 00 ff ff ff 	mov    %rax,-0x100(%rbp)
 3303d6b:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 3303d72:	83 e0 01             	and    $0x1,%eax
 3303d75:	48 85 c0             	test   %rax,%rax
 3303d78:	74 07                	je     3303d81 <InitializeSingleHypervisor+0x355>
 3303d7a:	b8 01 00 00 00       	mov    $0x1,%eax
 3303d7f:	eb 1b                	jmp    3303d9c <InitializeSingleHypervisor+0x370>
 3303d81:	48 8b 85 00 ff ff ff 	mov    -0x100(%rbp),%rax
 3303d88:	83 e0 40             	and    $0x40,%eax
 3303d8b:	48 85 c0             	test   %rax,%rax
 3303d8e:	74 07                	je     3303d97 <InitializeSingleHypervisor+0x36b>
 3303d90:	b8 02 00 00 00       	mov    $0x2,%eax
 3303d95:	eb 05                	jmp    3303d9c <InitializeSingleHypervisor+0x370>
 3303d97:	b8 00 00 00 00       	mov    $0x0,%eax
 3303d9c:	48 85 c0             	test   %rax,%rax
 3303d9f:	74 13                	je     3303db4 <InitializeSingleHypervisor+0x388>
 3303da1:	48 8d 3d 00 29 00 00 	lea    0x2900(%rip),%rdi        # 33066a8 <CopyMemoryToGuest+0xb51>
 3303da8:	b8 00 00 00 00       	mov    $0x0,%eax
 3303dad:	e8 e3 e3 ff ff       	callq  3302195 <Print>
 3303db2:	eb fe                	jmp    3303db2 <InitializeSingleHypervisor+0x386>
 3303db4:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303db8:	48 89 c7             	mov    %rax,%rdi
 3303dbb:	e8 60 e9 ff ff       	callq  3302720 <VirtualToPhysical>
 3303dc0:	48 89 85 70 f8 ff ff 	mov    %rax,-0x790(%rbp)
 3303dc7:	0f c7 b5 70 f8 ff ff 	vmptrld -0x790(%rbp)
 3303dce:	9c                   	pushfq 
 3303dcf:	58                   	pop    %rax
 3303dd0:	48 89 85 f8 fe ff ff 	mov    %rax,-0x108(%rbp)
 3303dd7:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3303dde:	83 e0 01             	and    $0x1,%eax
 3303de1:	48 85 c0             	test   %rax,%rax
 3303de4:	74 07                	je     3303ded <InitializeSingleHypervisor+0x3c1>
 3303de6:	b8 01 00 00 00       	mov    $0x1,%eax
 3303deb:	eb 1b                	jmp    3303e08 <InitializeSingleHypervisor+0x3dc>
 3303ded:	48 8b 85 f8 fe ff ff 	mov    -0x108(%rbp),%rax
 3303df4:	83 e0 40             	and    $0x40,%eax
 3303df7:	48 85 c0             	test   %rax,%rax
 3303dfa:	74 07                	je     3303e03 <InitializeSingleHypervisor+0x3d7>
 3303dfc:	b8 02 00 00 00       	mov    $0x2,%eax
 3303e01:	eb 05                	jmp    3303e08 <InitializeSingleHypervisor+0x3dc>
 3303e03:	b8 00 00 00 00       	mov    $0x0,%eax
 3303e08:	48 85 c0             	test   %rax,%rax
 3303e0b:	74 13                	je     3303e20 <InitializeSingleHypervisor+0x3f4>
 3303e0d:	48 8d 3d 1c 29 00 00 	lea    0x291c(%rip),%rdi        # 3306730 <CopyMemoryToGuest+0xbd9>
 3303e14:	b8 00 00 00 00       	mov    $0x0,%eax
 3303e19:	e8 77 e3 ff ff       	callq  3302195 <Print>
 3303e1e:	eb fe                	jmp    3303e1e <InitializeSingleHypervisor+0x3f2>
 3303e20:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e24:	48 c7 80 08 b0 21 02 	movq   $0x0,0x221b008(%rax)
 3303e2b:	00 00 00 00 
 3303e2f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e33:	48 be 00 00 00 00 00 	movabs $0xa09b0000000000,%rsi
 3303e3a:	9b a0 00 
 3303e3d:	48 89 b0 10 b0 21 02 	mov    %rsi,0x221b010(%rax)
 3303e44:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3303e48:	48 be ff ff 00 00 00 	movabs $0xcf93000000ffff,%rsi
 3303e4f:	93 cf 00 
 3303e52:	48 89 b0 18 b0 21 02 	mov    %rsi,0x221b018(%rax)
 3303e59:	48 c7 85 a8 f8 ff ff 	movq   $0x1d9,-0x758(%rbp)
 3303e60:	d9 01 00 00 
 3303e64:	48 c7 85 a0 f8 ff ff 	movq   $0x0,-0x760(%rbp)
 3303e6b:	00 00 00 00 
 3303e6f:	48 c7 85 98 f8 ff ff 	movq   $0x0,-0x768(%rbp)
 3303e76:	00 00 00 00 
 3303e7a:	48 8b 85 a8 f8 ff ff 	mov    -0x758(%rbp),%rax
 3303e81:	48 89 c1             	mov    %rax,%rcx
 3303e84:	0f 32                	rdmsr  
 3303e86:	48 89 95 a0 f8 ff ff 	mov    %rdx,-0x760(%rbp)
 3303e8d:	48 89 85 98 f8 ff ff 	mov    %rax,-0x768(%rbp)
 3303e94:	48 8b 85 a0 f8 ff ff 	mov    -0x760(%rbp),%rax
 3303e9b:	48 c1 e0 20          	shl    $0x20,%rax
 3303e9f:	48 0b 85 98 f8 ff ff 	or     -0x768(%rbp),%rax
 3303ea6:	25 c3 ff 00 00       	and    $0xffc3,%eax
 3303eab:	48 c7 85 b8 f8 ff ff 	movq   $0x1d9,-0x748(%rbp)
 3303eb2:	d9 01 00 00 
 3303eb6:	48 89 85 b0 f8 ff ff 	mov    %rax,-0x750(%rbp)
 3303ebd:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
 3303ec4:	48 c1 e8 20          	shr    $0x20,%rax
 3303ec8:	48 89 c2             	mov    %rax,%rdx
 3303ecb:	48 8b 85 b0 f8 ff ff 	mov    -0x750(%rbp),%rax
 3303ed2:	89 c0                	mov    %eax,%eax
 3303ed4:	48 8b 8d b8 f8 ff ff 	mov    -0x748(%rbp),%rcx
 3303edb:	0f 30                	wrmsr  
 3303edd:	90                   	nop
 3303ede:	0f 21 f8             	mov    %db7,%rax
 3303ee1:	48 89 85 c0 f8 ff ff 	mov    %rax,-0x740(%rbp)
 3303ee8:	48 8b 85 c0 f8 ff ff 	mov    -0x740(%rbp),%rax
 3303eef:	89 c0                	mov    %eax,%eax
 3303ef1:	48 89 85 c8 f8 ff ff 	mov    %rax,-0x738(%rbp)
 3303ef8:	48 8b 85 c8 f8 ff ff 	mov    -0x738(%rbp),%rax
 3303eff:	0f 23 f8             	mov    %rax,%db7
 3303f02:	90                   	nop
 3303f03:	0f 20 c0             	mov    %cr0,%rax
 3303f06:	48 89 85 d0 f8 ff ff 	mov    %rax,-0x730(%rbp)
 3303f0d:	48 8b 85 d0 f8 ff ff 	mov    -0x730(%rbp),%rax
 3303f14:	48 c7 85 e0 f8 ff ff 	movq   $0x6800,-0x720(%rbp)
 3303f1b:	00 68 00 00 
 3303f1f:	48 89 85 d8 f8 ff ff 	mov    %rax,-0x728(%rbp)
 3303f26:	48 8b 85 e0 f8 ff ff 	mov    -0x720(%rbp),%rax
 3303f2d:	48 8b 95 d8 f8 ff ff 	mov    -0x728(%rbp),%rdx
 3303f34:	0f 79 c2             	vmwrite %rdx,%rax
 3303f37:	90                   	nop
 3303f38:	0f 20 d8             	mov    %cr3,%rax
 3303f3b:	48 89 85 e8 f8 ff ff 	mov    %rax,-0x718(%rbp)
 3303f42:	48 8b 85 e8 f8 ff ff 	mov    -0x718(%rbp),%rax
 3303f49:	48 c7 85 f8 f8 ff ff 	movq   $0x6802,-0x708(%rbp)
 3303f50:	02 68 00 00 
 3303f54:	48 89 85 f0 f8 ff ff 	mov    %rax,-0x710(%rbp)
 3303f5b:	48 8b 85 f8 f8 ff ff 	mov    -0x708(%rbp),%rax
 3303f62:	48 8b 95 f0 f8 ff ff 	mov    -0x710(%rbp),%rdx
 3303f69:	0f 79 c2             	vmwrite %rdx,%rax
 3303f6c:	90                   	nop
 3303f6d:	0f 20 e0             	mov    %cr4,%rax
 3303f70:	48 89 85 00 f9 ff ff 	mov    %rax,-0x700(%rbp)
 3303f77:	48 8b 85 00 f9 ff ff 	mov    -0x700(%rbp),%rax
 3303f7e:	48 c7 85 10 f9 ff ff 	movq   $0x6804,-0x6f0(%rbp)
 3303f85:	04 68 00 00 
 3303f89:	48 89 85 08 f9 ff ff 	mov    %rax,-0x6f8(%rbp)
 3303f90:	48 8b 85 10 f9 ff ff 	mov    -0x6f0(%rbp),%rax
 3303f97:	48 8b 95 08 f9 ff ff 	mov    -0x6f8(%rbp),%rdx
 3303f9e:	0f 79 c2             	vmwrite %rdx,%rax
 3303fa1:	90                   	nop
 3303fa2:	48 8d 85 86 f8 ff ff 	lea    -0x77a(%rbp),%rax
 3303fa9:	48 89 c7             	mov    %rax,%rdi
 3303fac:	e8 3d c5 ff ff       	callq  33004ee <GetGDT>
 3303fb1:	48 8d 85 7c f8 ff ff 	lea    -0x784(%rbp),%rax
 3303fb8:	48 89 c7             	mov    %rax,%rdi
 3303fbb:	e8 32 c5 ff ff       	callq  33004f2 <GetIDT>
 3303fc0:	48 8b 85 88 f8 ff ff 	mov    -0x778(%rbp),%rax
 3303fc7:	48 c7 85 20 f9 ff ff 	movq   $0x6816,-0x6e0(%rbp)
 3303fce:	16 68 00 00 
 3303fd2:	48 89 85 18 f9 ff ff 	mov    %rax,-0x6e8(%rbp)
 3303fd9:	48 8b 85 20 f9 ff ff 	mov    -0x6e0(%rbp),%rax
 3303fe0:	48 8b 95 18 f9 ff ff 	mov    -0x6e8(%rbp),%rdx
 3303fe7:	0f 79 c2             	vmwrite %rdx,%rax
 3303fea:	90                   	nop
 3303feb:	0f b7 85 86 f8 ff ff 	movzwl -0x77a(%rbp),%eax
 3303ff2:	0f b7 c0             	movzwl %ax,%eax
 3303ff5:	48 c7 85 30 f9 ff ff 	movq   $0x4810,-0x6d0(%rbp)
 3303ffc:	10 48 00 00 
 3304000:	48 89 85 28 f9 ff ff 	mov    %rax,-0x6d8(%rbp)
 3304007:	48 8b 85 30 f9 ff ff 	mov    -0x6d0(%rbp),%rax
 330400e:	48 8b 95 28 f9 ff ff 	mov    -0x6d8(%rbp),%rdx
 3304015:	0f 79 c2             	vmwrite %rdx,%rax
 3304018:	90                   	nop
 3304019:	48 8b 85 7e f8 ff ff 	mov    -0x782(%rbp),%rax
 3304020:	48 c7 85 40 f9 ff ff 	movq   $0x6818,-0x6c0(%rbp)
 3304027:	18 68 00 00 
 330402b:	48 89 85 38 f9 ff ff 	mov    %rax,-0x6c8(%rbp)
 3304032:	48 8b 85 40 f9 ff ff 	mov    -0x6c0(%rbp),%rax
 3304039:	48 8b 95 38 f9 ff ff 	mov    -0x6c8(%rbp),%rdx
 3304040:	0f 79 c2             	vmwrite %rdx,%rax
 3304043:	90                   	nop
 3304044:	0f b7 85 7c f8 ff ff 	movzwl -0x784(%rbp),%eax
 330404b:	0f b7 c0             	movzwl %ax,%eax
 330404e:	48 c7 85 50 f9 ff ff 	movq   $0x4812,-0x6b0(%rbp)
 3304055:	12 48 00 00 
 3304059:	48 89 85 48 f9 ff ff 	mov    %rax,-0x6b8(%rbp)
 3304060:	48 8b 85 50 f9 ff ff 	mov    -0x6b0(%rbp),%rax
 3304067:	48 8b 95 48 f9 ff ff 	mov    -0x6b8(%rbp),%rdx
 330406e:	0f 79 c2             	vmwrite %rdx,%rax
 3304071:	90                   	nop
 3304072:	48 c7 85 60 f9 ff ff 	movq   $0x6812,-0x6a0(%rbp)
 3304079:	12 68 00 00 
 330407d:	48 c7 85 58 f9 ff ff 	movq   $0x0,-0x6a8(%rbp)
 3304084:	00 00 00 00 
 3304088:	48 8b 85 60 f9 ff ff 	mov    -0x6a0(%rbp),%rax
 330408f:	48 8b 95 58 f9 ff ff 	mov    -0x6a8(%rbp),%rdx
 3304096:	0f 79 c2             	vmwrite %rdx,%rax
 3304099:	90                   	nop
 330409a:	48 c7 85 70 f9 ff ff 	movq   $0x480c,-0x690(%rbp)
 33040a1:	0c 48 00 00 
 33040a5:	48 c7 85 68 f9 ff ff 	movq   $0xff,-0x698(%rbp)
 33040ac:	ff 00 00 00 
 33040b0:	48 8b 85 70 f9 ff ff 	mov    -0x690(%rbp),%rax
 33040b7:	48 8b 95 68 f9 ff ff 	mov    -0x698(%rbp),%rdx
 33040be:	0f 79 c2             	vmwrite %rdx,%rax
 33040c1:	90                   	nop
 33040c2:	48 c7 85 80 f9 ff ff 	movq   $0x4820,-0x680(%rbp)
 33040c9:	20 48 00 00 
 33040cd:	48 c7 85 78 f9 ff ff 	movq   $0x10000,-0x688(%rbp)
 33040d4:	00 00 01 00 
 33040d8:	48 8b 85 80 f9 ff ff 	mov    -0x680(%rbp),%rax
 33040df:	48 8b 95 78 f9 ff ff 	mov    -0x688(%rbp),%rdx
 33040e6:	0f 79 c2             	vmwrite %rdx,%rax
 33040e9:	90                   	nop
 33040ea:	b8 00 00 00 00       	mov    $0x0,%eax
 33040ef:	e8 02 c4 ff ff       	callq  33004f6 <GetCS>
 33040f4:	25 f8 00 00 00       	and    $0xf8,%eax
 33040f9:	48 c7 85 90 f9 ff ff 	movq   $0x802,-0x670(%rbp)
 3304100:	02 08 00 00 
 3304104:	48 89 85 88 f9 ff ff 	mov    %rax,-0x678(%rbp)
 330410b:	48 8b 85 90 f9 ff ff 	mov    -0x670(%rbp),%rax
 3304112:	48 8b 95 88 f9 ff ff 	mov    -0x678(%rbp),%rdx
 3304119:	0f 79 c2             	vmwrite %rdx,%rax
 330411c:	90                   	nop
 330411d:	48 c7 85 a0 f9 ff ff 	movq   $0x6808,-0x660(%rbp)
 3304124:	08 68 00 00 
 3304128:	48 c7 85 98 f9 ff ff 	movq   $0x0,-0x668(%rbp)
 330412f:	00 00 00 00 
 3304133:	48 8b 85 a0 f9 ff ff 	mov    -0x660(%rbp),%rax
 330413a:	48 8b 95 98 f9 ff ff 	mov    -0x668(%rbp),%rdx
 3304141:	0f 79 c2             	vmwrite %rdx,%rax
 3304144:	90                   	nop
 3304145:	48 c7 85 b0 f9 ff ff 	movq   $0x4802,-0x650(%rbp)
 330414c:	02 48 00 00 
 3304150:	bb ff ff ff ff       	mov    $0xffffffff,%ebx
 3304155:	48 89 9d a8 f9 ff ff 	mov    %rbx,-0x658(%rbp)
 330415c:	48 8b 85 b0 f9 ff ff 	mov    -0x650(%rbp),%rax
 3304163:	48 8b 95 a8 f9 ff ff 	mov    -0x658(%rbp),%rdx
 330416a:	0f 79 c2             	vmwrite %rdx,%rax
 330416d:	90                   	nop
 330416e:	48 c7 85 c0 f9 ff ff 	movq   $0x4816,-0x640(%rbp)
 3304175:	16 48 00 00 
 3304179:	48 c7 85 b8 f9 ff ff 	movq   $0xa09b,-0x648(%rbp)
 3304180:	9b a0 00 00 
 3304184:	48 8b 85 c0 f9 ff ff 	mov    -0x640(%rbp),%rax
 330418b:	48 8b 95 b8 f9 ff ff 	mov    -0x648(%rbp),%rdx
 3304192:	0f 79 c2             	vmwrite %rdx,%rax
 3304195:	90                   	nop
 3304196:	b8 00 00 00 00       	mov    $0x0,%eax
 330419b:	e8 59 c3 ff ff       	callq  33004f9 <GetDS>
 33041a0:	25 f8 00 00 00       	and    $0xf8,%eax
 33041a5:	48 c7 85 d0 f9 ff ff 	movq   $0x806,-0x630(%rbp)
 33041ac:	06 08 00 00 
 33041b0:	48 89 85 c8 f9 ff ff 	mov    %rax,-0x638(%rbp)
 33041b7:	48 8b 85 d0 f9 ff ff 	mov    -0x630(%rbp),%rax
 33041be:	48 8b 95 c8 f9 ff ff 	mov    -0x638(%rbp),%rdx
 33041c5:	0f 79 c2             	vmwrite %rdx,%rax
 33041c8:	90                   	nop
 33041c9:	48 c7 85 e0 f9 ff ff 	movq   $0x680c,-0x620(%rbp)
 33041d0:	0c 68 00 00 
 33041d4:	48 c7 85 d8 f9 ff ff 	movq   $0x0,-0x628(%rbp)
 33041db:	00 00 00 00 
 33041df:	48 8b 85 e0 f9 ff ff 	mov    -0x620(%rbp),%rax
 33041e6:	48 8b 95 d8 f9 ff ff 	mov    -0x628(%rbp),%rdx
 33041ed:	0f 79 c2             	vmwrite %rdx,%rax
 33041f0:	90                   	nop
 33041f1:	48 c7 85 f0 f9 ff ff 	movq   $0x4806,-0x610(%rbp)
 33041f8:	06 48 00 00 
 33041fc:	48 89 9d e8 f9 ff ff 	mov    %rbx,-0x618(%rbp)
 3304203:	48 8b 85 f0 f9 ff ff 	mov    -0x610(%rbp),%rax
 330420a:	48 8b 95 e8 f9 ff ff 	mov    -0x618(%rbp),%rdx
 3304211:	0f 79 c2             	vmwrite %rdx,%rax
 3304214:	90                   	nop
 3304215:	48 c7 85 00 fa ff ff 	movq   $0x481a,-0x600(%rbp)
 330421c:	1a 48 00 00 
 3304220:	48 c7 85 f8 f9 ff ff 	movq   $0xc093,-0x608(%rbp)
 3304227:	93 c0 00 00 
 330422b:	48 8b 85 00 fa ff ff 	mov    -0x600(%rbp),%rax
 3304232:	48 8b 95 f8 f9 ff ff 	mov    -0x608(%rbp),%rdx
 3304239:	0f 79 c2             	vmwrite %rdx,%rax
 330423c:	90                   	nop
 330423d:	b8 00 00 00 00       	mov    $0x0,%eax
 3304242:	e8 b5 c2 ff ff       	callq  33004fc <GetSS>
 3304247:	25 f8 00 00 00       	and    $0xf8,%eax
 330424c:	48 c7 85 10 fa ff ff 	movq   $0x804,-0x5f0(%rbp)
 3304253:	04 08 00 00 
 3304257:	48 89 85 08 fa ff ff 	mov    %rax,-0x5f8(%rbp)
 330425e:	48 8b 85 10 fa ff ff 	mov    -0x5f0(%rbp),%rax
 3304265:	48 8b 95 08 fa ff ff 	mov    -0x5f8(%rbp),%rdx
 330426c:	0f 79 c2             	vmwrite %rdx,%rax
 330426f:	90                   	nop
 3304270:	48 c7 85 20 fa ff ff 	movq   $0x680a,-0x5e0(%rbp)
 3304277:	0a 68 00 00 
 330427b:	48 c7 85 18 fa ff ff 	movq   $0x0,-0x5e8(%rbp)
 3304282:	00 00 00 00 
 3304286:	48 8b 85 20 fa ff ff 	mov    -0x5e0(%rbp),%rax
 330428d:	48 8b 95 18 fa ff ff 	mov    -0x5e8(%rbp),%rdx
 3304294:	0f 79 c2             	vmwrite %rdx,%rax
 3304297:	90                   	nop
 3304298:	48 c7 85 30 fa ff ff 	movq   $0x4804,-0x5d0(%rbp)
 330429f:	04 48 00 00 
 33042a3:	48 89 9d 28 fa ff ff 	mov    %rbx,-0x5d8(%rbp)
 33042aa:	48 8b 85 30 fa ff ff 	mov    -0x5d0(%rbp),%rax
 33042b1:	48 8b 95 28 fa ff ff 	mov    -0x5d8(%rbp),%rdx
 33042b8:	0f 79 c2             	vmwrite %rdx,%rax
 33042bb:	90                   	nop
 33042bc:	48 c7 85 40 fa ff ff 	movq   $0x4818,-0x5c0(%rbp)
 33042c3:	18 48 00 00 
 33042c7:	48 c7 85 38 fa ff ff 	movq   $0xc093,-0x5c8(%rbp)
 33042ce:	93 c0 00 00 
 33042d2:	48 8b 85 40 fa ff ff 	mov    -0x5c0(%rbp),%rax
 33042d9:	48 8b 95 38 fa ff ff 	mov    -0x5c8(%rbp),%rdx
 33042e0:	0f 79 c2             	vmwrite %rdx,%rax
 33042e3:	90                   	nop
 33042e4:	b8 00 00 00 00       	mov    $0x0,%eax
 33042e9:	e8 11 c2 ff ff       	callq  33004ff <GetES>
 33042ee:	25 f8 00 00 00       	and    $0xf8,%eax
 33042f3:	48 c7 85 50 fa ff ff 	movq   $0x800,-0x5b0(%rbp)
 33042fa:	00 08 00 00 
 33042fe:	48 89 85 48 fa ff ff 	mov    %rax,-0x5b8(%rbp)
 3304305:	48 8b 85 50 fa ff ff 	mov    -0x5b0(%rbp),%rax
 330430c:	48 8b 95 48 fa ff ff 	mov    -0x5b8(%rbp),%rdx
 3304313:	0f 79 c2             	vmwrite %rdx,%rax
 3304316:	90                   	nop
 3304317:	48 c7 85 60 fa ff ff 	movq   $0x6806,-0x5a0(%rbp)
 330431e:	06 68 00 00 
 3304322:	48 c7 85 58 fa ff ff 	movq   $0x0,-0x5a8(%rbp)
 3304329:	00 00 00 00 
 330432d:	48 8b 85 60 fa ff ff 	mov    -0x5a0(%rbp),%rax
 3304334:	48 8b 95 58 fa ff ff 	mov    -0x5a8(%rbp),%rdx
 330433b:	0f 79 c2             	vmwrite %rdx,%rax
 330433e:	90                   	nop
 330433f:	48 c7 85 70 fa ff ff 	movq   $0x4800,-0x590(%rbp)
 3304346:	00 48 00 00 
 330434a:	48 89 9d 68 fa ff ff 	mov    %rbx,-0x598(%rbp)
 3304351:	48 8b 85 70 fa ff ff 	mov    -0x590(%rbp),%rax
 3304358:	48 8b 95 68 fa ff ff 	mov    -0x598(%rbp),%rdx
 330435f:	0f 79 c2             	vmwrite %rdx,%rax
 3304362:	90                   	nop
 3304363:	48 c7 85 80 fa ff ff 	movq   $0x4814,-0x580(%rbp)
 330436a:	14 48 00 00 
 330436e:	48 c7 85 78 fa ff ff 	movq   $0xc093,-0x588(%rbp)
 3304375:	93 c0 00 00 
 3304379:	48 8b 85 80 fa ff ff 	mov    -0x580(%rbp),%rax
 3304380:	48 8b 95 78 fa ff ff 	mov    -0x588(%rbp),%rdx
 3304387:	0f 79 c2             	vmwrite %rdx,%rax
 330438a:	90                   	nop
 330438b:	b8 00 00 00 00       	mov    $0x0,%eax
 3304390:	e8 70 c1 ff ff       	callq  3300505 <GetGS>
 3304395:	25 f8 00 00 00       	and    $0xf8,%eax
 330439a:	48 c7 85 90 fa ff ff 	movq   $0x80a,-0x570(%rbp)
 33043a1:	0a 08 00 00 
 33043a5:	48 89 85 88 fa ff ff 	mov    %rax,-0x578(%rbp)
 33043ac:	48 8b 85 90 fa ff ff 	mov    -0x570(%rbp),%rax
 33043b3:	48 8b 95 88 fa ff ff 	mov    -0x578(%rbp),%rdx
 33043ba:	0f 79 c2             	vmwrite %rdx,%rax
 33043bd:	90                   	nop
 33043be:	48 c7 85 a0 fa ff ff 	movq   $0x6810,-0x560(%rbp)
 33043c5:	10 68 00 00 
 33043c9:	48 c7 85 98 fa ff ff 	movq   $0x0,-0x568(%rbp)
 33043d0:	00 00 00 00 
 33043d4:	48 8b 85 a0 fa ff ff 	mov    -0x560(%rbp),%rax
 33043db:	48 8b 95 98 fa ff ff 	mov    -0x568(%rbp),%rdx
 33043e2:	0f 79 c2             	vmwrite %rdx,%rax
 33043e5:	90                   	nop
 33043e6:	48 c7 85 b0 fa ff ff 	movq   $0x480a,-0x550(%rbp)
 33043ed:	0a 48 00 00 
 33043f1:	48 89 9d a8 fa ff ff 	mov    %rbx,-0x558(%rbp)
 33043f8:	48 8b 85 b0 fa ff ff 	mov    -0x550(%rbp),%rax
 33043ff:	48 8b 95 a8 fa ff ff 	mov    -0x558(%rbp),%rdx
 3304406:	0f 79 c2             	vmwrite %rdx,%rax
 3304409:	90                   	nop
 330440a:	48 c7 85 c0 fa ff ff 	movq   $0x481e,-0x540(%rbp)
 3304411:	1e 48 00 00 
 3304415:	48 c7 85 b8 fa ff ff 	movq   $0xc093,-0x548(%rbp)
 330441c:	93 c0 00 00 
 3304420:	48 8b 85 c0 fa ff ff 	mov    -0x540(%rbp),%rax
 3304427:	48 8b 95 b8 fa ff ff 	mov    -0x548(%rbp),%rdx
 330442e:	0f 79 c2             	vmwrite %rdx,%rax
 3304431:	90                   	nop
 3304432:	b8 00 00 00 00       	mov    $0x0,%eax
 3304437:	e8 c6 c0 ff ff       	callq  3300502 <GetFS>
 330443c:	25 f8 00 00 00       	and    $0xf8,%eax
 3304441:	48 c7 85 d0 fa ff ff 	movq   $0x808,-0x530(%rbp)
 3304448:	08 08 00 00 
 330444c:	48 89 85 c8 fa ff ff 	mov    %rax,-0x538(%rbp)
 3304453:	48 8b 85 d0 fa ff ff 	mov    -0x530(%rbp),%rax
 330445a:	48 8b 95 c8 fa ff ff 	mov    -0x538(%rbp),%rdx
 3304461:	0f 79 c2             	vmwrite %rdx,%rax
 3304464:	90                   	nop
 3304465:	48 c7 85 e0 fa ff ff 	movq   $0x680e,-0x520(%rbp)
 330446c:	0e 68 00 00 
 3304470:	48 c7 85 d8 fa ff ff 	movq   $0x0,-0x528(%rbp)
 3304477:	00 00 00 00 
 330447b:	48 8b 85 e0 fa ff ff 	mov    -0x520(%rbp),%rax
 3304482:	48 8b 95 d8 fa ff ff 	mov    -0x528(%rbp),%rdx
 3304489:	0f 79 c2             	vmwrite %rdx,%rax
 330448c:	90                   	nop
 330448d:	48 c7 85 f0 fa ff ff 	movq   $0x4808,-0x510(%rbp)
 3304494:	08 48 00 00 
 3304498:	48 89 9d e8 fa ff ff 	mov    %rbx,-0x518(%rbp)
 330449f:	48 8b 85 f0 fa ff ff 	mov    -0x510(%rbp),%rax
 33044a6:	48 8b 95 e8 fa ff ff 	mov    -0x518(%rbp),%rdx
 33044ad:	0f 79 c2             	vmwrite %rdx,%rax
 33044b0:	90                   	nop
 33044b1:	48 c7 85 00 fb ff ff 	movq   $0x481c,-0x500(%rbp)
 33044b8:	1c 48 00 00 
 33044bc:	48 c7 85 f8 fa ff ff 	movq   $0xc093,-0x508(%rbp)
 33044c3:	93 c0 00 00 
 33044c7:	48 8b 85 00 fb ff ff 	mov    -0x500(%rbp),%rax
 33044ce:	48 8b 95 f8 fa ff ff 	mov    -0x508(%rbp),%rdx
 33044d5:	0f 79 c2             	vmwrite %rdx,%rax
 33044d8:	90                   	nop
 33044d9:	b8 00 00 00 00       	mov    $0x0,%eax
 33044de:	e8 16 c0 ff ff       	callq  33004f9 <GetDS>
 33044e3:	25 f8 00 00 00       	and    $0xf8,%eax
 33044e8:	48 c7 85 10 fb ff ff 	movq   $0x80e,-0x4f0(%rbp)
 33044ef:	0e 08 00 00 
 33044f3:	48 89 85 08 fb ff ff 	mov    %rax,-0x4f8(%rbp)
 33044fa:	48 8b 85 10 fb ff ff 	mov    -0x4f0(%rbp),%rax
 3304501:	48 8b 95 08 fb ff ff 	mov    -0x4f8(%rbp),%rdx
 3304508:	0f 79 c2             	vmwrite %rdx,%rax
 330450b:	90                   	nop
 330450c:	48 c7 85 20 fb ff ff 	movq   $0x6814,-0x4e0(%rbp)
 3304513:	14 68 00 00 
 3304517:	48 c7 85 18 fb ff ff 	movq   $0x0,-0x4e8(%rbp)
 330451e:	00 00 00 00 
 3304522:	48 8b 85 20 fb ff ff 	mov    -0x4e0(%rbp),%rax
 3304529:	48 8b 95 18 fb ff ff 	mov    -0x4e8(%rbp),%rdx
 3304530:	0f 79 c2             	vmwrite %rdx,%rax
 3304533:	90                   	nop
 3304534:	48 c7 85 30 fb ff ff 	movq   $0x480e,-0x4d0(%rbp)
 330453b:	0e 48 00 00 
 330453f:	48 89 9d 28 fb ff ff 	mov    %rbx,-0x4d8(%rbp)
 3304546:	48 8b 85 30 fb ff ff 	mov    -0x4d0(%rbp),%rax
 330454d:	48 8b 95 28 fb ff ff 	mov    -0x4d8(%rbp),%rdx
 3304554:	0f 79 c2             	vmwrite %rdx,%rax
 3304557:	90                   	nop
 3304558:	48 c7 85 40 fb ff ff 	movq   $0x4822,-0x4c0(%rbp)
 330455f:	22 48 00 00 
 3304563:	48 c7 85 38 fb ff ff 	movq   $0xc08b,-0x4c8(%rbp)
 330456a:	8b c0 00 00 
 330456e:	48 8b 85 40 fb ff ff 	mov    -0x4c0(%rbp),%rax
 3304575:	48 8b 95 38 fb ff ff 	mov    -0x4c8(%rbp),%rdx
 330457c:	0f 79 c2             	vmwrite %rdx,%rax
 330457f:	90                   	nop
 3304580:	48 c7 c0 21 05 30 03 	mov    $0x3300521,%rax
 3304587:	48 c7 85 50 fb ff ff 	movq   $0x681e,-0x4b0(%rbp)
 330458e:	1e 68 00 00 
 3304592:	48 89 85 48 fb ff ff 	mov    %rax,-0x4b8(%rbp)
 3304599:	48 8b 85 50 fb ff ff 	mov    -0x4b0(%rbp),%rax
 33045a0:	48 8b 95 48 fb ff ff 	mov    -0x4b8(%rbp),%rdx
 33045a7:	0f 79 c2             	vmwrite %rdx,%rax
 33045aa:	90                   	nop
 33045ab:	48 c7 85 60 fb ff ff 	movq   $0x681c,-0x4a0(%rbp)
 33045b2:	1c 68 00 00 
 33045b6:	48 c7 85 58 fb ff ff 	movq   $0x0,-0x4a8(%rbp)
 33045bd:	00 00 00 00 
 33045c1:	48 8b 85 60 fb ff ff 	mov    -0x4a0(%rbp),%rax
 33045c8:	48 8b 95 58 fb ff ff 	mov    -0x4a8(%rbp),%rdx
 33045cf:	0f 79 c2             	vmwrite %rdx,%rax
 33045d2:	90                   	nop
 33045d3:	41 be 80 00 00 c0    	mov    $0xc0000080,%r14d
 33045d9:	4c 89 b5 78 fb ff ff 	mov    %r14,-0x488(%rbp)
 33045e0:	48 c7 85 70 fb ff ff 	movq   $0x0,-0x490(%rbp)
 33045e7:	00 00 00 00 
 33045eb:	48 c7 85 68 fb ff ff 	movq   $0x0,-0x498(%rbp)
 33045f2:	00 00 00 00 
 33045f6:	48 8b 85 78 fb ff ff 	mov    -0x488(%rbp),%rax
 33045fd:	48 89 c1             	mov    %rax,%rcx
 3304600:	0f 32                	rdmsr  
 3304602:	48 89 95 70 fb ff ff 	mov    %rdx,-0x490(%rbp)
 3304609:	48 89 85 68 fb ff ff 	mov    %rax,-0x498(%rbp)
 3304610:	48 8b 85 70 fb ff ff 	mov    -0x490(%rbp),%rax
 3304617:	48 c1 e0 20          	shl    $0x20,%rax
 330461b:	48 0b 85 68 fb ff ff 	or     -0x498(%rbp),%rax
 3304622:	48 c7 85 88 fb ff ff 	movq   $0x2806,-0x478(%rbp)
 3304629:	06 28 00 00 
 330462d:	48 89 85 80 fb ff ff 	mov    %rax,-0x480(%rbp)
 3304634:	48 8b 85 88 fb ff ff 	mov    -0x478(%rbp),%rax
 330463b:	48 8b 95 80 fb ff ff 	mov    -0x480(%rbp),%rdx
 3304642:	0f 79 c2             	vmwrite %rdx,%rax
 3304645:	90                   	nop
 3304646:	9c                   	pushfq 
 3304647:	58                   	pop    %rax
 3304648:	48 89 85 90 fb ff ff 	mov    %rax,-0x470(%rbp)
 330464f:	48 8b 85 90 fb ff ff 	mov    -0x470(%rbp),%rax
 3304656:	25 d7 ff 1f 00       	and    $0x1fffd7,%eax
 330465b:	48 c7 85 a0 fb ff ff 	movq   $0x6820,-0x460(%rbp)
 3304662:	20 68 00 00 
 3304666:	48 89 85 98 fb ff ff 	mov    %rax,-0x468(%rbp)
 330466d:	48 8b 85 a0 fb ff ff 	mov    -0x460(%rbp),%rax
 3304674:	48 8b 95 98 fb ff ff 	mov    -0x468(%rbp),%rdx
 330467b:	0f 79 c2             	vmwrite %rdx,%rax
 330467e:	90                   	nop
 330467f:	48 c7 85 b8 fb ff ff 	movq   $0x1d9,-0x448(%rbp)
 3304686:	d9 01 00 00 
 330468a:	48 c7 85 b0 fb ff ff 	movq   $0x0,-0x450(%rbp)
 3304691:	00 00 00 00 
 3304695:	48 c7 85 a8 fb ff ff 	movq   $0x0,-0x458(%rbp)
 330469c:	00 00 00 00 
 33046a0:	48 8b 85 b8 fb ff ff 	mov    -0x448(%rbp),%rax
 33046a7:	48 89 c1             	mov    %rax,%rcx
 33046aa:	0f 32                	rdmsr  
 33046ac:	48 89 95 b0 fb ff ff 	mov    %rdx,-0x450(%rbp)
 33046b3:	48 89 85 a8 fb ff ff 	mov    %rax,-0x458(%rbp)
 33046ba:	48 8b 85 b0 fb ff ff 	mov    -0x450(%rbp),%rax
 33046c1:	48 c1 e0 20          	shl    $0x20,%rax
 33046c5:	48 0b 85 a8 fb ff ff 	or     -0x458(%rbp),%rax
 33046cc:	89 c0                	mov    %eax,%eax
 33046ce:	48 c7 85 c8 fb ff ff 	movq   $0x2802,-0x438(%rbp)
 33046d5:	02 28 00 00 
 33046d9:	48 89 85 c0 fb ff ff 	mov    %rax,-0x440(%rbp)
 33046e0:	48 8b 85 c8 fb ff ff 	mov    -0x438(%rbp),%rax
 33046e7:	48 8b 95 c0 fb ff ff 	mov    -0x440(%rbp),%rdx
 33046ee:	0f 79 c2             	vmwrite %rdx,%rax
 33046f1:	90                   	nop
 33046f2:	48 c7 85 e0 fb ff ff 	movq   $0x1d9,-0x420(%rbp)
 33046f9:	d9 01 00 00 
 33046fd:	48 c7 85 d8 fb ff ff 	movq   $0x0,-0x428(%rbp)
 3304704:	00 00 00 00 
 3304708:	48 c7 85 d0 fb ff ff 	movq   $0x0,-0x430(%rbp)
 330470f:	00 00 00 00 
 3304713:	48 8b 85 e0 fb ff ff 	mov    -0x420(%rbp),%rax
 330471a:	48 89 c1             	mov    %rax,%rcx
 330471d:	0f 32                	rdmsr  
 330471f:	48 89 95 d8 fb ff ff 	mov    %rdx,-0x428(%rbp)
 3304726:	48 89 85 d0 fb ff ff 	mov    %rax,-0x430(%rbp)
 330472d:	48 8b 85 d8 fb ff ff 	mov    -0x428(%rbp),%rax
 3304734:	48 c1 e0 20          	shl    $0x20,%rax
 3304738:	48 0b 85 d0 fb ff ff 	or     -0x430(%rbp),%rax
 330473f:	48 c1 e8 20          	shr    $0x20,%rax
 3304743:	48 c7 85 f0 fb ff ff 	movq   $0x2803,-0x410(%rbp)
 330474a:	03 28 00 00 
 330474e:	48 89 85 e8 fb ff ff 	mov    %rax,-0x418(%rbp)
 3304755:	48 8b 85 f0 fb ff ff 	mov    -0x410(%rbp),%rax
 330475c:	48 8b 95 e8 fb ff ff 	mov    -0x418(%rbp),%rdx
 3304763:	0f 79 c2             	vmwrite %rdx,%rax
 3304766:	90                   	nop
 3304767:	48 c7 85 00 fc ff ff 	movq   $0x4824,-0x400(%rbp)
 330476e:	24 48 00 00 
 3304772:	48 c7 85 f8 fb ff ff 	movq   $0x0,-0x408(%rbp)
 3304779:	00 00 00 00 
 330477d:	48 8b 85 00 fc ff ff 	mov    -0x400(%rbp),%rax
 3304784:	48 8b 95 f8 fb ff ff 	mov    -0x408(%rbp),%rdx
 330478b:	0f 79 c2             	vmwrite %rdx,%rax
 330478e:	90                   	nop
 330478f:	48 c7 85 10 fc ff ff 	movq   $0x4826,-0x3f0(%rbp)
 3304796:	26 48 00 00 
 330479a:	48 c7 85 08 fc ff ff 	movq   $0x0,-0x3f8(%rbp)
 33047a1:	00 00 00 00 
 33047a5:	48 8b 85 10 fc ff ff 	mov    -0x3f0(%rbp),%rax
 33047ac:	48 8b 95 08 fc ff ff 	mov    -0x3f8(%rbp),%rdx
 33047b3:	0f 79 c2             	vmwrite %rdx,%rax
 33047b6:	90                   	nop
 33047b7:	48 c7 85 20 fc ff ff 	movq   $0x6826,-0x3e0(%rbp)
 33047be:	26 68 00 00 
 33047c2:	48 c7 85 18 fc ff ff 	movq   $0xffff,-0x3e8(%rbp)
 33047c9:	ff ff 00 00 
 33047cd:	48 8b 85 20 fc ff ff 	mov    -0x3e0(%rbp),%rax
 33047d4:	48 8b 95 18 fc ff ff 	mov    -0x3e8(%rbp),%rdx
 33047db:	0f 79 c2             	vmwrite %rdx,%rax
 33047de:	90                   	nop
 33047df:	48 c7 85 30 fc ff ff 	movq   $0x6824,-0x3d0(%rbp)
 33047e6:	24 68 00 00 
 33047ea:	48 c7 85 28 fc ff ff 	movq   $0xffff,-0x3d8(%rbp)
 33047f1:	ff ff 00 00 
 33047f5:	48 8b 85 30 fc ff ff 	mov    -0x3d0(%rbp),%rax
 33047fc:	48 8b 95 28 fc ff ff 	mov    -0x3d8(%rbp),%rdx
 3304803:	0f 79 c2             	vmwrite %rdx,%rax
 3304806:	90                   	nop
 3304807:	48 c7 85 40 fc ff ff 	movq   $0x482a,-0x3c0(%rbp)
 330480e:	2a 48 00 00 
 3304812:	48 c7 85 38 fc ff ff 	movq   $0x8,-0x3c8(%rbp)
 3304819:	08 00 00 00 
 330481d:	48 8b 85 40 fc ff ff 	mov    -0x3c0(%rbp),%rax
 3304824:	48 8b 95 38 fc ff ff 	mov    -0x3c8(%rbp),%rdx
 330482b:	0f 79 c2             	vmwrite %rdx,%rax
 330482e:	90                   	nop
 330482f:	0f 21 f8             	mov    %db7,%rax
 3304832:	48 89 85 48 fc ff ff 	mov    %rax,-0x3b8(%rbp)
 3304839:	48 8b 85 48 fc ff ff 	mov    -0x3b8(%rbp),%rax
 3304840:	48 c7 85 58 fc ff ff 	movq   $0x681a,-0x3a8(%rbp)
 3304847:	1a 68 00 00 
 330484b:	48 89 85 50 fc ff ff 	mov    %rax,-0x3b0(%rbp)
 3304852:	48 8b 85 58 fc ff ff 	mov    -0x3a8(%rbp),%rax
 3304859:	48 8b 95 50 fc ff ff 	mov    -0x3b0(%rbp),%rdx
 3304860:	0f 79 c2             	vmwrite %rdx,%rax
 3304863:	90                   	nop
 3304864:	48 c7 85 68 fc ff ff 	movq   $0x6000,-0x398(%rbp)
 330486b:	00 60 00 00 
 330486f:	48 c7 85 60 fc ff ff 	movq   $0x0,-0x3a0(%rbp)
 3304876:	00 00 00 00 
 330487a:	48 8b 85 68 fc ff ff 	mov    -0x398(%rbp),%rax
 3304881:	48 8b 95 60 fc ff ff 	mov    -0x3a0(%rbp),%rdx
 3304888:	0f 79 c2             	vmwrite %rdx,%rax
 330488b:	90                   	nop
 330488c:	48 c7 85 78 fc ff ff 	movq   $0x6002,-0x388(%rbp)
 3304893:	02 60 00 00 
 3304897:	48 c7 85 70 fc ff ff 	movq   $0x0,-0x390(%rbp)
 330489e:	00 00 00 00 
 33048a2:	48 8b 85 78 fc ff ff 	mov    -0x388(%rbp),%rax
 33048a9:	48 8b 95 70 fc ff ff 	mov    -0x390(%rbp),%rdx
 33048b0:	0f 79 c2             	vmwrite %rdx,%rax
 33048b3:	90                   	nop
 33048b4:	0f 20 c0             	mov    %cr0,%rax
 33048b7:	48 89 85 80 fc ff ff 	mov    %rax,-0x380(%rbp)
 33048be:	48 8b 85 80 fc ff ff 	mov    -0x380(%rbp),%rax
 33048c5:	48 c7 85 90 fc ff ff 	movq   $0x6c00,-0x370(%rbp)
 33048cc:	00 6c 00 00 
 33048d0:	48 89 85 88 fc ff ff 	mov    %rax,-0x378(%rbp)
 33048d7:	48 8b 85 90 fc ff ff 	mov    -0x370(%rbp),%rax
 33048de:	48 8b 95 88 fc ff ff 	mov    -0x378(%rbp),%rdx
 33048e5:	0f 79 c2             	vmwrite %rdx,%rax
 33048e8:	90                   	nop
 33048e9:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33048ed:	48 89 c7             	mov    %rax,%rdi
 33048f0:	e8 71 de ff ff       	callq  3302766 <InitializeHypervisorPaging>
 33048f5:	48 c7 85 a0 fc ff ff 	movq   $0x6c02,-0x360(%rbp)
 33048fc:	02 6c 00 00 
 3304900:	48 89 85 98 fc ff ff 	mov    %rax,-0x368(%rbp)
 3304907:	48 8b 85 a0 fc ff ff 	mov    -0x360(%rbp),%rax
 330490e:	48 8b 95 98 fc ff ff 	mov    -0x368(%rbp),%rdx
 3304915:	0f 79 c2             	vmwrite %rdx,%rax
 3304918:	90                   	nop
 3304919:	0f 20 e0             	mov    %cr4,%rax
 330491c:	48 89 85 a8 fc ff ff 	mov    %rax,-0x358(%rbp)
 3304923:	48 8b 85 a8 fc ff ff 	mov    -0x358(%rbp),%rax
 330492a:	48 0d 00 02 04 00    	or     $0x40200,%rax
 3304930:	48 c7 85 b8 fc ff ff 	movq   $0x6c04,-0x348(%rbp)
 3304937:	04 6c 00 00 
 330493b:	48 89 85 b0 fc ff ff 	mov    %rax,-0x350(%rbp)
 3304942:	48 8b 85 b8 fc ff ff 	mov    -0x348(%rbp),%rax
 3304949:	48 8b 95 b0 fc ff ff 	mov    -0x350(%rbp),%rdx
 3304950:	0f 79 c2             	vmwrite %rdx,%rax
 3304953:	90                   	nop
 3304954:	48 c7 c0 27 05 30 03 	mov    $0x3300527,%rax
 330495b:	48 c7 85 c8 fc ff ff 	movq   $0x6c16,-0x338(%rbp)
 3304962:	16 6c 00 00 
 3304966:	48 89 85 c0 fc ff ff 	mov    %rax,-0x340(%rbp)
 330496d:	48 8b 85 c8 fc ff ff 	mov    -0x338(%rbp),%rax
 3304974:	48 8b 95 c0 fc ff ff 	mov    -0x340(%rbp),%rdx
 330497b:	0f 79 c2             	vmwrite %rdx,%rax
 330497e:	90                   	nop
 330497f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304983:	48 05 00 30 00 00    	add    $0x3000,%rax
 3304989:	48 05 00 40 00 00    	add    $0x4000,%rax
 330498f:	48 c7 85 d8 fc ff ff 	movq   $0x6c14,-0x328(%rbp)
 3304996:	14 6c 00 00 
 330499a:	48 89 85 d0 fc ff ff 	mov    %rax,-0x330(%rbp)
 33049a1:	48 8b 85 d8 fc ff ff 	mov    -0x328(%rbp),%rax
 33049a8:	48 8b 95 d0 fc ff ff 	mov    -0x330(%rbp),%rdx
 33049af:	0f 79 c2             	vmwrite %rdx,%rax
 33049b2:	90                   	nop
 33049b3:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33049b7:	48 8b 80 88 bb 21 02 	mov    0x221bb88(%rax),%rax
 33049be:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33049c2:	0f b6 92 00 b0 21 02 	movzbl 0x221b000(%rdx),%edx
 33049c9:	0f b6 d2             	movzbl %dl,%edx
 33049cc:	48 63 d2             	movslq %edx,%rdx
 33049cf:	48 81 c2 08 10 00 00 	add    $0x1008,%rdx
 33049d6:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 33049da:	48 c7 85 e8 fc ff ff 	movq   $0x6c06,-0x318(%rbp)
 33049e1:	06 6c 00 00 
 33049e5:	48 89 85 e0 fc ff ff 	mov    %rax,-0x320(%rbp)
 33049ec:	48 8b 85 e8 fc ff ff 	mov    -0x318(%rbp),%rax
 33049f3:	48 8b 95 e0 fc ff ff 	mov    -0x320(%rbp),%rdx
 33049fa:	0f 79 c2             	vmwrite %rdx,%rax
 33049fd:	90                   	nop
 33049fe:	48 c7 85 f8 fc ff ff 	movq   $0x6c08,-0x308(%rbp)
 3304a05:	08 6c 00 00 
 3304a09:	48 c7 85 f0 fc ff ff 	movq   $0x0,-0x310(%rbp)
 3304a10:	00 00 00 00 
 3304a14:	48 8b 85 f8 fc ff ff 	mov    -0x308(%rbp),%rax
 3304a1b:	48 8b 95 f0 fc ff ff 	mov    -0x310(%rbp),%rdx
 3304a22:	0f 79 c2             	vmwrite %rdx,%rax
 3304a25:	90                   	nop
 3304a26:	48 c7 85 08 fd ff ff 	movq   $0xc02,-0x2f8(%rbp)
 3304a2d:	02 0c 00 00 
 3304a31:	48 c7 85 00 fd ff ff 	movq   $0x8,-0x300(%rbp)
 3304a38:	08 00 00 00 
 3304a3c:	48 8b 85 08 fd ff ff 	mov    -0x2f8(%rbp),%rax
 3304a43:	48 8b 95 00 fd ff ff 	mov    -0x300(%rbp),%rdx
 3304a4a:	0f 79 c2             	vmwrite %rdx,%rax
 3304a4d:	90                   	nop
 3304a4e:	48 c7 85 18 fd ff ff 	movq   $0xc06,-0x2e8(%rbp)
 3304a55:	06 0c 00 00 
 3304a59:	48 c7 85 10 fd ff ff 	movq   $0x10,-0x2f0(%rbp)
 3304a60:	10 00 00 00 
 3304a64:	48 8b 85 18 fd ff ff 	mov    -0x2e8(%rbp),%rax
 3304a6b:	48 8b 95 10 fd ff ff 	mov    -0x2f0(%rbp),%rdx
 3304a72:	0f 79 c2             	vmwrite %rdx,%rax
 3304a75:	90                   	nop
 3304a76:	48 c7 85 28 fd ff ff 	movq   $0xc00,-0x2d8(%rbp)
 3304a7d:	00 0c 00 00 
 3304a81:	48 c7 85 20 fd ff ff 	movq   $0x10,-0x2e0(%rbp)
 3304a88:	10 00 00 00 
 3304a8c:	48 8b 85 28 fd ff ff 	mov    -0x2d8(%rbp),%rax
 3304a93:	48 8b 95 20 fd ff ff 	mov    -0x2e0(%rbp),%rdx
 3304a9a:	0f 79 c2             	vmwrite %rdx,%rax
 3304a9d:	90                   	nop
 3304a9e:	48 c7 85 38 fd ff ff 	movq   $0xc04,-0x2c8(%rbp)
 3304aa5:	04 0c 00 00 
 3304aa9:	48 c7 85 30 fd ff ff 	movq   $0x10,-0x2d0(%rbp)
 3304ab0:	10 00 00 00 
 3304ab4:	48 8b 85 38 fd ff ff 	mov    -0x2c8(%rbp),%rax
 3304abb:	48 8b 95 30 fd ff ff 	mov    -0x2d0(%rbp),%rdx
 3304ac2:	0f 79 c2             	vmwrite %rdx,%rax
 3304ac5:	90                   	nop
 3304ac6:	48 c7 85 48 fd ff ff 	movq   $0xc0a,-0x2b8(%rbp)
 3304acd:	0a 0c 00 00 
 3304ad1:	48 c7 85 40 fd ff ff 	movq   $0x10,-0x2c0(%rbp)
 3304ad8:	10 00 00 00 
 3304adc:	48 8b 85 48 fd ff ff 	mov    -0x2b8(%rbp),%rax
 3304ae3:	48 8b 95 40 fd ff ff 	mov    -0x2c0(%rbp),%rdx
 3304aea:	0f 79 c2             	vmwrite %rdx,%rax
 3304aed:	90                   	nop
 3304aee:	48 c7 85 58 fd ff ff 	movq   $0xc08,-0x2a8(%rbp)
 3304af5:	08 0c 00 00 
 3304af9:	48 c7 85 50 fd ff ff 	movq   $0x10,-0x2b0(%rbp)
 3304b00:	10 00 00 00 
 3304b04:	48 8b 85 58 fd ff ff 	mov    -0x2a8(%rbp),%rax
 3304b0b:	48 8b 95 50 fd ff ff 	mov    -0x2b0(%rbp),%rdx
 3304b12:	0f 79 c2             	vmwrite %rdx,%rax
 3304b15:	90                   	nop
 3304b16:	48 c7 85 68 fd ff ff 	movq   $0xc0c,-0x298(%rbp)
 3304b1d:	0c 0c 00 00 
 3304b21:	48 c7 85 60 fd ff ff 	movq   $0x10,-0x2a0(%rbp)
 3304b28:	10 00 00 00 
 3304b2c:	48 8b 85 68 fd ff ff 	mov    -0x298(%rbp),%rax
 3304b33:	48 8b 95 60 fd ff ff 	mov    -0x2a0(%rbp),%rdx
 3304b3a:	0f 79 c2             	vmwrite %rdx,%rax
 3304b3d:	90                   	nop
 3304b3e:	48 c7 85 78 fd ff ff 	movq   $0x6c0a,-0x288(%rbp)
 3304b45:	0a 6c 00 00 
 3304b49:	48 c7 85 70 fd ff ff 	movq   $0x10,-0x290(%rbp)
 3304b50:	10 00 00 00 
 3304b54:	48 8b 85 78 fd ff ff 	mov    -0x288(%rbp),%rax
 3304b5b:	48 8b 95 70 fd ff ff 	mov    -0x290(%rbp),%rdx
 3304b62:	0f 79 c2             	vmwrite %rdx,%rax
 3304b65:	90                   	nop
 3304b66:	4c 89 b5 90 fd ff ff 	mov    %r14,-0x270(%rbp)
 3304b6d:	48 c7 85 88 fd ff ff 	movq   $0x0,-0x278(%rbp)
 3304b74:	00 00 00 00 
 3304b78:	48 c7 85 80 fd ff ff 	movq   $0x0,-0x280(%rbp)
 3304b7f:	00 00 00 00 
 3304b83:	48 8b 85 90 fd ff ff 	mov    -0x270(%rbp),%rax
 3304b8a:	48 89 c1             	mov    %rax,%rcx
 3304b8d:	0f 32                	rdmsr  
 3304b8f:	48 89 95 88 fd ff ff 	mov    %rdx,-0x278(%rbp)
 3304b96:	48 89 85 80 fd ff ff 	mov    %rax,-0x280(%rbp)
 3304b9d:	48 8b 85 88 fd ff ff 	mov    -0x278(%rbp),%rax
 3304ba4:	48 c1 e0 20          	shl    $0x20,%rax
 3304ba8:	48 0b 85 80 fd ff ff 	or     -0x280(%rbp),%rax
 3304baf:	48 c7 85 a0 fd ff ff 	movq   $0x2c02,-0x260(%rbp)
 3304bb6:	02 2c 00 00 
 3304bba:	48 89 85 98 fd ff ff 	mov    %rax,-0x268(%rbp)
 3304bc1:	48 8b 85 a0 fd ff ff 	mov    -0x260(%rbp),%rax
 3304bc8:	48 8b 95 98 fd ff ff 	mov    -0x268(%rbp),%rdx
 3304bcf:	0f 79 c2             	vmwrite %rdx,%rax
 3304bd2:	90                   	nop
 3304bd3:	48 c7 85 b0 fd ff ff 	movq   $0x4c00,-0x250(%rbp)
 3304bda:	00 4c 00 00 
 3304bde:	48 c7 85 a8 fd ff ff 	movq   $0xff,-0x258(%rbp)
 3304be5:	ff 00 00 00 
 3304be9:	48 8b 85 b0 fd ff ff 	mov    -0x250(%rbp),%rax
 3304bf0:	48 8b 95 a8 fd ff ff 	mov    -0x258(%rbp),%rdx
 3304bf7:	0f 79 c2             	vmwrite %rdx,%rax
 3304bfa:	90                   	nop
 3304bfb:	48 c7 85 c0 fd ff ff 	movq   $0x6c12,-0x240(%rbp)
 3304c02:	12 6c 00 00 
 3304c06:	48 89 9d b8 fd ff ff 	mov    %rbx,-0x248(%rbp)
 3304c0d:	48 8b 85 c0 fd ff ff 	mov    -0x240(%rbp),%rax
 3304c14:	48 8b 95 b8 fd ff ff 	mov    -0x248(%rbp),%rdx
 3304c1b:	0f 79 c2             	vmwrite %rdx,%rax
 3304c1e:	90                   	nop
 3304c1f:	48 c7 85 d0 fd ff ff 	movq   $0x6c10,-0x230(%rbp)
 3304c26:	10 6c 00 00 
 3304c2a:	48 89 9d c8 fd ff ff 	mov    %rbx,-0x238(%rbp)
 3304c31:	48 8b 85 d0 fd ff ff 	mov    -0x230(%rbp),%rax
 3304c38:	48 8b 95 c8 fd ff ff 	mov    -0x238(%rbp),%rdx
 3304c3f:	0f 79 c2             	vmwrite %rdx,%rax
 3304c42:	90                   	nop
 3304c43:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304c47:	48 05 08 b0 21 02    	add    $0x221b008,%rax
 3304c4d:	48 c7 85 e0 fd ff ff 	movq   $0x6c0c,-0x220(%rbp)
 3304c54:	0c 6c 00 00 
 3304c58:	48 89 85 d8 fd ff ff 	mov    %rax,-0x228(%rbp)
 3304c5f:	48 8b 85 e0 fd ff ff 	mov    -0x220(%rbp),%rax
 3304c66:	48 8b 95 d8 fd ff ff 	mov    -0x228(%rbp),%rdx
 3304c6d:	0f 79 c2             	vmwrite %rdx,%rax
 3304c70:	90                   	nop
 3304c71:	48 c7 85 f0 fd ff ff 	movq   $0x2800,-0x210(%rbp)
 3304c78:	00 28 00 00 
 3304c7c:	48 c7 85 e8 fd ff ff 	movq   $0xffffffffffffffff,-0x218(%rbp)
 3304c83:	ff ff ff ff 
 3304c87:	48 8b 85 f0 fd ff ff 	mov    -0x210(%rbp),%rax
 3304c8e:	48 8b 95 e8 fd ff ff 	mov    -0x218(%rbp),%rdx
 3304c95:	0f 79 c2             	vmwrite %rdx,%rax
 3304c98:	90                   	nop
 3304c99:	48 c7 85 00 fe ff ff 	movq   $0x2010,-0x200(%rbp)
 3304ca0:	10 20 00 00 
 3304ca4:	48 c7 85 f8 fd ff ff 	movq   $0x0,-0x208(%rbp)
 3304cab:	00 00 00 00 
 3304caf:	48 8b 85 00 fe ff ff 	mov    -0x200(%rbp),%rax
 3304cb6:	48 8b 95 f8 fd ff ff 	mov    -0x208(%rbp),%rdx
 3304cbd:	0f 79 c2             	vmwrite %rdx,%rax
 3304cc0:	90                   	nop
 3304cc1:	48 c7 85 10 fe ff ff 	movq   $0x2011,-0x1f0(%rbp)
 3304cc8:	11 20 00 00 
 3304ccc:	48 c7 85 08 fe ff ff 	movq   $0x0,-0x1f8(%rbp)
 3304cd3:	00 00 00 00 
 3304cd7:	48 8b 85 10 fe ff ff 	mov    -0x1f0(%rbp),%rax
 3304cde:	48 8b 95 08 fe ff ff 	mov    -0x1f8(%rbp),%rdx
 3304ce5:	0f 79 c2             	vmwrite %rdx,%rax
 3304ce8:	90                   	nop
 3304ce9:	48 c7 85 20 fe ff ff 	movq   $0x4006,-0x1e0(%rbp)
 3304cf0:	06 40 00 00 
 3304cf4:	48 c7 85 18 fe ff ff 	movq   $0x0,-0x1e8(%rbp)
 3304cfb:	00 00 00 00 
 3304cff:	48 8b 85 20 fe ff ff 	mov    -0x1e0(%rbp),%rax
 3304d06:	48 8b 95 18 fe ff ff 	mov    -0x1e8(%rbp),%rdx
 3304d0d:	0f 79 c2             	vmwrite %rdx,%rax
 3304d10:	90                   	nop
 3304d11:	48 c7 85 30 fe ff ff 	movq   $0x4008,-0x1d0(%rbp)
 3304d18:	08 40 00 00 
 3304d1c:	48 c7 85 28 fe ff ff 	movq   $0x0,-0x1d8(%rbp)
 3304d23:	00 00 00 00 
 3304d27:	48 8b 85 30 fe ff ff 	mov    -0x1d0(%rbp),%rax
 3304d2e:	48 8b 95 28 fe ff ff 	mov    -0x1d8(%rbp),%rdx
 3304d35:	0f 79 c2             	vmwrite %rdx,%rax
 3304d38:	90                   	nop
 3304d39:	48 c7 85 40 fe ff ff 	movq   $0x400e,-0x1c0(%rbp)
 3304d40:	0e 40 00 00 
 3304d44:	48 c7 85 38 fe ff ff 	movq   $0x0,-0x1c8(%rbp)
 3304d4b:	00 00 00 00 
 3304d4f:	48 8b 85 40 fe ff ff 	mov    -0x1c0(%rbp),%rax
 3304d56:	48 8b 95 38 fe ff ff 	mov    -0x1c8(%rbp),%rdx
 3304d5d:	0f 79 c2             	vmwrite %rdx,%rax
 3304d60:	90                   	nop
 3304d61:	48 c7 85 50 fe ff ff 	movq   $0x4010,-0x1b0(%rbp)
 3304d68:	10 40 00 00 
 3304d6c:	48 c7 85 48 fe ff ff 	movq   $0x0,-0x1b8(%rbp)
 3304d73:	00 00 00 00 
 3304d77:	48 8b 85 50 fe ff ff 	mov    -0x1b0(%rbp),%rax
 3304d7e:	48 8b 95 48 fe ff ff 	mov    -0x1b8(%rbp),%rdx
 3304d85:	0f 79 c2             	vmwrite %rdx,%rax
 3304d88:	90                   	nop
 3304d89:	48 c7 85 60 fe ff ff 	movq   $0x4014,-0x1a0(%rbp)
 3304d90:	14 40 00 00 
 3304d94:	48 c7 85 58 fe ff ff 	movq   $0x0,-0x1a8(%rbp)
 3304d9b:	00 00 00 00 
 3304d9f:	48 8b 85 60 fe ff ff 	mov    -0x1a0(%rbp),%rax
 3304da6:	48 8b 95 58 fe ff ff 	mov    -0x1a8(%rbp),%rdx
 3304dad:	0f 79 c2             	vmwrite %rdx,%rax
 3304db0:	90                   	nop
 3304db1:	48 c7 85 70 fe ff ff 	movq   $0x4016,-0x190(%rbp)
 3304db8:	16 40 00 00 
 3304dbc:	48 c7 85 68 fe ff ff 	movq   $0x0,-0x198(%rbp)
 3304dc3:	00 00 00 00 
 3304dc7:	48 8b 85 70 fe ff ff 	mov    -0x190(%rbp),%rax
 3304dce:	48 8b 95 68 fe ff ff 	mov    -0x198(%rbp),%rdx
 3304dd5:	0f 79 c2             	vmwrite %rdx,%rax
 3304dd8:	90                   	nop
 3304dd9:	be 82 04 00 00       	mov    $0x482,%esi
 3304dde:	bf 00 00 00 90       	mov    $0x90000000,%edi
 3304de3:	e8 59 03 00 00       	callq  3305141 <AdjustControls>
 3304de8:	89 c0                	mov    %eax,%eax
 3304dea:	48 c7 85 80 fe ff ff 	movq   $0x4002,-0x180(%rbp)
 3304df1:	02 40 00 00 
 3304df5:	48 89 85 78 fe ff ff 	mov    %rax,-0x188(%rbp)
 3304dfc:	48 8b 85 80 fe ff ff 	mov    -0x180(%rbp),%rax
 3304e03:	48 8b 95 78 fe ff ff 	mov    -0x188(%rbp),%rdx
 3304e0a:	0f 79 c2             	vmwrite %rdx,%rax
 3304e0d:	90                   	nop
 3304e0e:	be 8b 04 00 00       	mov    $0x48b,%esi
 3304e13:	bf 8a 10 00 00       	mov    $0x108a,%edi
 3304e18:	e8 24 03 00 00       	callq  3305141 <AdjustControls>
 3304e1d:	89 c0                	mov    %eax,%eax
 3304e1f:	48 c7 85 90 fe ff ff 	movq   $0x401e,-0x170(%rbp)
 3304e26:	1e 40 00 00 
 3304e2a:	48 89 85 88 fe ff ff 	mov    %rax,-0x178(%rbp)
 3304e31:	48 8b 85 90 fe ff ff 	mov    -0x170(%rbp),%rax
 3304e38:	48 8b 95 88 fe ff ff 	mov    -0x178(%rbp),%rdx
 3304e3f:	0f 79 c2             	vmwrite %rdx,%rax
 3304e42:	90                   	nop
 3304e43:	be 81 04 00 00       	mov    $0x481,%esi
 3304e48:	bf 00 00 00 00       	mov    $0x0,%edi
 3304e4d:	e8 ef 02 00 00       	callq  3305141 <AdjustControls>
 3304e52:	89 c0                	mov    %eax,%eax
 3304e54:	48 c7 85 a0 fe ff ff 	movq   $0x4000,-0x160(%rbp)
 3304e5b:	00 40 00 00 
 3304e5f:	48 89 85 98 fe ff ff 	mov    %rax,-0x168(%rbp)
 3304e66:	48 8b 85 a0 fe ff ff 	mov    -0x160(%rbp),%rax
 3304e6d:	48 8b 95 98 fe ff ff 	mov    -0x168(%rbp),%rdx
 3304e74:	0f 79 c2             	vmwrite %rdx,%rax
 3304e77:	90                   	nop
 3304e78:	be 83 04 00 00       	mov    $0x483,%esi
 3304e7d:	bf 00 02 30 00       	mov    $0x300200,%edi
 3304e82:	e8 ba 02 00 00       	callq  3305141 <AdjustControls>
 3304e87:	89 c0                	mov    %eax,%eax
 3304e89:	48 c7 85 b0 fe ff ff 	movq   $0x400c,-0x150(%rbp)
 3304e90:	0c 40 00 00 
 3304e94:	48 89 85 a8 fe ff ff 	mov    %rax,-0x158(%rbp)
 3304e9b:	48 8b 85 b0 fe ff ff 	mov    -0x150(%rbp),%rax
 3304ea2:	48 8b 95 a8 fe ff ff 	mov    -0x158(%rbp),%rdx
 3304ea9:	0f 79 c2             	vmwrite %rdx,%rax
 3304eac:	90                   	nop
 3304ead:	be 84 04 00 00       	mov    $0x484,%esi
 3304eb2:	bf 00 82 00 00       	mov    $0x8200,%edi
 3304eb7:	e8 85 02 00 00       	callq  3305141 <AdjustControls>
 3304ebc:	89 c0                	mov    %eax,%eax
 3304ebe:	48 c7 85 c0 fe ff ff 	movq   $0x4012,-0x140(%rbp)
 3304ec5:	12 40 00 00 
 3304ec9:	48 89 85 b8 fe ff ff 	mov    %rax,-0x148(%rbp)
 3304ed0:	48 8b 85 c0 fe ff ff 	mov    -0x140(%rbp),%rax
 3304ed7:	48 8b 95 b8 fe ff ff 	mov    -0x148(%rbp),%rdx
 3304ede:	0f 79 c2             	vmwrite %rdx,%rax
 3304ee1:	90                   	nop
 3304ee2:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304ee6:	48 89 c7             	mov    %rax,%rdi
 3304ee9:	e8 7e d9 ff ff       	callq  330286c <InitializeExtendedPageTable>
 3304eee:	48 c7 85 d0 fe ff ff 	movq   $0x201a,-0x130(%rbp)
 3304ef5:	1a 20 00 00 
 3304ef9:	48 89 85 c8 fe ff ff 	mov    %rax,-0x138(%rbp)
 3304f00:	48 8b 85 d0 fe ff ff 	mov    -0x130(%rbp),%rax
 3304f07:	48 8b 95 c8 fe ff ff 	mov    -0x138(%rbp),%rdx
 3304f0e:	0f 79 c2             	vmwrite %rdx,%rax
 3304f11:	90                   	nop
 3304f12:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304f16:	48 05 00 20 00 00    	add    $0x2000,%rax
 3304f1c:	48 89 c7             	mov    %rax,%rdi
 3304f1f:	e8 fc d7 ff ff       	callq  3302720 <VirtualToPhysical>
 3304f24:	48 c7 85 e0 fe ff ff 	movq   $0x2004,-0x120(%rbp)
 3304f2b:	04 20 00 00 
 3304f2f:	48 89 85 d8 fe ff ff 	mov    %rax,-0x128(%rbp)
 3304f36:	48 8b 85 e0 fe ff ff 	mov    -0x120(%rbp),%rax
 3304f3d:	48 8b 95 d8 fe ff ff 	mov    -0x128(%rbp),%rdx
 3304f44:	0f 79 c2             	vmwrite %rdx,%rax
 3304f47:	90                   	nop
 3304f48:	48 c7 85 f0 fe ff ff 	movq   $0x0,-0x110(%rbp)
 3304f4f:	00 00 00 00 
 3304f53:	48 c7 85 e8 fe ff ff 	movq   $0x1,-0x118(%rbp)
 3304f5a:	01 00 00 00 
 3304f5e:	48 8b 85 f0 fe ff ff 	mov    -0x110(%rbp),%rax
 3304f65:	48 8b 95 e8 fe ff ff 	mov    -0x118(%rbp),%rdx
 3304f6c:	0f 79 c2             	vmwrite %rdx,%rax
 3304f6f:	90                   	nop
 3304f70:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304f74:	48 89 c7             	mov    %rax,%rdi
 3304f77:	e8 81 00 00 00       	callq  3304ffd <RegisterVmExitHandlers>
 3304f7c:	b8 00 00 00 00       	mov    $0x0,%eax
 3304f81:	e8 8a b5 ff ff       	callq  3300510 <SetupCompleteBackToGuestState>
 3304f86:	48 85 c0             	test   %rax,%rax
 3304f89:	74 44                	je     3304fcf <InitializeSingleHypervisor+0x15a3>
 3304f8b:	bf 00 44 00 00       	mov    $0x4400,%edi
 3304f90:	e8 2e d7 ff ff       	callq  33026c3 <vmread>
 3304f95:	48 89 c2             	mov    %rax,%rdx
 3304f98:	9c                   	pushfq 
 3304f99:	58                   	pop    %rax
 3304f9a:	48 89 85 90 f8 ff ff 	mov    %rax,-0x770(%rbp)
 3304fa1:	48 8b 85 90 f8 ff ff 	mov    -0x770(%rbp),%rax
 3304fa8:	48 89 c6             	mov    %rax,%rsi
 3304fab:	48 8d 3d 06 18 00 00 	lea    0x1806(%rip),%rdi        # 33067b8 <CopyMemoryToGuest+0xc61>
 3304fb2:	b8 00 00 00 00       	mov    $0x0,%eax
 3304fb7:	e8 d9 d1 ff ff       	callq  3302195 <Print>
 3304fbc:	48 8d 3d 1d 18 00 00 	lea    0x181d(%rip),%rdi        # 33067e0 <CopyMemoryToGuest+0xc89>
 3304fc3:	b8 00 00 00 00       	mov    $0x0,%eax
 3304fc8:	e8 c8 d1 ff ff       	callq  3302195 <Print>
 3304fcd:	eb fe                	jmp    3304fcd <InitializeSingleHypervisor+0x15a1>
 3304fcf:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3304fd3:	0f b6 80 00 b0 21 02 	movzbl 0x221b000(%rax),%eax
 3304fda:	0f b6 c0             	movzbl %al,%eax
 3304fdd:	89 c6                	mov    %eax,%esi
 3304fdf:	48 8d 3d 5a 18 00 00 	lea    0x185a(%rip),%rdi        # 3306840 <CopyMemoryToGuest+0xce9>
 3304fe6:	b8 00 00 00 00       	mov    $0x0,%eax
 3304feb:	e8 a5 d1 ff ff       	callq  3302195 <Print>
 3304ff0:	90                   	nop
 3304ff1:	48 81 c4 a0 07 00 00 	add    $0x7a0,%rsp
 3304ff8:	5b                   	pop    %rbx
 3304ff9:	41 5e                	pop    %r14
 3304ffb:	5d                   	pop    %rbp
 3304ffc:	c3                   	retq   

0000000003304ffd <RegisterVmExitHandlers>:
 3304ffd:	f3 0f 1e fa          	endbr64 
 3305001:	55                   	push   %rbp
 3305002:	48 89 e5             	mov    %rsp,%rbp
 3305005:	48 83 ec 20          	sub    $0x20,%rsp
 3305009:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 330500d:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305014:	00 
 3305015:	eb 18                	jmp    330502f <RegisterVmExitHandlers+0x32>
 3305017:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330501b:	48 8d 50 01          	lea    0x1(%rax),%rdx
 330501f:	48 89 55 f8          	mov    %rdx,-0x8(%rbp)
 3305023:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305027:	c6 84 02 00 b8 21 02 	movb   $0x0,0x221b800(%rdx,%rax,1)
 330502e:	00 
 330502f:	48 83 7d f8 63       	cmpq   $0x63,-0x8(%rbp)
 3305034:	76 e1                	jbe    3305017 <RegisterVmExitHandlers+0x1a>
 3305036:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330503a:	48 c7 c2 5a 36 30 03 	mov    $0x330365a,%rdx
 3305041:	be 1f 00 00 00       	mov    $0x1f,%esi
 3305046:	48 89 c7             	mov    %rax,%rdi
 3305049:	e8 57 05 00 00       	callq  33055a5 <RegisterVmExitHandler>
 330504e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305052:	48 c7 c2 03 37 30 03 	mov    $0x3303703,%rdx
 3305059:	be 20 00 00 00       	mov    $0x20,%esi
 330505e:	48 89 c7             	mov    %rax,%rdi
 3305061:	e8 3f 05 00 00       	callq  33055a5 <RegisterVmExitHandler>
 3305066:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330506a:	48 c7 c2 8c 39 30 03 	mov    $0x330398c,%rdx
 3305071:	be 21 00 00 00       	mov    $0x21,%esi
 3305076:	48 89 c7             	mov    %rax,%rdi
 3305079:	e8 27 05 00 00       	callq  33055a5 <RegisterVmExitHandler>
 330507e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305082:	48 c7 c2 bd 31 30 03 	mov    $0x33031bd,%rdx
 3305089:	be 37 00 00 00       	mov    $0x37,%esi
 330508e:	48 89 c7             	mov    %rax,%rdi
 3305091:	e8 0f 05 00 00       	callq  33055a5 <RegisterVmExitHandler>
 3305096:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330509a:	48 c7 c2 98 37 30 03 	mov    $0x3303798,%rdx
 33050a1:	be 0a 00 00 00       	mov    $0xa,%esi
 33050a6:	48 89 c7             	mov    %rax,%rdi
 33050a9:	e8 f7 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 33050ae:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050b2:	48 c7 c2 d6 29 30 03 	mov    $0x33029d6,%rdx
 33050b9:	be 1c 00 00 00       	mov    $0x1c,%esi
 33050be:	48 89 c7             	mov    %rax,%rdi
 33050c1:	e8 df 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 33050c6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050ca:	48 c7 c2 ef 38 30 03 	mov    $0x33038ef,%rdx
 33050d1:	be 30 00 00 00       	mov    $0x30,%esi
 33050d6:	48 89 c7             	mov    %rax,%rdi
 33050d9:	e8 c7 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 33050de:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050e2:	48 c7 c2 18 33 30 03 	mov    $0x3303318,%rdx
 33050e9:	be 12 00 00 00       	mov    $0x12,%esi
 33050ee:	48 89 c7             	mov    %rax,%rdi
 33050f1:	e8 af 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 33050f6:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 33050fa:	48 c7 c2 b4 39 30 03 	mov    $0x33039b4,%rdx
 3305101:	be 22 00 00 00       	mov    $0x22,%esi
 3305106:	48 89 c7             	mov    %rax,%rdi
 3305109:	e8 97 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 330510e:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305112:	48 c7 c2 dc 39 30 03 	mov    $0x33039dc,%rdx
 3305119:	be 29 00 00 00       	mov    $0x29,%esi
 330511e:	48 89 c7             	mov    %rax,%rdi
 3305121:	e8 7f 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 3305126:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330512a:	48 c7 c2 04 3a 30 03 	mov    $0x3303a04,%rdx
 3305131:	be 02 00 00 00       	mov    $0x2,%esi
 3305136:	48 89 c7             	mov    %rax,%rdi
 3305139:	e8 67 04 00 00       	callq  33055a5 <RegisterVmExitHandler>
 330513e:	90                   	nop
 330513f:	c9                   	leaveq 
 3305140:	c3                   	retq   

0000000003305141 <AdjustControls>:
 3305141:	f3 0f 1e fa          	endbr64 
 3305145:	55                   	push   %rbp
 3305146:	48 89 e5             	mov    %rsp,%rbp
 3305149:	48 83 ec 30          	sub    $0x30,%rsp
 330514d:	89 7d dc             	mov    %edi,-0x24(%rbp)
 3305150:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305154:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305158:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330515c:	48 c7 45 e8 00 00 00 	movq   $0x0,-0x18(%rbp)
 3305163:	00 
 3305164:	48 c7 45 e0 00 00 00 	movq   $0x0,-0x20(%rbp)
 330516b:	00 
 330516c:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305170:	48 89 c1             	mov    %rax,%rcx
 3305173:	0f 32                	rdmsr  
 3305175:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 3305179:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 330517d:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305181:	48 c1 e0 20          	shl    $0x20,%rax
 3305185:	48 0b 45 e0          	or     -0x20(%rbp),%rax
 3305189:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330518d:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305191:	48 c1 e8 20          	shr    $0x20,%rax
 3305195:	21 45 dc             	and    %eax,-0x24(%rbp)
 3305198:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330519c:	09 45 dc             	or     %eax,-0x24(%rbp)
 330519f:	8b 45 dc             	mov    -0x24(%rbp),%eax
 33051a2:	c9                   	leaveq 
 33051a3:	c3                   	retq   

00000000033051a4 <HandleVmExitEx>:
 33051a4:	f3 0f 1e fa          	endbr64 
 33051a8:	55                   	push   %rbp
 33051a9:	48 89 e5             	mov    %rsp,%rbp
 33051ac:	48 83 ec 20          	sub    $0x20,%rsp
 33051b0:	bf 02 44 00 00       	mov    $0x4402,%edi
 33051b5:	e8 09 d5 ff ff       	callq  33026c3 <vmread>
 33051ba:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33051be:	bf 00 64 00 00       	mov    $0x6400,%edi
 33051c3:	e8 fb d4 ff ff       	callq  33026c3 <vmread>
 33051c8:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 33051cc:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33051d0:	48 25 00 00 00 80    	and    $0xffffffff80000000,%rax
 33051d6:	48 85 c0             	test   %rax,%rax
 33051d9:	74 18                	je     33051f3 <HandleVmExitEx+0x4f>
 33051db:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33051df:	48 89 c6             	mov    %rax,%rsi
 33051e2:	48 8d 3d 7f 16 00 00 	lea    0x167f(%rip),%rdi        # 3306868 <CopyMemoryToGuest+0xd11>
 33051e9:	b8 00 00 00 00       	mov    $0x0,%eax
 33051ee:	e8 a2 cf ff ff       	callq  3302195 <Print>
 33051f3:	48 81 65 f8 ff ff 00 	andq   $0xffff,-0x8(%rbp)
 33051fa:	00 
 33051fb:	b8 00 00 00 00       	mov    $0x0,%eax
 3305200:	e8 af 00 00 00       	callq  33052b4 <GetVMMStruct>
 3305205:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305209:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330520d:	48 8b 90 88 00 00 00 	mov    0x88(%rax),%rdx
 3305214:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305218:	48 01 d0             	add    %rdx,%rax
 330521b:	48 05 00 b8 21 02    	add    $0x221b800,%rax
 3305221:	0f b6 00             	movzbl (%rax),%eax
 3305224:	84 c0                	test   %al,%al
 3305226:	74 5e                	je     3305286 <HandleVmExitEx+0xe2>
 3305228:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330522c:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 3305233:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3305237:	48 81 c2 0c 37 44 00 	add    $0x44370c,%rdx
 330523e:	48 8b 54 d0 08       	mov    0x8(%rax,%rdx,8),%rdx
 3305243:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305247:	48 89 c7             	mov    %rax,%rdi
 330524a:	ff d2                	callq  *%rdx
 330524c:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 3305250:	48 83 7d e0 00       	cmpq   $0x0,-0x20(%rbp)
 3305255:	74 5a                	je     33052b1 <HandleVmExitEx+0x10d>
 3305257:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330525b:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330525f:	48 89 c6             	mov    %rax,%rsi
 3305262:	48 8d 3d 37 16 00 00 	lea    0x1637(%rip),%rdi        # 33068a0 <CopyMemoryToGuest+0xd49>
 3305269:	b8 00 00 00 00       	mov    $0x0,%eax
 330526e:	e8 22 cf ff ff       	callq  3302195 <Print>
 3305273:	48 8d 3d 66 16 00 00 	lea    0x1666(%rip),%rdi        # 33068e0 <CopyMemoryToGuest+0xd89>
 330527a:	b8 00 00 00 00       	mov    $0x0,%eax
 330527f:	e8 11 cf ff ff       	callq  3302195 <Print>
 3305284:	eb fe                	jmp    3305284 <HandleVmExitEx+0xe0>
 3305286:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330528a:	48 89 c6             	mov    %rax,%rsi
 330528d:	48 8d 3d ac 16 00 00 	lea    0x16ac(%rip),%rdi        # 3306940 <CopyMemoryToGuest+0xde9>
 3305294:	b8 00 00 00 00       	mov    $0x0,%eax
 3305299:	e8 f7 ce ff ff       	callq  3302195 <Print>
 330529e:	48 8d 3d cb 16 00 00 	lea    0x16cb(%rip),%rdi        # 3306970 <CopyMemoryToGuest+0xe19>
 33052a5:	b8 00 00 00 00       	mov    $0x0,%eax
 33052aa:	e8 e6 ce ff ff       	callq  3302195 <Print>
 33052af:	eb fe                	jmp    33052af <HandleVmExitEx+0x10b>
 33052b1:	90                   	nop
 33052b2:	c9                   	leaveq 
 33052b3:	c3                   	retq   

00000000033052b4 <GetVMMStruct>:
 33052b4:	f3 0f 1e fa          	endbr64 
 33052b8:	55                   	push   %rbp
 33052b9:	48 89 e5             	mov    %rsp,%rbp
 33052bc:	bf 06 6c 00 00       	mov    $0x6c06,%edi
 33052c1:	e8 fd d3 ff ff       	callq  33026c3 <vmread>
 33052c6:	5d                   	pop    %rbp
 33052c7:	c3                   	retq   

00000000033052c8 <SetupHypervisorCodeProtection>:
 33052c8:	f3 0f 1e fa          	endbr64 
 33052cc:	55                   	push   %rbp
 33052cd:	48 89 e5             	mov    %rsp,%rbp
 33052d0:	48 83 ec 40          	sub    $0x40,%rsp
 33052d4:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33052d8:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 33052dc:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 33052e0:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33052e4:	25 ff 0f 00 00       	and    $0xfff,%eax
 33052e9:	48 85 c0             	test   %rax,%rax
 33052ec:	74 0a                	je     33052f8 <SetupHypervisorCodeProtection+0x30>
 33052ee:	b8 09 00 00 00       	mov    $0x9,%eax
 33052f3:	e9 28 01 00 00       	jmpq   3305420 <SetupHypervisorCodeProtection+0x158>
 33052f8:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33052fc:	48 8b 88 30 86 00 00 	mov    0x8630(%rax),%rcx
 3305303:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305307:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 330530b:	48 89 c6             	mov    %rax,%rsi
 330530e:	48 8d 3d bb 16 00 00 	lea    0x16bb(%rip),%rdi        # 33069d0 <CopyMemoryToGuest+0xe79>
 3305315:	b8 00 00 00 00       	mov    $0x0,%eax
 330531a:	e8 1c cf ff ff       	callq  330223b <PrintDebugLevelDebug>
 330531f:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305323:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305329:	48 c1 e8 0c          	shr    $0xc,%rax
 330532d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305331:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305335:	48 8b 80 38 86 00 00 	mov    0x8638(%rax),%rax
 330533c:	48 c1 e8 0c          	shr    $0xc,%rax
 3305340:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305344:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330534b:	00 
 330534c:	e9 a1 00 00 00       	jmpq   33053f2 <SetupHypervisorCodeProtection+0x12a>
 3305351:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305355:	48 8b 90 50 86 00 00 	mov    0x8650(%rax),%rdx
 330535c:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305360:	48 8b b0 48 86 00 00 	mov    0x8648(%rax),%rsi
 3305367:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330536b:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 330536f:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 3305376:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 330537a:	b9 00 00 00 00       	mov    $0x0,%ecx
 330537f:	48 89 c7             	mov    %rax,%rdi
 3305382:	e8 ed 00 00 00       	callq  3305474 <UpdateEptAccessPolicy>
 3305387:	48 85 c0             	test   %rax,%rax
 330538a:	74 13                	je     330539f <SetupHypervisorCodeProtection+0xd7>
 330538c:	48 8d 3d 6d 16 00 00 	lea    0x166d(%rip),%rdi        # 3306a00 <CopyMemoryToGuest+0xea9>
 3305393:	b8 00 00 00 00       	mov    $0x0,%eax
 3305398:	e8 f8 cd ff ff       	callq  3302195 <Print>
 330539d:	eb fe                	jmp    330539d <SetupHypervisorCodeProtection+0xd5>
 330539f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053a3:	48 8b 90 38 86 00 00 	mov    0x8638(%rax),%rdx
 33053aa:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053ae:	48 8b b0 30 86 00 00 	mov    0x8630(%rax),%rsi
 33053b5:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053b9:	48 8b 4d f8          	mov    -0x8(%rbp),%rcx
 33053bd:	48 81 c1 00 10 00 00 	add    $0x1000,%rcx
 33053c4:	48 8b 04 c8          	mov    (%rax,%rcx,8),%rax
 33053c8:	b9 00 00 00 00       	mov    $0x0,%ecx
 33053cd:	48 89 c7             	mov    %rax,%rdi
 33053d0:	e8 9f 00 00 00       	callq  3305474 <UpdateEptAccessPolicy>
 33053d5:	48 85 c0             	test   %rax,%rax
 33053d8:	74 13                	je     33053ed <SetupHypervisorCodeProtection+0x125>
 33053da:	48 8d 3d d7 16 00 00 	lea    0x16d7(%rip),%rdi        # 3306ab8 <CopyMemoryToGuest+0xf61>
 33053e1:	b8 00 00 00 00       	mov    $0x0,%eax
 33053e6:	e8 aa cd ff ff       	callq  3302195 <Print>
 33053eb:	eb fe                	jmp    33053eb <SetupHypervisorCodeProtection+0x123>
 33053ed:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 33053f2:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33053f6:	0f b6 80 22 86 00 00 	movzbl 0x8622(%rax),%eax
 33053fd:	0f b6 c0             	movzbl %al,%eax
 3305400:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 3305404:	0f 82 47 ff ff ff    	jb     3305351 <SetupHypervisorCodeProtection+0x89>
 330540a:	48 8d 3d 67 17 00 00 	lea    0x1767(%rip),%rdi        # 3306b78 <CopyMemoryToGuest+0x1021>
 3305411:	b8 00 00 00 00       	mov    $0x0,%eax
 3305416:	e8 20 ce ff ff       	callq  330223b <PrintDebugLevelDebug>
 330541b:	b8 00 00 00 00       	mov    $0x0,%eax
 3305420:	c9                   	leaveq 
 3305421:	c3                   	retq   

0000000003305422 <CheckAccessToHiddenBase>:
 3305422:	f3 0f 1e fa          	endbr64 
 3305426:	55                   	push   %rbp
 3305427:	48 89 e5             	mov    %rsp,%rbp
 330542a:	48 83 ec 10          	sub    $0x10,%rsp
 330542e:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3305432:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 3305436:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330543a:	48 8b 80 30 86 00 00 	mov    0x8630(%rax),%rax
 3305441:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3305445:	72 26                	jb     330546d <CheckAccessToHiddenBase+0x4b>
 3305447:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330544b:	48 8b 90 30 86 00 00 	mov    0x8630(%rax),%rdx
 3305452:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305456:	48 8b 80 38 86 00 00 	mov    0x8638(%rax),%rax
 330545d:	48 01 d0             	add    %rdx,%rax
 3305460:	48 39 45 f0          	cmp    %rax,-0x10(%rbp)
 3305464:	77 07                	ja     330546d <CheckAccessToHiddenBase+0x4b>
 3305466:	b8 0a 00 00 00       	mov    $0xa,%eax
 330546b:	eb 05                	jmp    3305472 <CheckAccessToHiddenBase+0x50>
 330546d:	b8 00 00 00 00       	mov    $0x0,%eax
 3305472:	c9                   	leaveq 
 3305473:	c3                   	retq   

0000000003305474 <UpdateEptAccessPolicy>:
 3305474:	f3 0f 1e fa          	endbr64 
 3305478:	55                   	push   %rbp
 3305479:	48 89 e5             	mov    %rsp,%rbp
 330547c:	48 83 ec 30          	sub    $0x30,%rsp
 3305480:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3305484:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3305488:	48 89 55 d8          	mov    %rdx,-0x28(%rbp)
 330548c:	48 89 4d d0          	mov    %rcx,-0x30(%rbp)
 3305490:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305494:	25 ff 0f 00 00       	and    $0xfff,%eax
 3305499:	48 85 c0             	test   %rax,%rax
 330549c:	75 0e                	jne    33054ac <UpdateEptAccessPolicy+0x38>
 330549e:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33054a2:	25 ff 0f 00 00       	and    $0xfff,%eax
 33054a7:	48 85 c0             	test   %rax,%rax
 33054aa:	74 26                	je     33054d2 <UpdateEptAccessPolicy+0x5e>
 33054ac:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 33054b0:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33054b4:	48 89 c6             	mov    %rax,%rsi
 33054b7:	48 8d 3d ca 16 00 00 	lea    0x16ca(%rip),%rdi        # 3306b88 <CopyMemoryToGuest+0x1031>
 33054be:	b8 00 00 00 00       	mov    $0x0,%eax
 33054c3:	e8 73 cd ff ff       	callq  330223b <PrintDebugLevelDebug>
 33054c8:	b8 09 00 00 00       	mov    $0x9,%eax
 33054cd:	e9 d1 00 00 00       	jmpq   33055a3 <UpdateEptAccessPolicy+0x12f>
 33054d2:	48 83 7d d0 07       	cmpq   $0x7,-0x30(%rbp)
 33054d7:	76 22                	jbe    33054fb <UpdateEptAccessPolicy+0x87>
 33054d9:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33054dd:	48 89 c6             	mov    %rax,%rsi
 33054e0:	48 8d 3d d9 16 00 00 	lea    0x16d9(%rip),%rdi        # 3306bc0 <CopyMemoryToGuest+0x1069>
 33054e7:	b8 00 00 00 00       	mov    $0x0,%eax
 33054ec:	e8 4a cd ff ff       	callq  330223b <PrintDebugLevelDebug>
 33054f1:	b8 0b 00 00 00       	mov    $0xb,%eax
 33054f6:	e9 a8 00 00 00       	jmpq   33055a3 <UpdateEptAccessPolicy+0x12f>
 33054fb:	48 8b 4d d0          	mov    -0x30(%rbp),%rcx
 33054ff:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305503:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305507:	48 89 c6             	mov    %rax,%rsi
 330550a:	48 8d 3d e7 16 00 00 	lea    0x16e7(%rip),%rdi        # 3306bf8 <CopyMemoryToGuest+0x10a1>
 3305511:	b8 00 00 00 00       	mov    $0x0,%eax
 3305516:	e8 20 cd ff ff       	callq  330223b <PrintDebugLevelDebug>
 330551b:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330551f:	48 c1 e8 0c          	shr    $0xc,%rax
 3305523:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305527:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 330552e:	00 
 330552f:	eb 52                	jmp    3305583 <UpdateEptAccessPolicy+0x10f>
 3305531:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305535:	48 c1 e8 0c          	shr    $0xc,%rax
 3305539:	48 89 c2             	mov    %rax,%rdx
 330553c:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305540:	48 01 c2             	add    %rax,%rdx
 3305543:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305547:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 330554e:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 3305552:	48 83 e0 f8          	and    $0xfffffffffffffff8,%rax
 3305556:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 330555a:	48 89 d1             	mov    %rdx,%rcx
 330555d:	48 c1 e9 0c          	shr    $0xc,%rcx
 3305561:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 3305565:	48 01 d1             	add    %rdx,%rcx
 3305568:	48 0b 45 d0          	or     -0x30(%rbp),%rax
 330556c:	48 89 c2             	mov    %rax,%rdx
 330556f:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305573:	48 81 c1 00 36 04 00 	add    $0x43600,%rcx
 330557a:	48 89 14 c8          	mov    %rdx,(%rax,%rcx,8)
 330557e:	48 83 45 f8 01       	addq   $0x1,-0x8(%rbp)
 3305583:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305587:	48 3b 45 f0          	cmp    -0x10(%rbp),%rax
 330558b:	72 a4                	jb     3305531 <UpdateEptAccessPolicy+0xbd>
 330558d:	48 8d 3d a8 16 00 00 	lea    0x16a8(%rip),%rdi        # 3306c3c <CopyMemoryToGuest+0x10e5>
 3305594:	b8 00 00 00 00       	mov    $0x0,%eax
 3305599:	e8 9d cc ff ff       	callq  330223b <PrintDebugLevelDebug>
 330559e:	b8 00 00 00 00       	mov    $0x0,%eax
 33055a3:	c9                   	leaveq 
 33055a4:	c3                   	retq   

00000000033055a5 <RegisterVmExitHandler>:
 33055a5:	f3 0f 1e fa          	endbr64 
 33055a9:	55                   	push   %rbp
 33055aa:	48 89 e5             	mov    %rsp,%rbp
 33055ad:	48 83 ec 18          	sub    $0x18,%rsp
 33055b1:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33055b5:	48 89 75 f0          	mov    %rsi,-0x10(%rbp)
 33055b9:	48 89 55 e8          	mov    %rdx,-0x18(%rbp)
 33055bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33055c1:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 33055c5:	48 01 d0             	add    %rdx,%rax
 33055c8:	48 05 00 b8 21 02    	add    $0x221b800,%rax
 33055ce:	c6 00 01             	movb   $0x1,(%rax)
 33055d1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33055d5:	48 8b 55 f0          	mov    -0x10(%rbp),%rdx
 33055d9:	48 8d 8a 0c 37 44 00 	lea    0x44370c(%rdx),%rcx
 33055e0:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 33055e4:	48 89 54 c8 08       	mov    %rdx,0x8(%rax,%rcx,8)
 33055e9:	90                   	nop
 33055ea:	c9                   	leaveq 
 33055eb:	c3                   	retq   

00000000033055ec <SetupE820Hook>:
 33055ec:	f3 0f 1e fa          	endbr64 
 33055f0:	55                   	push   %rbp
 33055f1:	48 89 e5             	mov    %rsp,%rbp
 33055f4:	48 83 ec 30          	sub    $0x30,%rsp
 33055f8:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 33055fc:	bf 00 00 00 00       	mov    $0x0,%edi
 3305601:	e8 3d d1 ff ff       	callq  3302743 <PhysicalToVirtual>
 3305606:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 330560a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330560e:	48 83 c0 54          	add    $0x54,%rax
 3305612:	8b 00                	mov    (%rax),%eax
 3305614:	c1 e8 10             	shr    $0x10,%eax
 3305617:	89 c0                	mov    %eax,%eax
 3305619:	25 ff ff 00 00       	and    $0xffff,%eax
 330561e:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305622:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305626:	48 83 c0 54          	add    $0x54,%rax
 330562a:	8b 00                	mov    (%rax),%eax
 330562c:	89 c0                	mov    %eax,%eax
 330562e:	25 ff ff 00 00       	and    $0xffff,%eax
 3305633:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305637:	66 c7 45 e5 0f 01    	movw   $0x10f,-0x1b(%rbp)
 330563d:	c6 45 e7 c1          	movb   $0xc1,-0x19(%rbp)
 3305641:	48 8d 45 e5          	lea    -0x1b(%rbp),%rax
 3305645:	ba 03 00 00 00       	mov    $0x3,%edx
 330564a:	48 89 c6             	mov    %rax,%rsi
 330564d:	bf fc ff 00 00       	mov    $0xfffc,%edi
 3305652:	e8 4a cd ff ff       	callq  33023a1 <CopyMemory>
 3305657:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330565b:	48 83 c0 54          	add    $0x54,%rax
 330565f:	c7 00 fc ff 00 00    	movl   $0xfffc,(%rax)
 3305665:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305669:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 330566d:	48 89 90 60 86 00 00 	mov    %rdx,0x8660(%rax)
 3305674:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305678:	48 c1 e0 04          	shl    $0x4,%rax
 330567c:	48 89 c2             	mov    %rax,%rdx
 330567f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305683:	48 89 90 58 86 00 00 	mov    %rdx,0x8658(%rax)
 330568a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 330568e:	48 83 c0 54          	add    $0x54,%rax
 3305692:	8b 00                	mov    (%rax),%eax
 3305694:	3d fc ff 00 00       	cmp    $0xfffc,%eax
 3305699:	74 07                	je     33056a2 <SetupE820Hook+0xb6>
 330569b:	b8 16 00 00 00       	mov    $0x16,%eax
 33056a0:	eb 05                	jmp    33056a7 <SetupE820Hook+0xbb>
 33056a2:	b8 00 00 00 00       	mov    $0x0,%eax
 33056a7:	c9                   	leaveq 
 33056a8:	c3                   	retq   

00000000033056a9 <TranslateGuestVirtualToGuestPhysical>:
 33056a9:	f3 0f 1e fa          	endbr64 
 33056ad:	55                   	push   %rbp
 33056ae:	48 89 e5             	mov    %rsp,%rbp
 33056b1:	48 83 ec 50          	sub    $0x50,%rsp
 33056b5:	48 89 7d b8          	mov    %rdi,-0x48(%rbp)
 33056b9:	48 89 75 b0          	mov    %rsi,-0x50(%rbp)
 33056bd:	bf 00 68 00 00       	mov    $0x6800,%edi
 33056c2:	e8 fc cf ff ff       	callq  33026c3 <vmread>
 33056c7:	83 e0 01             	and    $0x1,%eax
 33056ca:	48 85 c0             	test   %rax,%rax
 33056cd:	75 13                	jne    33056e2 <TranslateGuestVirtualToGuestPhysical+0x39>
 33056cf:	48 8d 3d 7a 15 00 00 	lea    0x157a(%rip),%rdi        # 3306c50 <CopyMemoryToGuest+0x10f9>
 33056d6:	b8 00 00 00 00       	mov    $0x0,%eax
 33056db:	e8 b5 ca ff ff       	callq  3302195 <Print>
 33056e0:	eb fe                	jmp    33056e0 <TranslateGuestVirtualToGuestPhysical+0x37>
 33056e2:	bf 00 68 00 00       	mov    $0x6800,%edi
 33056e7:	e8 d7 cf ff ff       	callq  33026c3 <vmread>
 33056ec:	48 25 00 00 00 80    	and    $0xffffffff80000000,%rax
 33056f2:	48 85 c0             	test   %rax,%rax
 33056f5:	75 13                	jne    330570a <TranslateGuestVirtualToGuestPhysical+0x61>
 33056f7:	48 8d 3d e2 15 00 00 	lea    0x15e2(%rip),%rdi        # 3306ce0 <CopyMemoryToGuest+0x1189>
 33056fe:	b8 00 00 00 00       	mov    $0x0,%eax
 3305703:	e8 8d ca ff ff       	callq  3302195 <Print>
 3305708:	eb fe                	jmp    3305708 <TranslateGuestVirtualToGuestPhysical+0x5f>
 330570a:	bf 04 68 00 00       	mov    $0x6804,%edi
 330570f:	e8 af cf ff ff       	callq  33026c3 <vmread>
 3305714:	83 e0 20             	and    $0x20,%eax
 3305717:	48 85 c0             	test   %rax,%rax
 330571a:	75 13                	jne    330572f <TranslateGuestVirtualToGuestPhysical+0x86>
 330571c:	48 8d 3d 4d 16 00 00 	lea    0x164d(%rip),%rdi        # 3306d70 <CopyMemoryToGuest+0x1219>
 3305723:	b8 00 00 00 00       	mov    $0x0,%eax
 3305728:	e8 68 ca ff ff       	callq  3302195 <Print>
 330572d:	eb fe                	jmp    330572d <TranslateGuestVirtualToGuestPhysical+0x84>
 330572f:	bf 02 68 00 00       	mov    $0x6802,%edi
 3305734:	e8 8a cf ff ff       	callq  33026c3 <vmread>
 3305739:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 330573d:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
 3305744:	ff 00 00 
 3305747:	48 23 45 b8          	and    -0x48(%rbp),%rax
 330574b:	48 89 45 c8          	mov    %rax,-0x38(%rbp)
 330574f:	48 b8 ff ff ff ff ff 	movabs $0xffffffffffff,%rax
 3305756:	ff 00 00 
 3305759:	48 23 45 f0          	and    -0x10(%rbp),%rax
 330575d:	0f b7 55 cc          	movzwl -0x34(%rbp),%edx
 3305761:	66 c1 ea 07          	shr    $0x7,%dx
 3305765:	0f b7 d2             	movzwl %dx,%edx
 3305768:	48 c1 e2 03          	shl    $0x3,%rdx
 330576c:	48 01 d0             	add    %rdx,%rax
 330576f:	48 89 c7             	mov    %rax,%rdi
 3305772:	e8 74 02 00 00       	callq  33059eb <TranslateGuestPhysicalToHostVirtual>
 3305777:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 330577b:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 330577f:	0f b6 00             	movzbl (%rax),%eax
 3305782:	83 e0 01             	and    $0x1,%eax
 3305785:	84 c0                	test   %al,%al
 3305787:	75 0a                	jne    3305793 <TranslateGuestVirtualToGuestPhysical+0xea>
 3305789:	b8 0f 00 00 00       	mov    $0xf,%eax
 330578e:	e9 e4 01 00 00       	jmpq   3305977 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 3305793:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305797:	48 8b 00             	mov    (%rax),%rax
 330579a:	48 c1 e8 0c          	shr    $0xc,%rax
 330579e:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33057a5:	00 00 00 
 33057a8:	48 21 d0             	and    %rdx,%rax
 33057ab:	48 c1 e0 0c          	shl    $0xc,%rax
 33057af:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33057b6:	00 00 00 
 33057b9:	48 21 d0             	and    %rdx,%rax
 33057bc:	48 89 c2             	mov    %rax,%rdx
 33057bf:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 33057c3:	48 c1 e8 1e          	shr    $0x1e,%rax
 33057c7:	66 25 ff 01          	and    $0x1ff,%ax
 33057cb:	0f b7 c0             	movzwl %ax,%eax
 33057ce:	48 c1 e0 03          	shl    $0x3,%rax
 33057d2:	48 01 d0             	add    %rdx,%rax
 33057d5:	48 89 c7             	mov    %rax,%rdi
 33057d8:	e8 0e 02 00 00       	callq  33059eb <TranslateGuestPhysicalToHostVirtual>
 33057dd:	48 89 45 e0          	mov    %rax,-0x20(%rbp)
 33057e1:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33057e5:	0f b6 00             	movzbl (%rax),%eax
 33057e8:	83 e0 01             	and    $0x1,%eax
 33057eb:	84 c0                	test   %al,%al
 33057ed:	75 0a                	jne    33057f9 <TranslateGuestVirtualToGuestPhysical+0x150>
 33057ef:	b8 0f 00 00 00       	mov    $0xf,%eax
 33057f4:	e9 7e 01 00 00       	jmpq   3305977 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 33057f9:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 33057fd:	48 8b 00             	mov    (%rax),%rax
 3305800:	48 c1 e8 0c          	shr    $0xc,%rax
 3305804:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330580b:	00 00 00 
 330580e:	48 21 d0             	and    %rdx,%rax
 3305811:	48 c1 e0 0c          	shl    $0xc,%rax
 3305815:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330581c:	00 00 00 
 330581f:	48 21 d0             	and    %rdx,%rax
 3305822:	48 89 c2             	mov    %rax,%rdx
 3305825:	0f b7 45 ca          	movzwl -0x36(%rbp),%eax
 3305829:	66 c1 e8 05          	shr    $0x5,%ax
 330582d:	66 25 ff 01          	and    $0x1ff,%ax
 3305831:	0f b7 c0             	movzwl %ax,%eax
 3305834:	48 c1 e0 03          	shl    $0x3,%rax
 3305838:	48 01 d0             	add    %rdx,%rax
 330583b:	48 89 c7             	mov    %rax,%rdi
 330583e:	e8 a8 01 00 00       	callq  33059eb <TranslateGuestPhysicalToHostVirtual>
 3305843:	48 89 45 d8          	mov    %rax,-0x28(%rbp)
 3305847:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 330584b:	0f b6 00             	movzbl (%rax),%eax
 330584e:	83 e0 01             	and    $0x1,%eax
 3305851:	84 c0                	test   %al,%al
 3305853:	75 0a                	jne    330585f <TranslateGuestVirtualToGuestPhysical+0x1b6>
 3305855:	b8 0f 00 00 00       	mov    $0xf,%eax
 330585a:	e9 18 01 00 00       	jmpq   3305977 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 330585f:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305863:	0f b6 00             	movzbl (%rax),%eax
 3305866:	83 e0 80             	and    $0xffffff80,%eax
 3305869:	84 c0                	test   %al,%al
 330586b:	74 41                	je     33058ae <TranslateGuestVirtualToGuestPhysical+0x205>
 330586d:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305871:	48 8b 00             	mov    (%rax),%rax
 3305874:	48 c1 e8 0c          	shr    $0xc,%rax
 3305878:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330587f:	00 00 00 
 3305882:	48 21 d0             	and    %rdx,%rax
 3305885:	48 c1 e0 0c          	shl    $0xc,%rax
 3305889:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 3305890:	00 00 00 
 3305893:	48 21 d0             	and    %rdx,%rax
 3305896:	48 89 c2             	mov    %rax,%rdx
 3305899:	48 8b 45 b8          	mov    -0x48(%rbp),%rax
 330589d:	25 ff ff 1f 00       	and    $0x1fffff,%eax
 33058a2:	48 01 d0             	add    %rdx,%rax
 33058a5:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 33058a9:	e9 b9 00 00 00       	jmpq   3305967 <TranslateGuestVirtualToGuestPhysical+0x2be>
 33058ae:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 33058b2:	48 8b 00             	mov    (%rax),%rax
 33058b5:	48 c1 e8 0c          	shr    $0xc,%rax
 33058b9:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33058c0:	00 00 00 
 33058c3:	48 21 d0             	and    %rdx,%rax
 33058c6:	48 c1 e0 0c          	shl    $0xc,%rax
 33058ca:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 33058d1:	00 00 00 
 33058d4:	48 21 d0             	and    %rdx,%rax
 33058d7:	48 89 c2             	mov    %rax,%rdx
 33058da:	8b 45 c8             	mov    -0x38(%rbp),%eax
 33058dd:	c1 e8 0c             	shr    $0xc,%eax
 33058e0:	66 25 ff 01          	and    $0x1ff,%ax
 33058e4:	0f b7 c0             	movzwl %ax,%eax
 33058e7:	48 c1 e0 03          	shl    $0x3,%rax
 33058eb:	48 01 d0             	add    %rdx,%rax
 33058ee:	48 89 c7             	mov    %rax,%rdi
 33058f1:	e8 f5 00 00 00       	callq  33059eb <TranslateGuestPhysicalToHostVirtual>
 33058f6:	48 89 45 d0          	mov    %rax,-0x30(%rbp)
 33058fa:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 33058fe:	0f b6 00             	movzbl (%rax),%eax
 3305901:	83 e0 01             	and    $0x1,%eax
 3305904:	84 c0                	test   %al,%al
 3305906:	75 07                	jne    330590f <TranslateGuestVirtualToGuestPhysical+0x266>
 3305908:	b8 0f 00 00 00       	mov    $0xf,%eax
 330590d:	eb 68                	jmp    3305977 <TranslateGuestVirtualToGuestPhysical+0x2ce>
 330590f:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305913:	48 8b 00             	mov    (%rax),%rax
 3305916:	48 c1 e8 0c          	shr    $0xc,%rax
 330591a:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 3305921:	00 00 00 
 3305924:	48 21 d0             	and    %rdx,%rax
 3305927:	48 c1 e0 0c          	shl    $0xc,%rax
 330592b:	48 89 c2             	mov    %rax,%rdx
 330592e:	48 b8 ff ff ff ff 0f 	movabs $0xfffffffff,%rax
 3305935:	00 00 00 
 3305938:	48 21 c2             	and    %rax,%rdx
 330593b:	0f b7 45 c8          	movzwl -0x38(%rbp),%eax
 330593f:	66 25 ff 0f          	and    $0xfff,%ax
 3305943:	0f b7 c0             	movzwl %ax,%eax
 3305946:	48 b9 ff ff ff ff 0f 	movabs $0xfffffffff,%rcx
 330594d:	00 00 00 
 3305950:	48 21 c8             	and    %rcx,%rax
 3305953:	48 01 d0             	add    %rdx,%rax
 3305956:	48 ba ff ff ff ff 0f 	movabs $0xfffffffff,%rdx
 330595d:	00 00 00 
 3305960:	48 21 d0             	and    %rdx,%rax
 3305963:	48 89 45 f8          	mov    %rax,-0x8(%rbp)
 3305967:	48 8b 45 b0          	mov    -0x50(%rbp),%rax
 330596b:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 330596f:	48 89 10             	mov    %rdx,(%rax)
 3305972:	b8 00 00 00 00       	mov    $0x0,%eax
 3305977:	c9                   	leaveq 
 3305978:	c3                   	retq   

0000000003305979 <TranslateGuestPhysicalToPhysicalAddress>:
 3305979:	f3 0f 1e fa          	endbr64 
 330597d:	55                   	push   %rbp
 330597e:	48 89 e5             	mov    %rsp,%rbp
 3305981:	48 83 ec 10          	sub    $0x10,%rsp
 3305985:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 3305989:	48 b8 ff 0f 00 00 04 	movabs $0x400000fff,%rax
 3305990:	00 00 00 
 3305993:	48 39 45 f8          	cmp    %rax,-0x8(%rbp)
 3305997:	76 13                	jbe    33059ac <TranslateGuestPhysicalToPhysicalAddress+0x33>
 3305999:	48 8d 3d 60 14 00 00 	lea    0x1460(%rip),%rdi        # 3306e00 <CopyMemoryToGuest+0x12a9>
 33059a0:	b8 00 00 00 00       	mov    $0x0,%eax
 33059a5:	e8 eb c7 ff ff       	callq  3302195 <Print>
 33059aa:	eb fe                	jmp    33059aa <TranslateGuestPhysicalToPhysicalAddress+0x31>
 33059ac:	b8 00 00 00 00       	mov    $0x0,%eax
 33059b1:	e8 fe f8 ff ff       	callq  33052b4 <GetVMMStruct>
 33059b6:	48 8b 80 88 00 00 00 	mov    0x88(%rax),%rax
 33059bd:	48 8b 55 f8          	mov    -0x8(%rbp),%rdx
 33059c1:	48 c1 ea 0c          	shr    $0xc,%rdx
 33059c5:	48 81 c2 00 36 04 00 	add    $0x43600,%rdx
 33059cc:	48 8b 04 d0          	mov    (%rax,%rdx,8),%rax
 33059d0:	48 ba 00 f0 ff ff ff 	movabs $0xfffffffff000,%rdx
 33059d7:	ff 00 00 
 33059da:	48 21 c2             	and    %rax,%rdx
 33059dd:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33059e1:	25 ff 0f 00 00       	and    $0xfff,%eax
 33059e6:	48 01 d0             	add    %rdx,%rax
 33059e9:	c9                   	leaveq 
 33059ea:	c3                   	retq   

00000000033059eb <TranslateGuestPhysicalToHostVirtual>:
 33059eb:	f3 0f 1e fa          	endbr64 
 33059ef:	55                   	push   %rbp
 33059f0:	48 89 e5             	mov    %rsp,%rbp
 33059f3:	48 83 ec 10          	sub    $0x10,%rsp
 33059f7:	48 89 7d f8          	mov    %rdi,-0x8(%rbp)
 33059fb:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 33059ff:	48 89 c7             	mov    %rax,%rdi
 3305a02:	e8 72 ff ff ff       	callq  3305979 <TranslateGuestPhysicalToPhysicalAddress>
 3305a07:	48 89 c7             	mov    %rax,%rdi
 3305a0a:	e8 34 cd ff ff       	callq  3302743 <PhysicalToVirtual>
 3305a0f:	c9                   	leaveq 
 3305a10:	c3                   	retq   

0000000003305a11 <TranslateGuestVirtualToHostVirtual>:
 3305a11:	f3 0f 1e fa          	endbr64 
 3305a15:	55                   	push   %rbp
 3305a16:	48 89 e5             	mov    %rsp,%rbp
 3305a19:	48 83 ec 20          	sub    $0x20,%rsp
 3305a1d:	48 89 7d e8          	mov    %rdi,-0x18(%rbp)
 3305a21:	48 89 75 e0          	mov    %rsi,-0x20(%rbp)
 3305a25:	48 8d 55 f8          	lea    -0x8(%rbp),%rdx
 3305a29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305a2d:	48 89 d6             	mov    %rdx,%rsi
 3305a30:	48 89 c7             	mov    %rax,%rdi
 3305a33:	e8 71 fc ff ff       	callq  33056a9 <TranslateGuestVirtualToGuestPhysical>
 3305a38:	48 85 c0             	test   %rax,%rax
 3305a3b:	74 07                	je     3305a44 <TranslateGuestVirtualToHostVirtual+0x33>
 3305a3d:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305a42:	eb 18                	jmp    3305a5c <TranslateGuestVirtualToHostVirtual+0x4b>
 3305a44:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305a48:	48 89 c7             	mov    %rax,%rdi
 3305a4b:	e8 9b ff ff ff       	callq  33059eb <TranslateGuestPhysicalToHostVirtual>
 3305a50:	48 8b 55 e0          	mov    -0x20(%rbp),%rdx
 3305a54:	48 89 02             	mov    %rax,(%rdx)
 3305a57:	b8 00 00 00 00       	mov    $0x0,%eax
 3305a5c:	c9                   	leaveq 
 3305a5d:	c3                   	retq   

0000000003305a5e <CopyGuestMemory>:
 3305a5e:	f3 0f 1e fa          	endbr64 
 3305a62:	55                   	push   %rbp
 3305a63:	48 89 e5             	mov    %rsp,%rbp
 3305a66:	48 83 ec 40          	sub    $0x40,%rsp
 3305a6a:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3305a6e:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305a72:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3305a76:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305a7d:	00 
 3305a7e:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3305a85:	00 
 3305a86:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305a8a:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305a8e:	48 01 c2             	add    %rax,%rdx
 3305a91:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 3305a95:	48 89 c6             	mov    %rax,%rsi
 3305a98:	48 89 d7             	mov    %rdx,%rdi
 3305a9b:	e8 71 ff ff ff       	callq  3305a11 <TranslateGuestVirtualToHostVirtual>
 3305aa0:	48 85 c0             	test   %rax,%rax
 3305aa3:	74 0a                	je     3305aaf <CopyGuestMemory+0x51>
 3305aa5:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305aaa:	e9 a6 00 00 00       	jmpq   3305b55 <CopyGuestMemory+0xf7>
 3305aaf:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305ab3:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305ab7:	48 01 d0             	add    %rdx,%rax
 3305aba:	25 ff 0f 00 00       	and    $0xfff,%eax
 3305abf:	48 85 c0             	test   %rax,%rax
 3305ac2:	74 1d                	je     3305ae1 <CopyGuestMemory+0x83>
 3305ac4:	48 8b 55 d0          	mov    -0x30(%rbp),%rdx
 3305ac8:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305acc:	48 01 d0             	add    %rdx,%rax
 3305acf:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305ad5:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3305adb:	48 2b 45 d0          	sub    -0x30(%rbp),%rax
 3305adf:	eb 05                	jmp    3305ae6 <CopyGuestMemory+0x88>
 3305ae1:	b8 00 10 00 00       	mov    $0x1000,%eax
 3305ae6:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305aea:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305aee:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 3305af2:	77 22                	ja     3305b16 <CopyGuestMemory+0xb8>
 3305af4:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305af8:	48 89 c1             	mov    %rax,%rcx
 3305afb:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305aff:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305b03:	48 89 ce             	mov    %rcx,%rsi
 3305b06:	48 89 c7             	mov    %rax,%rdi
 3305b09:	e8 93 c8 ff ff       	callq  33023a1 <CopyMemory>
 3305b0e:	90                   	nop
 3305b0f:	b8 00 00 00 00       	mov    $0x0,%eax
 3305b14:	eb 3f                	jmp    3305b55 <CopyGuestMemory+0xf7>
 3305b16:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305b1a:	48 89 c1             	mov    %rax,%rcx
 3305b1d:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305b21:	48 8b 45 d8          	mov    -0x28(%rbp),%rax
 3305b25:	48 89 ce             	mov    %rcx,%rsi
 3305b28:	48 89 c7             	mov    %rax,%rdi
 3305b2b:	e8 71 c8 ff ff       	callq  33023a1 <CopyMemory>
 3305b30:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b34:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305b38:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b3c:	48 01 45 d8          	add    %rax,-0x28(%rbp)
 3305b40:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305b44:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
 3305b48:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305b4c:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3305b50:	e9 31 ff ff ff       	jmpq   3305a86 <CopyGuestMemory+0x28>
 3305b55:	c9                   	leaveq 
 3305b56:	c3                   	retq   

0000000003305b57 <CopyMemoryToGuest>:
 3305b57:	f3 0f 1e fa          	endbr64 
 3305b5b:	55                   	push   %rbp
 3305b5c:	48 89 e5             	mov    %rsp,%rbp
 3305b5f:	48 83 ec 40          	sub    $0x40,%rsp
 3305b63:	48 89 7d d8          	mov    %rdi,-0x28(%rbp)
 3305b67:	48 89 75 d0          	mov    %rsi,-0x30(%rbp)
 3305b6b:	48 89 55 c8          	mov    %rdx,-0x38(%rbp)
 3305b6f:	48 c7 45 f8 00 00 00 	movq   $0x0,-0x8(%rbp)
 3305b76:	00 
 3305b77:	48 c7 45 f0 00 00 00 	movq   $0x0,-0x10(%rbp)
 3305b7e:	00 
 3305b7f:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305b83:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305b87:	48 01 c2             	add    %rax,%rdx
 3305b8a:	48 8d 45 e0          	lea    -0x20(%rbp),%rax
 3305b8e:	48 89 c6             	mov    %rax,%rsi
 3305b91:	48 89 d7             	mov    %rdx,%rdi
 3305b94:	e8 78 fe ff ff       	callq  3305a11 <TranslateGuestVirtualToHostVirtual>
 3305b99:	48 85 c0             	test   %rax,%rax
 3305b9c:	74 0a                	je     3305ba8 <CopyMemoryToGuest+0x51>
 3305b9e:	b8 0f 00 00 00       	mov    $0xf,%eax
 3305ba3:	e9 a6 00 00 00       	jmpq   3305c4e <CopyMemoryToGuest+0xf7>
 3305ba8:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305bac:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305bb0:	48 01 d0             	add    %rdx,%rax
 3305bb3:	25 ff 0f 00 00       	and    $0xfff,%eax
 3305bb8:	48 85 c0             	test   %rax,%rax
 3305bbb:	74 1d                	je     3305bda <CopyMemoryToGuest+0x83>
 3305bbd:	48 8b 55 d8          	mov    -0x28(%rbp),%rdx
 3305bc1:	48 8b 45 f8          	mov    -0x8(%rbp),%rax
 3305bc5:	48 01 d0             	add    %rdx,%rax
 3305bc8:	48 05 ff 0f 00 00    	add    $0xfff,%rax
 3305bce:	48 25 00 f0 ff ff    	and    $0xfffffffffffff000,%rax
 3305bd4:	48 2b 45 d8          	sub    -0x28(%rbp),%rax
 3305bd8:	eb 05                	jmp    3305bdf <CopyMemoryToGuest+0x88>
 3305bda:	b8 00 10 00 00       	mov    $0x1000,%eax
 3305bdf:	48 89 45 e8          	mov    %rax,-0x18(%rbp)
 3305be3:	48 8b 45 c8          	mov    -0x38(%rbp),%rax
 3305be7:	48 3b 45 e8          	cmp    -0x18(%rbp),%rax
 3305beb:	77 22                	ja     3305c0f <CopyMemoryToGuest+0xb8>
 3305bed:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305bf1:	48 89 c1             	mov    %rax,%rcx
 3305bf4:	48 8b 55 c8          	mov    -0x38(%rbp),%rdx
 3305bf8:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305bfc:	48 89 c6             	mov    %rax,%rsi
 3305bff:	48 89 cf             	mov    %rcx,%rdi
 3305c02:	e8 9a c7 ff ff       	callq  33023a1 <CopyMemory>
 3305c07:	90                   	nop
 3305c08:	b8 00 00 00 00       	mov    $0x0,%eax
 3305c0d:	eb 3f                	jmp    3305c4e <CopyMemoryToGuest+0xf7>
 3305c0f:	48 8b 45 e0          	mov    -0x20(%rbp),%rax
 3305c13:	48 89 c1             	mov    %rax,%rcx
 3305c16:	48 8b 55 e8          	mov    -0x18(%rbp),%rdx
 3305c1a:	48 8b 45 d0          	mov    -0x30(%rbp),%rax
 3305c1e:	48 89 c6             	mov    %rax,%rsi
 3305c21:	48 89 cf             	mov    %rcx,%rdi
 3305c24:	e8 78 c7 ff ff       	callq  33023a1 <CopyMemory>
 3305c29:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c2d:	48 89 45 f0          	mov    %rax,-0x10(%rbp)
 3305c31:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c35:	48 01 45 d0          	add    %rax,-0x30(%rbp)
 3305c39:	48 8b 45 e8          	mov    -0x18(%rbp),%rax
 3305c3d:	48 29 45 c8          	sub    %rax,-0x38(%rbp)
 3305c41:	48 8b 45 f0          	mov    -0x10(%rbp),%rax
 3305c45:	48 01 45 f8          	add    %rax,-0x8(%rbp)
 3305c49:	e9 31 ff ff ff       	jmpq   3305b7f <CopyMemoryToGuest+0x28>
 3305c4e:	c9                   	leaveq 
 3305c4f:	c3                   	retq   
